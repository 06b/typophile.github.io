{
  "id": "41465",
  "title": "Design and type usage in Java applications",
  "forum": "General Discussions",
  "tags": [
    "General Discussions"
  ],
  "content": "I'm working on a project to give a facelift to an existing Java application. I am not a programmer and am dependant on a software designer I'm working with for info on what can and can not be done graphically. I presumed I would have at least as much flexibility designing for Java as I would for say, designing for the web with HTML and CSS, but I'm not so sure.\n\nThe Java guy has been indicating that he doesn't think he can do this, or do that when I've been presenting comps so I'm starting to get worried. Does anyone have any experience or advice conering Java applications? Specifically...\n\n- Is the text anti-aliasing really as bad as I have been shown?  \n- Can more than one typeface family be accessed from within a single app?  \n- Can anyone refer me to any nicely designed Java apps so I can get a sense of what IS possible.\n\nI've been looking for info on the web, but I can very little current information about Java that concerns graphic design. It all seems to be about coding or at the best, UI design at the wireframe level.\n\nThanks\n\n",
  "author": "neumann",
  "time": "28 Jan 2008 — 2:14pm",
  "uid": "5354",
  "comments": [
    {
      "time": "28 Jan 2008 — 4:40pm",
      "content": "[http://www.wefeelfine.org/](http://web.archive.org/web/20131014214438/http:/www.wefeelfine.org/ \"http://www.wefeelfine.org/\")\n\nIt was built with Processing, which is a small framework for Java, although not really recommended for conventional applications. The type is a bit blurry at small sizes, but it's still probably the best looking Java applet I've seen.\n\nBut I do believe that some things can be very hard to build with Java. That's why many developers prefer to build the application UI with Adobe's framework called Flex.\n\n-- [omine.net](http://web.archive.org/web/20131014214438/http:/www.omine.net/)\n\n"
    }
  ]
}

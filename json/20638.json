{
  "id": "20638",
  "title": "Does VOLT Help in Developing Arabic Fonts?!",
  "forum": "Build",
  "tags": [
    "Build"
  ],
  "content": "Peace be on All Friends,  \nIn VOLT, Marks Positioning is carried out Independently for each letter and for each component of every ligature?!  \nSo, to avoid the Collision of Marks with Marks and/or Letters in Arabic Fonts:  \n1 The thinest letter or ligature should be at least a bit wider than the widest mark. Just like asking 3 cowboys to stand side by side without allowing their Hats to collide. And this can be done at the expense of Beauty.  \n2 Marks should be horizontally centered on top of or below each letter and each component of every ligature. And this is not always possible even if Beauty is sacrificed.  \nSamples speak louder than words?!  \nDaringly\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/ATypeset_3857.JPG)\n\n",
  "author": "AzizMostafa",
  "time": "13 Jun 2006 — 3:18am",
  "uid": "12550",
  "comments": [
    {
      "time": "13 Jun 2006 — 11:27am",
      "content": "You can always do mark positioning in context of neighbor glyphs. So you can move marks higer if there are marks over other letters that can cause collision.\n\nDealing with ligatures is essentially the same, but may be tricky, though. OpenType model can not distinguish between mark over one or another component, except for mark-to-liga attachments. For example, for sequence of ligature and mark, lookup can say that something should happen only if mark is logically attached to the first component. There could be workaround for that, for example having separate glyphs for mark over first second etc. component.\n\nThanks,  \nSergey\n\n"
    },
    {
      "time": "13 Jun 2006 — 12:24pm",
      "content": "_You can always do mark positioning in context of neighbor glyphs. So you can move marks higer if there are marks over other letters that can cause collision._\n\nIn addition to this, I have also contextually inserted a very narrow joining stroke between two letters when I need to accomodate a mark that might otherwise collide with an adjoining letter. This is appropriate in more linear designs, rather than in the kind of calligraphic design shown in the illustration. Calligraphy has its own rules for mark size and positioning.\n\n"
    },
    {
      "time": "13 Jun 2006 — 12:54pm",
      "content": "Sergey says:  \nYou can always do mark positioning in context of neighbor glyphs.So you can move marks higher if there are marks over other letters that can cause collision.\n\nSay:  \n.. Higher and higher till I get all Marks on the same level (Mac it).  \nFor the best mark positioning you can ever get with a ligature-free font, see this:  \n [http://www.nonosoft.jifisa.net/download.php](http://web.archive.org/web/20150322223843/http:/www.nonosoft.jifisa.net/download.php \"http://www.nonosoft.jifisa.net/download.php\")  \nTry Volting it!\n\nSergey continues:  \nDealing with ligatures is essentially the same, but may be tricky, though. OpenType model can not distinguish between mark over one or another component, except for mark-to-liga attachments.  \nFor example, for sequence of ligature and mark, lookup can say that something should happen only if mark is logically attached to the first component. There could be work around for that, for example having separate glyphs for mark over first, second etc. component.\n\nSay:  \nEasier said than done!  \nJust tell me please where to position what out of hundreds — not to say thousands — of marks:  \n [http://qurankareem.info/a/OthmanyFonts.zip](http://web.archive.org/web/20150322223843/http:/qurankareem.info/a/OthmanyFonts.zip \"http://qurankareem.info/a/OthmanyFonts.zip\")  \n [http://qurankareem.info/a/othmanyQuran.zip](http://web.archive.org/web/20150322223843/http:/qurankareem.info/a/othmanyQuran.zip \"http://qurankareem.info/a/othmanyQuran.zip\")  \nThis will make the brain of an octopus-minded to work overtime to work around Independently up and down, across and back, diagonally in 4 direction so that Marks wont collide.  \n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_  \nHappy Exploring\n\n"
    },
    {
      "time": "13 Jun 2006 — 5:06pm",
      "content": "<cite>Easier said than done!</cite>\n\nWho said this will be easy?! Of course Arabic typography requires very complex font logic, but it is definitely doable with OpenType layout.\n\nThanks,  \nSergey\n\n"
    },
    {
      "time": "13 Jun 2006 — 6:02pm",
      "content": "\\>but it is definitely doable with OpenType layout.\n\nreminds me of the old saying \"fonts are hard... lets go shopping\" ;-)\n\n"
    },
    {
      "time": "13 Jun 2006 — 7:43pm",
      "content": "John Hudson says:  \n... I have also contextually inserted a very narrow joining stroke between two letters when I need to accommodate a mark that might otherwise collide with an adjoining letter. This is appropriate in more linear designs, rather than in the kind of calligraphic design shown in the illustration.\n\nSay:  \nAfter All the Automation and Volting, I have to do a manual Adjustment?! That what I did in Windows 3.11. In addition to this, I had also contextually inserted a very narrow joining Space when I needed to accommodate a mark that might otherwise collide with a final letter.\n\nThis was appropriate in more linear designs and in the kind of calligraphic design shown in the illustration, too.\n\n"
    },
    {
      "time": "13 Jun 2006 — 8:17pm",
      "content": "Sergey says:  \nWho said this will be easy?! Of course Arabic typography requires very complex font logic, but it is definitely doable with OpenType layout.\n\nSay:  \nEasier done with Fontgraph 3.5 on windows 3.11.  \nGo back and re-explore!\n\n"
    },
    {
      "time": "14 Jun 2006 — 12:33pm",
      "content": "I don't understand - are you asking for help? do you like to work with VOLT? or you can do it without VOLT, and even better? If yes - great, but why the 'negative'\\* ? You don't have to use it.\n\n[\\* a lot of negative here lately; negative season?]\n\n"
    },
    {
      "time": "14 Jun 2006 — 12:49pm",
      "content": "Thanks for your Positive Feedback David  \nMy \"Uncompromisng Arabic Font\" was done without VOLT.  \n [http://typophile.com/node/19348](http://web.archive.org/web/20150322223843/http:/typophile.com/node/19348 \"http://typophile.com/node/19348\")  \nHowever, I am looking forward to transforming my (5+1) fonts into a single OTF.  \nBut it seems that Volt does not help?! Is there a better Alternative?  \nThank you once again.\n\n"
    },
    {
      "time": "14 Jun 2006 — 1:56pm",
      "content": "You're welcome Aziz.\n\nI need a lifeguard to go through that thread (typophile.com/node/19348)  \nSo, if we keep it simple (but no simpler): you want a single OpenType? You can't do it with VOLT (+ hard work) ? Why not?\n\n"
    },
    {
      "time": "14 Jun 2006 — 4:12pm",
      "content": "I get the impression that this is really just an excuse to vent on VOLT, and there's nothing wrong with that. However, Sergey & John took the question seriously and shouldn't be harshed for trying to offer some advice. Falling into the same trap I might suggest that the power users of VOLT do a lot of the number crunching outside of VOLT (eg in Excel and perl based tools), and import the source tables into VOLT for compilation - that's apparently the best approach on complex jobs.\n\n"
    },
    {
      "time": "15 Jun 2006 — 12:49am",
      "content": "hello there!!\n\nI am a new VOLT user and Im facing a problem that might seem silly to you. but i wish u can help me with this: \"im working on an Arabic open type font designed by font lab, when Im opening the font from VOLT toolbar or File/open menu, im not being able to view the glyphs, what I see i empty boxes with ID numbers. while when i open a font like \"times new romans\" lets say, i can see the letters in the edit glyphs window. so please can you help me figure out how to import a new font and be able to see the font in the edit glyph window.\n\ni wish what i said makes sense to you.\n\n"
    },
    {
      "time": "15 Jun 2006 — 5:29am",
      "content": "\\> _when Im opening the font from VOLT toolbar or File/open menu, im not being able to view the glyphs_\n\nIs the font [TrueType](http://web.archive.org/web/20150322223843/http:/typophile.com/wiki/TrueType) ?\n\n"
    },
    {
      "time": "15 Jun 2006 — 7:11am",
      "content": "I think Miguel is correct - the font is likely an OpenType CFF font, needs to be TrueType. Reason for this is that VOLT uses its own inbuilt rasterizer (TTF) rather than the system rasterizers.\n\n"
    },
    {
      "time": "15 Jun 2006 — 10:58am",
      "content": "_After All the Automation and Volting, I have to do a manual Adjustment?!_\n\nNo no no, I mean I have automatic contextual insertion of a narrow connecting stroke within the VOLT lookups.\n\n"
    },
    {
      "time": "15 Jun 2006 — 11:16am",
      "content": "Here is an example, using the Adobe Arabic font created with VOLT. The insertion of the narrow connecting stroke is done automatically, as a GSUB type 2 lookup, based on the context of the mark following the alif.\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/ylylin_6167.gif)\n\n"
    },
    {
      "time": "15 Jun 2006 — 11:24am",
      "content": "By the way, I don't think that OpenType is the _best_ way to handle Arabic text. There are, for instance, good arguments for layout systems that treat diacritic marks as a separate layer applied after word formation. Contextual mark positioning and spacing adjustment is the most difficult and cumbersome aspect of Arabic OpenType, especially if one wants refinement. The benefit of OpenType is in its wide support and adaptability. If you have a different solution that works for your needs -- even if it only works in one application and requires macros --, is there a need to make an OpenType version?\n\n"
    },
    {
      "time": "15 Jun 2006 — 11:29am",
      "content": "Thanks John for your input.  \nThough the example given does not occur in Arabic, I do understand what you mean. Any how, if it is applied to the last word in the first sample (on the left), it will be spoilt?  \nHow if a word ends with R+TaMarbota and the Tanween of TaMarbota collides with R?\n\n"
    },
    {
      "time": "15 Jun 2006 — 11:29am",
      "content": "\\> There are, for instance, good arguments for layout systems that treat diacritic marks as a separate layer applied after word formation.\n\nSuch as?\n\n"
    },
    {
      "time": "15 Jun 2006 — 12:35pm",
      "content": "John Hudson says:  \nBy the way, I don’t think that OpenType is the best way to handle Arabic text.\n\nSay:  \nOpenType is the best way to handle marks-free Arabic text?  \nSo, let us concentrate on Ligatures.  \nIn ArabicTypesetting, a number of 2&3-component ligatures were built.  \nIn Nafees Naskh of [http://www.crulp.org](http://web.archive.org/web/20150322223843/http:/www.crulp.org/ \"http://www.crulp.org\"), instead, all the possible shapes of characters to form ligatures were built — save LamAlif of course.  \nWhich approach do you see better and Why?\n\n"
    },
    {
      "time": "16 Jun 2006 — 9:03am",
      "content": "Back at the service of Friends,  \nHere are 2 lines of the same Arabic Text using ArabicTypesetting OTF:  \nthe lower is marked and the upper is marks-free.\n\nBy comparison, one can easily see:  \nThe left significant word in the lower line is a bit longer than the above due to the narrow stroke between its first and second letters, as mentioned by John Hudson .  \nThe 2 Middle words in each line have the same shape irrespective of Marks.  \nThe 3 words on the right of the lower line are not ligatured as above. In other words. Marks spoilt the ligatures.\n\nWhy this Inconsistent Behaviour?!\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/AType2_3872.JPG)\n\n"
    },
    {
      "time": "16 Jun 2006 — 11:38am",
      "content": "John Hudson says:  \nThere are, for instance, good arguments for layout systems that treat diacritic marks as a separate layer applied after word formation.  \n...  \nIf you have a different solution that works for your needs — even if it only works in one application and requires macros —, is there a need to make an OpenType version?\n\nSay:  \nYes. There is a need to make an OpenType version to benefit from the OpenType wide support and adaptability to long documents not a couple of lines that can be fantastically handled in a number of applications by creating 2 layers: one for letters and the other for marks!\n\n"
    },
    {
      "time": "16 Jun 2006 — 12:03pm",
      "content": "_How if a word ends with R+TaMarbota and the Tanween of TaMarbota collides with R_\n\nThere are two ways to deal with this kind of collision. I believe the more traditional technique is to contextually lower the Tanween so that it no longer collides with the R. Another technique is to introduce a contextually sensitive kerning adjustment between the R and the TaMarbota when the latter is followed by a below mark. I think the decision which method to use depends very much on the type design. In a very modern, linear design one might want to make the heights of marks quite regular and not raise or lower them contextually, so in that case the kerning option might be best. In a traditional naskh design, though, one might want to preserve the letter relationships and allow the marks to move as necessary; this better emulates the scribal approach.\n\n"
    },
    {
      "time": "16 Jun 2006 — 12:08pm",
      "content": "_So, let us concentrate on Ligatures.  \nIn ArabicTypesetting, a number of 2&3-component ligatures were built.  \nIn Nafees Naskh of [http://www.crulp.org](http://web.archive.org/web/20150322223843/http:/www.crulp.org/ \"http://www.crulp.org\"), instead, all the possible shapes of characters to form ligatures were built — save LamAlif of course.  \nWhich approach do you see better and Why?_\n\nAlthough every Arabic font I have worked on to date has involved ligature glyphs for one reason or another, I actually think that the better approach is not to use ligatures, but instead to have component stroke shapes which are contextually substituted to produce the correct forms. This technique is much more adaptable and efficient. Consider, for example, Monotype Nastaliq, which had up to 22,000 ligature glyphs -- some for entire words -- in its late metal and final phototype versions, but which has recently been remade in OpenType using only a small fraction of that number of glyphs.\n\nI'm aware of some fonts that even use component strokes to create the lam\\_alif sequence, i.e. that do not contain any ligatures at all.\n\n"
    },
    {
      "time": "16 Jun 2006 — 12:17pm",
      "content": "David,\n\nTom Milo's DecoType Arabic layout system uses a layering approach which follows the way in which calligraphers construct a word. First the 'archigraphemes' of the letters are written; these are the letters, correctly formed, but without any marks at all, not even the distinguishing dots. Then the dots are written relative to the letterforms and taking into account context of nearby strokes. Then vowels are written relative to both letterforms and dots. If I remember correctly, Tom breaks the system down into about seven different layers, based on classification of marks. Also, marks in the system are not of fixed size, but may be longer or shorter depending on context, as found in calligraphy.\n\nAlthough all my own Arabic work has been in OpenType, I'm pretty convinced that only an approach like Tom's can result in optimal mark positioning. The downside of such a system is that it tends to be very slow: not something you would want to use for, e.g. e-mail. But in the context of book production, it is the best thing available.\n\n"
    },
    {
      "time": "16 Jun 2006 — 12:27pm",
      "content": "_The left significant word in the lower line is a bit longer than the above due to the narrow stroke between its first and second letters, as mentioned by John Hudson._\n\nIn this case, I believe the method is not an inserted narrow stroke but a variant form of the K, but yes the result is the same.\n\n_The 3 words on the right of the lower line are not ligatured as above. In other words. Marks spoilt the ligatures._\n\nThis font contains two different kinds of ligature lookups. Some ligatures are allowed to form even when marks are involved in the sequence (in VOLT, they are set to process NONE of the mark glyphs), and some ligatures are inhibited from forming when marks are involved (in VOLT, they are set to process ALL mark glyphs). This is a design decision. In the Arabic Typsetting font, Mamoun Sakkal decided to prevent ligatures involving vertical stacking from forming when marks are applied, because in these situations it is sometimes confusing, even for the reader, to know to which letter in the ligature a mark is applied.\n\nI use the same method when dealing with the initial lam\\_mim sequence, in which the mim portion of the ligature ends up to the right of the lam, which phonetically precedes it. So if the lam takes a mark, I prevent this ligature from forming because it is too easy to be confused about which letter is taking the mark.\n\nOf course, if one is seeking to emulate the traditional naskh style including its mark positioning, then one probably doesn't want to inhibit ligation in these circumstances. But then one is also presuming a level of readership that is quite high.\n\n"
    },
    {
      "time": "16 Jun 2006 — 12:45pm",
      "content": "Thanks John. Just read his paper (20th International Unicode conference)\n\n"
    },
    {
      "time": "16 Jun 2006 — 1:18pm",
      "content": "Thanks John,  \n...... Monotype Nastaliq has recently been remade in OpenType using only a small fraction of that number of glyphs.  \nHow Lucky! No Bites (Marks)\n\nTom Milo’s DecoType Arabic layout system..... it is the best thing available.  \nKelk2000 has no match:  \n [http://www.kelk.ws](http://web.archive.org/web/20150322223843/http:/www.kelk.ws/ \"http://www.kelk.ws\")  \nAppreciatively,\n\n"
    },
    {
      "time": "16 Jun 2006 — 7:19pm",
      "content": "I wasn't familiar with the Kelk2000 stuff. Thank you fr the link.\n\nIt isn't clear, though, from the limited English information available on the website whether the results of this system are live text. There is talk about creating 'artwork', which looks very impressive (reminds me of Tom's 'Make Calligraphy' plug-in for MS Office 2000), but does it remain live (Unicode?) searchable and editable text? That is really key in the context of crossmedia publishing, which is obviously becoming more and more important.\n\n"
    },
    {
      "time": "16 Jun 2006 — 7:21pm",
      "content": "By the way, at the Unicode conference in California in March Tom showed a demo of the stuff he has been working on with Winsoft as a plug-in for the Middle East version of InDesign CS3. It works a little like a CJK input method: you type a word in Unicode and are presented with all the valid options for writing that word according to the rules of the script style you are using, and you select the one you want. Very impressive.\n\n"
    },
    {
      "time": "17 Jun 2006 — 1:22am",
      "content": "John On behalf of Tom & WinSoft:  \nYou type a word in Unicode and are presented with all the valid options for writing that word according to the rules of the script style you are using, and you select the one you want. Very impressive.\n\nSay: That is exactly what Kelk2000 does.\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/Kelk1_4648.JPG)\n\n"
    },
    {
      "time": "17 Jun 2006 — 1:24am",
      "content": "John Hudson says:  \nIn the Arabic Typesetting font, Mamoun Sakkal decided to prevent ligatures involving vertical stacking from forming when marks are applied, because in these situations it is sometimes confusing, even for the reader, to know to which letter in the ligature a mark is applied.  \nI use the same method when dealing with the initial lam\\_mim sequence, in which the mim portion of the ligature ends up to the right of the lam, which phonetically precedes it. So if the lam takes a mark, I prevent this ligature from forming because it is too easy to be confused about which letter is taking the mark.\n\nSorry to say: Unsuccessful Decision!  \nSave in the Lam\\_mim sequence, sacrificing ligatures elsewhere was not justifiable!  \nArab eyes do snap Marks on ligatures to their corresponding components:  \nThe right and left significant marks are respectively snapped to the right and left components and the middles to the middles.  \nAnd this is intuitive to the non-Arab eyes too.\n\nWorse is the shifting up of the beginning of words like the marked one here. The arm of the second letter appears higher than Alif?!  \nWish the unmarked shape were maintained.\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/AType3_5515.JPG)\n\n"
    },
    {
      "time": "17 Jun 2006 — 3:19am",
      "content": "How if a word ends with R+TaMarbota and the Tanween of TaMarbota collides with R? (Right)\n\nJohn says:  \n... I believe the more traditional technique is to contextually lower the Tanween so that it no longer collides with the R. (Middle)  \nSay: This wont Only look odd but will transgress the lower line (Win-Descent) also.\n\nJohn says:  \n.. Another technique is to introduce a contextually sensitive kerning adjustment between the R and the TaMarbota when the latter is followed by a below mark. (Left)  \nSay: This is the Only possible solution unfortunately not applied in the said OTF.\n\nJohn says:  \n... In a very modern, linear design one might want to make the heights of marks quite regular and not raise or lower them contextually...  \nSay: No way!\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/AType4_6011.JPG)\n\n"
    },
    {
      "time": "17 Jun 2006 — 5:00am",
      "content": "My last posting has changed alot.  \nPlease check it before replying.  \nThanking you and Apologizing for the inconvenience.  \nHappy Postings\n\n"
    },
    {
      "time": "17 Jun 2006 — 3:38pm",
      "content": "_Sorry to say: Unsuccessful Decision!  \nSave in the Lam\\_mim sequence, sacrificing ligatures elsewhere was not justifiable!  \nArab eyes do snap Marks on ligatures to their corresponding components:  \nThe right and left significant marks are respectively snapped to the right and left components and the middles to the middles.  \nAnd this is intuitive to the non-Arab eyes too._\n\nSince I wasn't responsible for the font in question (at least, not for the Arabic part of it), I don't want to second guess the reasons for the ligature decisions. I'll just note that, obviously, Mamoun Sakkal has 'Arab eyes', and he made these decisions.\n\n_Worse is the shifting up of the beginning of words like the marked one here. The arm of the second letter appears higher than Alif?!  \nWish the unmarked shape were maintained._\n\nI agree that this looks quite unhappy.\n\n"
    },
    {
      "time": "20 Jun 2006 — 11:47am",
      "content": "Thanks John for your understanding and tolerance.  \nIn the said font, no mid-word ligatures were included. Obviously, there was no difficulty in that and words like the alif-lamed here would look as happy as their sisters.  \nWas that up to the Decision-Maker also?\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/AType5_6419.JPG)\n\n"
    },
    {
      "time": "20 Jun 2006 — 7:32pm",
      "content": "Yes. Decisions about what glyphs are font contains and how they work are the decisions of the designer.\n\nIn most Arabic fonts I have worked with, ligatures tend to be limited to a few isolated sequences, a few initial sequences, and generally more final sequences. But there is no reason why a font could not contain medial ligatures.\n\nThe issue that one runs into, though, is deciding which ligatures take preference. This is another reason why I favour a non-ligature approach, which is more flexible and is not constrained by choices about what ligatures to include and which take precedence.\n\n"
    },
    {
      "time": "20 Jun 2006 — 9:09pm",
      "content": "\\> But there is no reason why a font could not contain medial ligatures.  \nHow wonderful the font will look like then!  \nMedial ligatures make words shorter (less horizontal) and more comfortable to the eyes ( for Arabs and non-Arabs):\n\n\\> The issue that one runs into, though, is deciding which ligatures take preference.  \nThis should not be an issue as the priority is given to 2 middle shapes: Meem then to the sea-horse (Jeem and likewise).\n\n\\> ... This is another reason why I favour a non-ligature approach ....  \nA better approach is a combination of the 2: 3&4-component ligatures and stroke shapes to produce 2-component ligatures.\n\nYours for Beautiful Arabic Faces, John\n\n"
    },
    {
      "time": "20 Jun 2006 — 9:34pm",
      "content": "_Medial ligatures make words shorter (less horizontal) and more comfortable to the eyes ( for Arabs and non-Arabs)_\n\nLess horizontal, of course, usually means more vertical, and this _may_ have been a factor in the decision not to employ medial ligatures in the Arabic Typesetting font. This font is mainly going to be used in an application like MS Word, by users who are used to employing fonts using the default linespacing. In such a situation, having word forms growing tall through use of medial ligatures could cause problems with parts of letters being clipped as they extend beyond the font's WinAscent setting. Obviously in fonts designed primarily for use by experienced typographers such as yourself, or in professional page layout applications, this would be less of a concern.\n\n"
    },
    {
      "time": "20 Jun 2006 — 10:21pm",
      "content": "\\> Less horizontal, of course, usually means more vertical  \nWhat makes you jump to this wrong conclusion?  \nSimply avoid Ligatures with the tall Ta&Za and Kaf and you are done!  \nYours with [Flowers](http://web.archive.org/web/20150322223843/http:/www.crauswords.com/flowers/WFlowers.htm)\n\n"
    },
    {
      "time": "20 Jun 2006 — 11:03pm",
      "content": "\\> ... and this may have been a factor in the decision not to employ medial ligatures in the Arabic Typesetting font... In such a situation, having word forms growing tall through use of medial ligatures could cause problems with parts of letters being clipped as they extend beyond the font’s WinAscent setting.\n\nAnother Guess?  \nThe raised letter forms in the said font speak louder than ligatures?!\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/AType3_6212.JPG)\n\n"
    },
    {
      "time": "21 Jun 2006 — 12:17am",
      "content": "I was looking at your earlier example of the dad\\_jeem ligature, and thinking that if you maintained that if the lam were raised to connect to the dad in its ligated form, the overall height would be very tall: taller even than the raised letter example you show here.\n\n"
    },
    {
      "time": "21 Jun 2006 — 10:54am",
      "content": "In the case of Lam+Dad+jeem, the lam should be a little bit lowered and its lower end curved to shoulder Dad...  \nMore importantly, the Dad+jeem should not be in that height and thickness...  \nAccurate Calculation counts?!\n\n"
    },
    {
      "time": "22 Jun 2006 — 11:45am",
      "content": "So far, Marks and Ligatures have been covered, but kerning was out of discussion.  \nSampling 3 words in the ArabicTypesetting font created by John Hudson with VOLT, see how the kerning between (Z+Alif) and (R+3ain) has shortened and beautified the middle word. But no kerning took place between (R+Alif) in the left word nor between (R+3ain) in the right one...  \nWhy does kerning work in some places and does not work for the very couple(s) elsewhere? Was the fault in VOLT? Or elsewhere?\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/AType6_4467.JPG)\n\n"
    },
    {
      "time": "22 Jun 2006 — 5:19pm",
      "content": "Aziz, I did not create the Arabic Typesetting font: I only designed the Latin portion of the typeface. Mamoun Sakkal designed the Arabic, beginning with an initial idea from Paul Nelson, and Mamoun also did the VOLT work for the font.\n\nI think the kerning problem you are seeing must be due to the Arabic Typesetting kerning being implemented as a width adjustment on the first glyph, which is how GPOS kerning is properly implemented for _left-to-right_ scripts. When this font was made, no one had figured out that right-to-left kerning needs to be implemented differently -- as equivalent width and positioning adjustments to the second glyph --; I presume this will be fixed in the next version of this font. [Microsoft may be concerned about backwards compatibility and text reflow in existing documents, but this kerning problem is so bad that I think such concerns should be ignored.]\n\nIf right-to-left kerning is implemented in the same way as left-to-right, only every second pair of glyphs gets kerned, and this is what you are seeing in your test. If you were to add another character before the sequence زرع then you would see the kerning suddently applied between رع. You see this in the graphic below. The second line shows the Adobe Arabic font, in which the kerning has been applied to the second glyph in the lookups, and the spacing is consistent regardless of the number of glyphs in the run.\n\n ![](http://web.archive.org/web/20150322223843im_/http:/typophile.com/files/ataakern_4689.gif)\n\n[Note that if one uses the kern2volt tool to convert a FontLab generated kern table to GPOS kerning in VOLT, the tool has an -RTL option that will correctly define the lookups for right-to-left scripts. You will need separate kern table sources for RTL and LTR kerning though.]\n\n"
    },
    {
      "time": "23 Jun 2006 — 11:29am",
      "content": "Thanks John for your elaborated answer.  \n\\> If you were to add another character before the sequence زرع then you would see the kerning suddently applied between رع.\n\nSay: True only if R is added. Or a zero-width non-joiner!  \nThe 2nd word from the left in my very first sample says otherwise...\n\nAnd from your samples, It seems that both Adobe and Mircosoft confused Arabic with English Kerning!\n\nHope you will find my previous postings useful:  \n [http://typophile.com/node/19609](http://web.archive.org/web/20150322223843/http:/typophile.com/node/19609 \"http://typophile.com/node/19609\")  \n [http://typophile.com/node/19348](http://web.archive.org/web/20150322223843/http:/typophile.com/node/19348 \"http://typophile.com/node/19348\")\n\n\\> .. Mamoun Sakkal designed the Arabic.. and Mamoun also did the VOLT work..  \nSay: I’ll just note that, obviously, Mamoun Sakkal has ‘Arab eyes..\n\n"
    },
    {
      "time": "29 Jun 2006 — 6:49am",
      "content": "I want to ask you all, how did you learn VOLT? Does anyone of you has a manual for it?\n\n"
    },
    {
      "time": "29 Jun 2006 — 11:24pm",
      "content": "I learned VOLT by using it and by pestering Paul Nelson and Sergey Malkin at Microsoft. I had the advantage that I was developing fonts for them so they were obliged to answer my questions. :)\n\nThere isn't a really good VOLT manual or tutorial out there, although what is available is still quite helpful if mixed with experiment and trawling in the archives of the VOLT user community on MSN. I'd be interested in writing a proper VOLT manual if I had time and someone were to pay me.\n\nIn the meantime, I suggest looking at these links:\n\n[http://www.microsoft.com/typography/developers/volt/default.htm](http://web.archive.org/web/20150322223843/http:/www.microsoft.com/typography/developers/volt/default.htm \"http://www.microsoft.com/typography/developers/volt/default.htm\")  \n [http://scripts.sil.org/cms/scripts/page.php?site\\_id=nrsi&item\\_id=VOLT\\_Tu...](http://web.archive.org/web/20150322223843/http:/scripts.sil.org/cms/scripts/page.php?site_id=nrsi&item_id=VOLT_Tutorial \"http://scripts.sil.org/cms/scripts/page.php?site\\_id=nrsi&item\\_id=VOLT\\_Tutorial\")\n\nthen go to the MSN VOLT community site:\n\n[http://groups.msn.com/MicrosoftVOLTuserscommunity](http://web.archive.org/web/20150322223843/http:/groups.msn.com/MicrosoftVOLTuserscommunity \"http://groups.msn.com/MicrosoftVOLTuserscommunity\")\n\nand look through the message archives for the release notes for individual updates or search for specific topics.\n\n"
    },
    {
      "time": "30 Jun 2006 — 6:44am",
      "content": "thank you john, it was nice of you to reply to my questions. but i still need to know how much time (approximtely) it took you to learn volt? and did you face lots of difficulties? Actually the font that im working on is Arabic and it is a very specialized language with lots of glyphs..\n\n"
    },
    {
      "time": "30 Jun 2006 — 6:25pm",
      "content": "VOLT for Arabic is not very complicated -- not compared to, say, Devanagari, which I'm working on at the moment. The basic GSUB shaping features -- init, medi, fina (isol is optional, basically only necessary if you want to perform contextual heh shaping) -- are very straight forward, as are the ligature substitutions. Things are trickier if you start getting into contextual substitutions, e.g. if you have different glyph forms that you want to employ in different situations, but even then you just need to keep track of your contexts.\n\nGPOS mark positioning is probably the most difficult thing you'll need to learn for Arabic, and is mainly tricky because the interface might not be intuitive at first. Read the tutorials carefully.\n\nVOLT isn't a massive program -- it does some specific tasks for OpenType Layout development -- so there isn't very much to learn in terms of interface. The thing that takes time is figuring out the best way to do things for different scripts, and also learning what expectations shaping engines have for those scripts.\n\n"
    }
  ]
}

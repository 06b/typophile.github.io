{
  "id": "53752",
  "title": "OpenType Postscript vs. OpenType TrueType",
  "forum": "General Discussions",
  "tags": [

  ],
  "content": "I would love to get some weigh-in regarding the conversion of fonts across platforms. We have a little experience in this realm, but we are running into problems. We have a large office of creative contributors, both the PC and Mac platforms are represented here so because there is so much back and forth with files including the fonts, we have decided to install Extensis Universal Type Server so we can all be on the same page.\n\nWe have opted to convert everything to Opentype Postscript (.OTF) because, from the tests that we have done, the file size is considerably smaller. But frequently what's happening is that characters, glyphs or ligatures are not displaying in a variety of applications across platforms. There doesn't appear to be a pattern to it, but when we convert the font to OpenType TrueType (.TTF) the problems seem to be diffused.\n\nThe main question we have is; If we convert some fonts to TrueType does that disable any of the advanced OpenType features in the font itself? I have my assumptions, but i wanted to open it up for your input.\n\nYour help is appreciated, we are currently converting thousands of fonts (all above board) and would love to have this done right.\n\nThank you.\n\n",
  "author": "<a href=\"/web/20100722194549/http://typophile.com/user/41629\" title=\"View user profile.\">corybates</a>",
  "time": "<br>",
  "uid": "41629",
  "comments": [
    {
      "time": "",
      "content": "When you say \"characters, glyphs or ligatures are not displaying in a variety of applications across platforms\", have you looked into which OT capabilities Windows based apps have vs. Macs. Some Windows apps are different than Mac versions. Ligature substitution shouldn't be problem in either flavor of OT, but other features vary a lot when it comes to OT capabilities.\n\nI'm especially interested in responses you get as I will soon be involved in a similar assignment. I work in a very large creative studio that is about to undergo major upgrades. We are migrating from Freehand as our layout app to Adobe CS4. We will also be migrating our Font Reserve Server to Universal Type Server. I will be responsible for most of that and converting our proprietary font collection to OT format. I won't be converting our general font collection as these will need to be repurchased. I will have to do fixes though, till new licenses are attained. UTS I'm told will automatically purge corrupt or orphaned PS fonts.\n\n"
    },
    {
      "time": "",
      "content": "Yes, we're testing the same applications across platforms (Flash, Indesign, Illustrator and Word), so the opentype capabilities appear to be fairly consistent across platform.\n\nWhen you say \"other features vary a lot when it comes to OT capabilities,\" do you mean from application to application, or OTF vs. TTF? And if it is OTF vs. TTF, would you be able to explain?\n\nThanks for your response.\n\n"
    },
    {
      "time": "",
      "content": "Application to application.  \nAs far as I'm aware both PS and TT flavored Opentype handle features the same way. I think the only differences have to do with the direction and interpretation of outlines and hinting.  \nHere is a link to a previous thread on the subject:  \n [http://typophile.com/node/16695](http://web.archive.org/web/20100722194549/http:/typophile.com/node/16695 \"http://typophile.com/node/16695\")\n\n"
    },
    {
      "time": "",
      "content": "\\>We have opted to convert everything to Opentype Postscript\n\nWhat tool are you using to convert?\n\n"
    },
    {
      "time": "",
      "content": "Hi Sii, we are using Fontlab Studio V 5.0.4. It's the most well rounded solution we could find to do so. Also, Stephen, thank you for your input.\n\n"
    },
    {
      "time": "",
      "content": "Hi Sii, we are using Fontlab Studio V 5.0.4. It's the most well rounded solution we could find to do so. Also, Stephen, thank you for your input.\n\n"
    },
    {
      "time": "",
      "content": "Just speculating that some glyphs - due to overlaps or winding order - might not survive conversion.\n\n"
    },
    {
      "time": "",
      "content": "Hi Sii, yes, that is happening now. But it appears to happen less or not at all when converting to TTF. I just wonder if we're losing in the long run by not converting to OTF (i.e., losing advanced font features that aren't available when using TTF).\n\n"
    },
    {
      "time": "",
      "content": "Tracking\n\n"
    },
    {
      "time": "",
      "content": "\\> _(i.e., losing advanced font features that arenâ€™t available when using TTF)._\n\nFor OT features it doesn't matter if it's PS or TTF flavoured OTF. However, a wrong or sloppy conversion could potentially destroy the features. So only do it if you know what you are doing, or repurchase some fonts.\n\n"
    },
    {
      "time": "",
      "content": "I tend to agree - Although going to TTF might be a quick fix, and I don't see any huge downsides - I think getting to the bottom of the conversion issue might be a better approach - kind of thinking garbage in -\\> garbage out - who knows what else might be lurking under the surface?\n\n"
    },
    {
      "time": "",
      "content": "OK, maybe to put some people's mind at ease: There is absolutely nothing wrong with doing OT TTF, nada, njet, zilch. Larger file sizes are not really an issue, they should only differ by a few k. If it is very much more, then the TTF fonts are hinted!\n\nDalton Maag produces all its fonts in TTF format because they work reliably. We have never had any issues with TTF. This is particularly true for anything outside the standard ANSII char set.\n\nOTF (CFF) fonts did have some problems with older apps in dealing with Central European characters, and other non-Latins. The reason is that in TTF all glyphs map straight to Unicode, whilst with CFF you still have, in essence, a PostScript font based on glyph names, padded with a huge wrapper that makes it OT. The glyph names then point to Unicode. So, if your font hasn't got a clean glyph name table it won't point correctly to Unicode and it won't either display correctly or print. As it is, in essence, still all based on glyph names, the conversion tables in your printer drivers have to be fully compliant with your glyphs names in the font, otherwise they won't be recognised.\n\nYou may have found that when loading a TTF into MacOSX with FontBook you get a warning not to install the font as it is corrupted and will explode your system, followed by complete annihilation of the area you live in. This is due to a 'bug' in Fontbook that demands there is a 'fpgm' table present in all TTF fonts. This table is only needed if the font has been hinted. You can ignore the warning. Your font will work and life will go on.\n\nPhew, that was a rant. Again, use TTF. It works, there is no downside.\n\nBruno Maag  \nDalton Maag\n\n"
    },
    {
      "time": "",
      "content": "\"Phew, that was a rant. Again, use TTF. It works, there is no downside.\"\n\nConversion quality is the only downside.\n\n\"- I think getting to the bottom of the conversion issue might be a better approach..\"\n\nIt's in the Mathematics of FL, if you want to take another shortcut to the bottom.\n\n\"...warning not to install the font as it is corrupted and will explode your system, followed by complete annihilation of the area you live in.\"\n\nI have a photo of this, if anyone if afraid. It's a macrowave-based explosion, so it only effects materials that are less than 10% liquid.\n\nCheers!\n\n"
    },
    {
      "time": "",
      "content": "Thank you everyone for your input, this has been very helpful for us in going forward.\n\n"
    }
  ]
}

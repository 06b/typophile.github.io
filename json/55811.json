{
  "id": "55811",
  "title": "now that we've exchanged pleasantries",
  "forum": "General Discussions",
  "tags": [
    "General Discussions"
  ],
  "content": "it was just one week ago that i made my first post here.\n\nyeah, it seems like much longer than that to me too...  \ni guess, like they say, time flies when you're having fun.\n\nanyway, i'd like to thank all the people here who have  \nwelcomed me, and made me feel at home. sincerely...\n\nanyway, now that we have exchanged our pleasantries,  \nit's time to get to work...\n\ni've programmed an app that takes the text of a book  \nas its input, and outputs a .pdf version and .html files.\n\none .html version includes the whole book in one file.\n\nanother .html version splits the book up into chapters,  \ncreates a web-page for each chapter, and links them...\n\nthe third .html version splits the book up into \\_pages\\_,  \nand creates a web-page for each \\_page\\_ of the book...  \nthis version puts an image of the page next to its text.  \n(it was originally developed to proof o.c.r. output.)\n\nthis granularity-level allows people to make comments  \nabout specific aspects of the book, so each of the pages  \nhas a form to collect the comments, and error-reports.  \n(that form is extremely primitive at this point; so be it.)\n\nthe main idea of this page-by-page web-site version  \nis that authors should corral and focus their readers,  \nin order to establish a community around their work,  \ncumulating small gifts from fans to make their living.\n\nin this vein, the .pdf version has a link, on every page,  \nthat takes the reader to the web-page for that page...  \nthus the .pdf and web-version are tightly interleaved.\n\nnow, the web-version has lousy typography, of course,  \nbecause it lives in the browser. not much hope there...\n\nbut the .pdf version? well, there's some hope there.  \nand that's good, since the .pdf version will be what'll  \nbe used when fans take the print-on-demand route,  \nvia lulu.com, createspace, or a slew of future options.\n\nbut my main goal is to make the .pdf readable as is,  \nas an e-book, on-screen, and for that reason, i am  \neager to apply the lessons learned by typographers  \n-- or, more aptly, \\_book\\_designers\\_ -- in the past.\n\nat the same time, i must live within the limits that  \nare imposed by relatively scarce resources on the  \nhand-held machines -- the iphone, kindle, etc. --  \nthat currently make up the e-book infrastructure...\n\nin the large realm, the one thing that challenges  \nresources to their breaking point is hyphenation,  \nespecially since it must be real-time, on-the-fly.\n\nwe don't have enough firepower to do hyphenation,  \nnot correctly anyway, and doing it badly is no option.\n\nbut if we can't do hyphenation, the next question is  \nwhether we can expect to do justice to justification.  \nloose lines are bad in print; they're awful on-screen.\n\nit would be very sad to give up on justification though,  \nbecause -- perhaps more than any other variable --  \njustification is what makes a book \"look like a book\"...\n\nand to the extent that e-books can \"look like a book\",  \nwe will ease their introduction to the public at large...  \n(it is for this reason that the kindle currently justifies,  \neven though the white-space rivers look like \\_crap\\_.)\n\nso i'm doing experiments on how to keep justification  \n-- even after we've kicked hyphenation to the curb --  \nand i would like feedback from book-designers here.\n\nif my experiments fail, i want you to say that, loudly...  \ni don't have anything invested in any of these tactics,  \ni'm simply trying to find out if any of them will \\_work\\_.\n\nif they don't work, you won't hurt my feelings to say it.\n\n(and even if it \\_would\\_ \"hurt my feelings\", you should  \nsay it anyway, because truth compels you to be honest.)\n\nin order not to bias my experiment, i used actual text  \nfrom an actual book (one recently released by o'reilly).\n\nto avoid copyright concerns, however, i scrambled  \nthe text. i randomly replaced every lowercase vowel  \nwith a different lowercase vowel, with the effect that  \nthe general tenor of the words and lines was retained.  \n(although it probably raised havoc with the kerning.)\n\ni then used my tool to create .pdf and .html versions.\n\nthe text was unhyphenated, but i did justification on it.\n\nso, the first question i have for you is a simple one:\n\n\\> \"of the 144 pages within this .pdf, how many have  \n\\> an unacceptably high number of too-loose lines\".\n\nok, maybe that question isn't \\_quite\\_ so simple, with  \nall of its inherent vagueness -- what constitutes a  \n\"too-loose\" line?, and what's a \"high\" number of 'em?,  \nlet alone an \"unacceptably\" high number?, and what  \nabout the pages that don't have any justified lines? --  \nbut you get the general idea of what i'm asking here...\n\nin general, did the tactics that i used make it work?\n\nso, there are two ways you can look at the pages...\n\nyou can just download the .pdf:  \n\\> [http://z-m-l.com/go/bomoc/bomoc.pdf](http://web.archive.org/web/20131020225914/http:/z-m-l.com/go/bomoc/bomoc.pdf \"http://z-m-l.com/go/bomoc/bomoc.pdf\")\n\nor you can use the online page-by-page version:  \n\\> [http://z-m-l.com/go/bomoc/bomocp001.html](http://web.archive.org/web/20131020225914/http:/z-m-l.com/go/bomoc/bomocp001.html \"http://z-m-l.com/go/bomoc/bomocp001.html\")\n\nin the web-version, clicking each page takes you to  \nthe next page. or you can jump to a specific page  \nby changing the zero-padded number in the u.r.l.\n\nfor instance, here's the u.r.l. for page 123:  \n\\> [http://z-m-l.com/go/bomoc/bomocp123.html](http://web.archive.org/web/20131020225914/http:/z-m-l.com/go/bomoc/bomocp123.html \"http://z-m-l.com/go/bomoc/bomocp123.html\")\n\nif you want to talk about a specific page, tell us the  \npage-number, so we can look at that page online...\n\nthere are lots of things that are downright \\_ugly\\_  \nin that .pdf. it's just the starting point from which  \ni will be demonstrating several improved iterations.\n\nso there is no need to belabor all the bad aspects...  \n(especially the bottom-balancing should be ignored.)\n\nright now, i'm looking for feedback on loose lines.\n\noh yeah, what i did is i used a multi-line approach.  \nnot the sophisticated ones used by tex or indesign  \n-- again, limited resources, and all in real-time --  \njust a pretty simple one. nothing novel about that...\n\ni did, however, throw in a couple of other little tricks.\n\ni believe they should be pretty obvious to you experts,  \nbut i'll let you tell me what they are, and not vice versa.\n\nand then, of course, i am curious if you think that they  \nare tricks that are \"legit\" or not, and why you think that.\n\n-bowerbird\n\n",
  "author": "bowerbird",
  "time": "12 Mar 2009 — 2:33pm",
  "uid": "42797",
  "comments": [
    {
      "time": "12 Mar 2009 — 7:47pm",
      "content": "Your HTML semantics are extremely poor; `BR P` is not how we mark up a paragraph, even in HTML 4.\n\nIt’s good your PDF has bookmarks, but any claimed use of a PDF for E-books requires tagged PDF, and you have to use semantics there that are even better than HTML’s.\n\nYou haven’t actually even declared a human language in either case.\n\nYour approach is OK for an early beta, but a great deal more finesse is required, and I’m not just talking about fonts.\n\n—  \nJoe Clark  \n [http://joeclark.org/](http://web.archive.org/web/20131020225914/http:/joeclark.org/ \"http://joeclark.org/\")\n\n"
    },
    {
      "time": "12 Mar 2009 — 9:04pm",
      "content": "now, the web-version has lousy typography, of course, because it lives in the browser. not much hope there...\n\nWell, some hope :)\n\n[http://www.alistapart.com/articles/cssatten](http://web.archive.org/web/20131020225914/http:/www.alistapart.com/articles/cssatten \"http://www.alistapart.com/articles/cssatten\")\n\n[http://code.google.com/p/hyphenator/](http://web.archive.org/web/20131020225914/http:/code.google.com/p/hyphenator/ \"http://code.google.com/p/hyphenator/\")\n\n[http://userscripts.org/scripts/show/9022](http://web.archive.org/web/20131020225914/http:/userscripts.org/scripts/show/9022 \"http://userscripts.org/scripts/show/9022\")\n\n"
    },
    {
      "time": "12 Mar 2009 — 9:46pm",
      "content": "Wow this person posted a book!  \nToo long im leaving.\n\nGuerrizmo+Design  \nNo man is an island unto himself\\_John Donne\n\n"
    },
    {
      "time": "12 Mar 2009 — 10:04pm",
      "content": "joe said:  \n\\> Your HTML semantics are extremely poor;\n\ni agree. wholeheartedly. my focus was on the .pdf.\n\nmy .html converter wasn't prepared for many of the features  \nin this book, like numbered lists and outdented paragraphs.\n\n(neither of them shows up much in the public-domain fiction  \nthat constituted the bulk of the project gutenberg e-texts that  \nserved as the starter-corpus for this project, believe it or not.)\n\n\\> BR P is not how we mark up a paragraph, even in HTML 4.\n\nthere's a toggle in my tool that lets users retain the linebreaks  \nwhen they create the .pdf, or do the typical wrap-to-viewport.\n\nhow do you suggest that i retain linebreaks, if not with \"br\"?\n\n\\> It’s good your PDF has bookmarks, but any claimed  \n\\> use of a PDF for E-books requires tagged PDF, and you  \n\\> have to use semantics there that are even better than HTML’s.\n\nthere's a very deep discussion that we could have on this matter.\n\nbut for now, let me just skip over that with a quick \"you're right,  \nand i would've loved to make this a tagged .pdf, but the package  \nthat i'm using -- pdflib lite, v5 -- is old, and doesn't support it.\"\n\nit also limits me to the 14 embedded fonts, hence the helvetica...  \nand finally, i can't web-optimize the .pdf, which i'd like to do too.\n\nif my eventual users wanna chip in for the new commercial version  \nof the pdflib package, or another package, i'll be happy to have it...  \nin the meantime, i content myself with what i can use at no charge.  \n(and i thank the pdflib people for their generosity in offering that.)\n\n\\> You haven’t actually even declared a human language in either case.\n\nas you certainly know, joe, i'm just using a template for the .html.\n\nand i'll be the first person to tell you that i don't know much about  \n.html, and don't care to learn any more than i absolutely have to,  \nso improvements on that template will have to be made by others...\n\nso if you'd like to create the kind of template you think i should use,  \njoe, i will be quite happy to take it and use it and give you full credit.\n\nif not, i'll wait for one of my eventual users to volunteer for that job.\n\n\\> Your approach is OK for an early beta, but a great deal  \n\\> more finesse is required, and I’m not just talking about fonts.\n\ni wasn't really showing my \"finesse\" yet, to the extent that i have any.\n\ni'm just seeing if i can get sufficiently tight lines without hyphenation.\n\ndo you have any feedback for me on that? :+)\n\n-bowerbird\n\n"
    },
    {
      "time": "12 Mar 2009 — 10:33pm",
      "content": "abattis said:  \n\\> Well, some hope :)\n\ngreat. i love hope. indeed, i have had a poster in my  \nfront window that says \"hope\" for many months now.\n\n(it's got a picture of our first black president on it too,  \nand hey, if \\_that\\_ could happen, then maybe browsers  \nwill be able to give us good book typography as well!)\n\nso let's take a look...\n\n\\> [http://www.alistapart.com/articles/cssatten](http://web.archive.org/web/20131020225914/http:/www.alistapart.com/articles/cssatten \"http://www.alistapart.com/articles/cssatten\")\n\nok, css? seriously? i've only been here a week so far,  \nand there's already blood splattered all over the place,  \nso i think i will wait to tell you what i think about css...\n\nin the meantime, go to the zen garden and pull up  \nany 20 designs at random. click your fontsize up  \na few notches and see what percentage of those 20  \nfancy designs crumbles into unappealing messes...\n\nor resize your window and see how many \\_really\\_  \n\"readjust and reflow\", versus how many do not...\n\n\\> [http://code.google.com/p/hyphenator/](http://web.archive.org/web/20131020225914/http:/code.google.com/p/hyphenator/ \"http://code.google.com/p/hyphenator/\")\n\nvery cool.\n\nlet me know when 60% of the population surfs with  \na browser that supports this thing, and i'll be happy.\n\nof course, you or i might grow old and \\_die\\_ first...\n\nbesides, the future of e-books ain't in the browser.  \nthat's patently obvious. it's in handheld machines.  \nlike the once-again-rumored mac 10-inch touch...\n\n(and yes, there will be browsers on the handhelds,  \nand you'll be able to read e-books at websites, but  \nclient-side non-browser apps don't have to run in  \na blind sandbox, so will always be more powerful;  \nplus they can request data from the web if needed.  \nthere's just no compelling need to use a browser.)\n\n\\> [http://userscripts.org/scripts/show/9022](http://web.archive.org/web/20131020225914/http:/userscripts.org/scripts/show/9022 \"http://userscripts.org/scripts/show/9022\")\n\nthis one i already knew about. haven't looked at it  \nvery much. looks interesting, to be sure, but still,  \nre-cue all of the arguments that i have just made...\n\n-bowerbird\n\n"
    },
    {
      "time": "13 Mar 2009 — 2:43am",
      "content": "Bowerbird - You want people to bother reading this post? Try using initial caps and a longer line length and not so many line spaces. The appearance of this is extremely irritating.\n\nBTW - I haven't bothered reading your initial post.\n\nNick Cooke\n\n"
    },
    {
      "time": "13 Mar 2009 — 5:30am",
      "content": "_...cumulating small gifts from fans to make their living._\n\n ![](http://web.archive.org/web/20131020225914im_/http:/typophile.com/files/5531190~80-Year-Old-Street-Musician-Lylah-Tiffany-Playing-the-Accordion-and-Begging-Outside-Carnegie-Hall-Posters_3982.jpg)\n\n"
    },
    {
      "time": "13 Mar 2009 — 7:53am",
      "content": "If you are poo-pooing CSS, why are you bothering making a web site?\n\n"
    },
    {
      "time": "13 Mar 2009 — 8:35am",
      "content": "a new nick said:  \n\\> The appearance of this is extremely irritating.\n\nthe old nick said:  \n\\> ...cumulating small gifts from fans to make their living.\n\naluminum said:  \n\\> If you are poo-pooing CSS,  \n\\> why are you bothering making a web site?\n\nhey kids, if you want to bash, you'll have to do that in my  \nearlier thread -- \"greetings, and a request for feedback\".\n\nthis thread is for \\_working\\_, so only on-topic comments.\n\n-bowerbird\n\n"
    },
    {
      "time": "13 Mar 2009 — 8:56am",
      "content": "\\> the one thing that challenges  \nresources to their breaking point is hyphenation,  \nespecially since it must be real-time, on-the-fly.\n\nHave you looked into Donald Knuth's algorithm for TeX hyphenation. It is published in Computers and Typesetting, Volume A, and provides pretty good hyphenation that worked on machines 20 years ago, when resources were much more limited than they are today.\n\nWithout hyphenation you are going to have a lot of trouble getting good readability.\n\n"
    },
    {
      "time": "13 Mar 2009 — 8:56am",
      "content": "\"so only on-topic comments\"\n\nAre you NOT asking about the web site you are building?\n\nHow is CSS not on-topic?\n\nAnd, as stated, don't expect very good feedback when your posts are nearly undecipherable. This isn't bashing. It's constructive feedback. Take it or leave it.\n\n"
    },
    {
      "time": "13 Mar 2009 — 10:06am",
      "content": "_the old nick said:  \n\\> ...cumulating small gifts from fans to make their living._\n\nNo, that's what you said.  \nThe picture of an impoverished artist living off discretionary payment for her freely given work is my on-topic comment.  \nDeal with it, or ignore it.  \nBut please try to refrain from snide patronizing ad hominem remarks.\n\nBTW, people at this site have expressed dismay at the posts of David Berlow and Peter Enneson, to name but two frequent contributors with high style, but it is a difficulty with their writing, not their layout.\n\n"
    },
    {
      "time": "13 Mar 2009 — 10:36am",
      "content": "Why  \nNick  \nwhatever  \ndo  \nyou  \nmean?\n\nLayout  \nis  \none  \nof  \nbb's  \nstrong  \npoints.\n\n"
    },
    {
      "time": "13 Mar 2009 — 10:51am",
      "content": "don said:  \n\\> Have you looked into Donald Knuth’s  \n\\> algorithm for TeX hyphenation.\n\nyes.\n\n\\> It is published in Computers and Typesetting, Volume A\n\nit's pretty hairy, isn't it? :+)\n\n\\> and provides pretty good hyphenation that  \n\\> worked on machines 20 years ago, when  \n\\> resources were much more limited than they are today.\n\nwhen i speak of \"limited resources\", i mean in devices like  \nthe iphone, the kindle, and sony reader, not the desktop...\n\nin addition, moreover, with such machines there's a need  \nto execute the routine on-the-fly, in real-time, and to be  \nimpervious to those situations which \"cannot\" be resolved.\n\ntex, in contrast, is a batch program, so you're judging it  \nin a different context that really has little relevance here.  \neven if it's typically fast, there are some occasions where  \nit can take a while. and sometimes it will just give up and  \nsay \"this paragraph just \\_won't\\_ work as is, so rewrite it.\"  \nwe simply don't have that luxury in a handheld situation.\n\nnow, it \\_is\\_ possible to have the routine do just one page,  \nor a few, a tactic used by some apps... (ok, one, stanza.)\n\nbut there are two problems with this approach. the first  \nis that the routine interrupts the reader's attentional flow  \nwhen there's a delay, however short, every page or three.\n\nthe second is that it makes the pagination indeterminate.  \nso, to jump to the middle of a book -- e.g., page 123 --  \nyou need to run the routine on the first 122 pages first;  \notherwise, you don't know what text falls on page 123...\n\nthe only way to avoid this is to \"guess\" where page 123 is.\n\nwhile some viewer-programs do operate in this manner  \n-- such as mobipocket, and thus probably the kindle --  \nit's quite unsatisfactory, and leads to some weird shit...  \nfor example, in mobipocket, paging forward to page 123  \nwill sometimes give you \\_different\\_text\\_ on that \"page\"  \nthan you'll get when you page \\_backward\\_ to page 123.  \n(and not just on page 123, but \\_all\\_ intervening pages.)\n\nobviously, that \\_breaks\\_ our notion of what a \"page\" is,  \nin a fairly significant -- and wholly impractical -- way.\n\nsome day we will all be carrying around machinery that  \nwould qualify as a \"supercomputer\" today. but not today.  \n(but the iphone is a \"supercomputer\" from 40 years ago.)\n\n\\> Without hyphenation you are going to have  \n\\> a lot of trouble getting good readability.\n\nwell, that's actually the point in question here, right now.\n\nspecifically, we know that we can't do hyphenation right.\n\nso the question is, \"must we abandon justification too?\"\n\ni'd like to save justification -- as an option, at least --  \nso i'm doing some experimentation to find out if we can  \nuse means other than hyphenation to avoid loose lines...\n\ni made a .pdf -- with actual text from an actual book --  \nthat uses justification without hyphenation, as one test...\n\nso i'm looking for feedback from you experts here as to  \nwhether you think that it looks \"good enough\" or not...\n\ni'm also going to compute the increase in word-space,  \nbecause i think hard numbers are useful in addition to  \nthe subjective \"looks good to me\" or \"looks bad to me\",  \nbut, as with much typography, the ocular test is best...\n\n\\*\\*\\*\n\naluminum said;  \n\\> Are you NOT asking about the web site you are building?\n\ni am \\_not\\_ asking about the website. emphatically not...\n\nright now, i'm asking if the justified lines in the .pdf show  \nsufficient tightness, or if there is an excess of loose ones.\n\ni merely put up the website so that people who only want  \nto view the occasional-page-being-referenced can do so  \n-- like say i talked about page 123, you could just view:  \n\\> [http://z-m-l.com/go/bomoc/bomocp123.html](http://web.archive.org/web/20131020225914/http:/z-m-l.com/go/bomoc/bomocp123.html \"http://z-m-l.com/go/bomoc/bomocp123.html\")  \n-- without having to download the whole .pdf. (but the .pdf  \nis only 2.6 megs, so it's not like it's \\_that\\_ big of a burden.)\n\nbut the text on the website, and its underlying .html,  \nmeans next to nothing to me at this point in time, no.  \ni could just as easily have eliminated it entirely.\n\nthat having been said, though, i will eventually be \\_quite\\_  \ninterested in using the best c.s.s. that experts can write  \nfor the sites produced by my tool, so if you would like to  \n\\_produce\\_ that c.s.s., do please let me know, and i will  \nbe quite happy to tell you what i have in mind, and then  \nlet you go to work doing what you think should be done  \n-- after all, you're the expert! -- and when you're done,  \ni will be quite happy to evaluate it for use with my tools,  \nand will give full and proper credit for your contribution.\n\n\\_that\\_ would be \"constructive\"...\n\n\\*\\*\\*\n\none more thing...\n\ni have regenerated the .pdf without the bottom-balancing,  \nbecause the carding caused too much variation in the color,  \nmaking it difficult to gauge the looseness of justified lines...\n\nthe new .pdf is now available at the old location:  \n\\> [http://z-m-l.com/go/bomoc/bomoc.pdf](http://web.archive.org/web/20131020225914/http:/z-m-l.com/go/bomoc/bomoc.pdf \"http://z-m-l.com/go/bomoc/bomoc.pdf\")\n\nthe old .pdf is renamed, if you want to look at it:  \n\\> [http://z-m-l.com/go/bomoc/bomoc-1.pdf](http://web.archive.org/web/20131020225914/http:/z-m-l.com/go/bomoc/bomoc-1.pdf \"http://z-m-l.com/go/bomoc/bomoc-1.pdf\")\n\ni'll replace the page-scan images in the website as well,  \nsince they are simply screenshots lifted out of the .pdf...\n\nin the process, i might update the .html, for mr. clark...  \n(but no promises, joe.)\n\n-bowerbird\n\n"
    },
    {
      "time": "13 Mar 2009 — 12:16pm",
      "content": "<cite> &gt; so i’m looking for feedback from you experts here as to<br>\nwhether you think that it looks “good enough” or not...</cite>\n\nNo.\n\n<cite> &gt; right now, i’m asking if the justified lines in the .pdf show<br>\nsufficient tightness, or if there is an excess of loose ones.</cite>\n\nExcess of loose ones.\n\n<cite> &gt; so the question is, “must we abandon justification too?”</cite>\n\nYes, probably. Since hyphenation seems to have been ruled out.\n\nIt seems to me that within the constraints outlined, you will have to choose between the short-term: lure folks to the e-book by making it seem more familiar -- i.e., justification -- at the risk of making it untenable for long-haul reading; and the long-term: eschew superficial familiarity in hopes of demonstrating that an e-book can be just as comfortable to read -- which in this case would seem to require FL/RR setting, so as not to cause such disruptive word spacing.\n\nThat's my professional opinion.\n\n-- K.\n\n"
    },
    {
      "time": "13 Mar 2009 — 1:39pm",
      "content": "nick said:  \n\\> The picture of an impoverished artist living off discretionary  \n\\> payment for her freely given work is my on-topic comment.  \n\\> Deal with it, or ignore it.\n\nthat's off-topic in this thread.\n\ni brought it up to explain \\_why\\_ there's a web-site version.  \nit has no other relevance to the topic of the ongoing thread,  \nwhere the question is still regarding loose lines in the .pdf...\n\nto discuss that picture, do it elsewhere, such as in the old  \n\"greetings\" thread. and be prepared to receive an onslaught  \nof counterexamples. but don't do it here; we're working here.\n\nand besides, why would you pick on that poor little old lady?  \nis that the kind of \"man\" you are, kicking around the feeble?\n\n-bowerbird\n\n"
    },
    {
      "time": "13 Mar 2009 — 1:50pm",
      "content": "\"i am \\_not\\_ asking about the website. emphatically not...\"\n\nAh, well, apologies, then!\n\nI'll duck out of the conversation as I am obviously having a tough time traversing your posts and filtering out the specific question you might have.\n\n"
    },
    {
      "time": "13 Mar 2009 — 2:49pm",
      "content": "kentlew said:  \n\\> Yes, probably. Since hyphenation seems to have been ruled out.\n\nain't done experimenting yet. but i heartily appreciate your input. :+)\n\nwhat i'll probably end up doing is computing the line-looseness,  \nfor individual lines, and from that, pick out some pages that are  \n\"in the middle\" in regard to their overall looseness, and then ask  \npeople like you, if you would be so kind, to judge those pages,  \nso i get the feel for how much looseness constitutes \"too much\".\n\nbringhurst does throw out a range -- from a quarter-em to a half  \n(page 26) -- but that's a relatively large difference, especially as he  \ngoes on to detail a number of other variables that can be involved.\n\n\\> It seems to me that within the constraints outlined,  \n\\> you will have to choose between the short-term:  \n\\> lure folks to the e-book by making it seem more familiar  \n\\> — i.e., justification — at the risk of making it untenable  \n\\> for long-haul reading; and the long-term:  \n\\> eschew superficial familiarity in hopes of demonstrating  \n\\> that an e-book can be just as comfortable to read —  \n\\> which in this case would seem to require FL/RR setting,  \n\\> so as not to cause such disruptive word spacing.\n\nthe options aren't quite \\_that\\_ stark, fortunately...\n\ni haven't given much of the backstory, but these  \nconversions -- to .html and .pdf -- constitute an  \nextremely minor part within the scope of my work.\n\nthe more crucial aspects of it are my \\_file\\_format\\_  \n-- it's called \"z.m.l.\", for \"zen markup language\" --  \nand my \\_authoring\\_tool\\_ and \\_viewer-programs\\_...\n\nin the long run, people will use my authoring-tool  \nto create books in z.m.l., and their readers will then  \nread those zml-books by using my viewer-program.\n\nthese .pdf and .html versions are for the short-term.\n\nmy viewer-program is more powerful than acrobat's,  \nand much more reader-friendly than a web-browser,  \nso the lifetime of .pdf and .html versions will be short.\n\nin my viewer-program, a simple command-j toggles the  \njustification, so a reader can use justification if they like,  \nas their default, but quickly and easily switch it off when  \nthey encounter any page which has too many loose lines.  \nand turn it back on again when they go to the next page.\n\nso, for on-screen reading, with my app, it's a non-issue.\n\nand once people recognize my viewer-app's superiority,  \nthey'll stop reflexively reaching for the .pdf or the .html.  \nso these converters are just stop-gap until that happens.\n\nplus, for \\_any\\_ zml-book they decide to print, using  \nmy viewer's built-in conversion routine to create .pdf,  \nthey can specify either justification or ragged-right..\n\n(i could even let them justify on a page-by-page basis...  \nhaven't ever coded it, but it's a thing that could be done.)\n\nit's only because .pdf is a \"frozen\" format that this is even  \nsomething that i am spending any time on. but it's better  \nto give the user the option to choose whatever they want,  \nand easier, and more flexible, so that's what my app does.\n\nwhich means this is \\_not\\_ a stark \"either/or\" situation...\n\n(especially since i will offer a \"half-ragged\" option as well,  \nas i seem to remember that having been a possible choice  \n\\_sometime\\_ in my experience, even if i can't locate it now.  \nyou increase the word-space for each line to \\_one-half\\_  \nof what it would be if you were doing \\_full\\_ justification.)\n\n\\> That’s my professional opinion\n\ni appreciate it very much, and i thank you for your time...\n\n-bowerbird\n\n"
    },
    {
      "time": "13 Mar 2009 — 3:49pm",
      "content": "Wow, two weeks bowerbird you made it!\n\nGuerrizmo+Design  \nNo man is an island unto himself\\_John Donne\n\n"
    },
    {
      "time": "14 Mar 2009 — 5:43pm",
      "content": "On the TeX hyphenation jabs:\n\nThe routine was developed in the early '80s. At that time, TeX ruled because no desktop machines were fast enough to run it at real time; only through batch processing could TeX deliver its pages.\n\nFast forward to now.\n\n<cite> &gt; It is published in Computers and Typesetting, Volume A</cite>\n\nit’s pretty hairy, isn’t it? :+)\n\nNot if you're a half decent programmer. (grin)  \nFor laffs, I just finished programming a Windows text viewer, incorporating proper justification (up to semi-pixel precision) _and_ Liang hyphenation thrown in. Now I'm contemplating Knuth/Plass paragraph breaking, because it seems worth a try to check if text _really_ breaks 'nicer'.\n\n<cite>sometimes it will just give up and say “this paragraph just _won’t_ work as is, so rewrite it.” we simply don’t have that luxury in a handheld situation</cite>\n\nGranted -- but even desktop giant InDesign, with its advanced hyphenation (better'n Liang's! more hyphens, distinction between preferred breaking positions and less preferred ones) and not-quite-TeX-like line breaking [\\*], will not _always_ produce high quality typesetting. If you only have one go, you'll have to anticipate every possible problem, such as words in other languages, mathematical formulas popping up inside running text, and the occasional this-would-look-better-if-broken-otherwise.\n\n[\\*] They _do_ use a derivation of the algorithm, but where TeX can leisurely fill up the entire RAM of a computer, contemplating a very long paragraph, ID stops evaluating a paragraph after so-many lines, breaks those into the best lines, then continues with the rest. So, while it is possible there are better line breaks possible, the routine produces a \"best with limited time & memory\". I presume next versions will get better, with more memory and faster CPUs.\n\n"
    },
    {
      "time": "14 Mar 2009 — 5:57pm",
      "content": "For example, notice the un-breakable name \"Übersetzenseehafenstadt\", although I'm thinking the u-umlaut causes my routines not to break it. Without that, the stand-alone hypenating test program suggests \"Uber\\*set\\*zensee\\*hafen\\*stadt\" -- so far \"the Unexpected\".\n\n ![](http://web.archive.org/web/20131020225914im_/http:/typophile.com/files/justify_5674.PNG)\n\n\\*Sigh\\* -- you just have to think of _everything_.\n\n"
    },
    {
      "time": "15 Mar 2009 — 1:07pm",
      "content": "theunis said:  \n\\> On the TeX hyphenation jabs:\n\nthey aren't \"jabs\".\n\ntex does a very nice job of hyphenating.\n\nit's just that you cannot make it work on  \na handheld, with a real-time requirement.\n\nand that's where e-books reside, now and  \nfrom now on, not on a desktop computer...\n\nnow, when i say \"you\", what i really mean  \nis \"no one so far\", which includes the team  \n(i presume) who made kindle's viewer-app,  \nand people who have made iphone e-books.  \n(unless you think stanza did it well; i don't.)\n\nand \"cannot\" means \"hasn't been done yet\".\n\nso i'm not closing out the possibility for it...  \ni'm just saying no one has obtained it \\_yet\\_.  \nwe must understand and acknowledge that...\n\nmoreover, i don't think we need hyphenation.  \nmulti-line break routines do well enough, for  \na reasonable percentage of english paragraphs.  \n(for other languages, programmers who speak  \nthe languages must figure out what they'll do.)\n\n\\> Not if you’re a half decent programmer. (g\n\ni'm only quarter-decent, so i won't even try. ;+)\n\nbut i will be happy to look at your work,  \nif and when you're ready to show people.\n\n\\> I presume next versions will get better,  \n\\> with more memory and faster CPUs.\n\nbut as long as you're talking about \\_indesign\\_,  \nyou're not talking about \\_handheld\\_ machines.\n\nand desktop computers (even laptops, unless  \nwe're talking about those wee little eee things)  \nare now fairly irrelevant in the land of e-books.  \nhandhelds are all that matters, and it will be a  \nvery long time before they match the resources  \nof a desktop computer today, let alone grow to  \nsomething with \"more memory and faster cpus\".\n\nindeed, since massive-run p-books will soon  \nbe a thing of the past, except for best-sellers,  \nthe entire workflow of one-time-layout (on the  \npublisher's high-end desktop computers with  \nindesign or quark) will morph to each individual  \nspecifying her own preferences for a pod-book,  \nwith layout proceeding from her personal choices.\n\n-bowerbird\n\n"
    },
    {
      "time": "15 Mar 2009 — 3:34pm",
      "content": "<cite>but as long as you’re talking about _indesign_,<br>\nyou’re not talking about _handheld_ machines.</cite>\n\nCorrect. InDesign is an interactive DTP application, where handheld machines are barely interactive -- Page Forward, Page Back. Maybe Search as well.\n\nI'm guessing you want hardware specs to be as low as possible, so the prudent thing is to 'prepare' text for handhelds by _pre-hyphenating_ text. That can be done using any old system, running a hyphenator as slow as you want. But that's already been suggested, and\n\n<cite>let me know when 60% of the population surfs with<br>\na browser that supports this thing, and i’ll be happy.</cite>\n\n... as a matter of fact, my first complete Knuth/Liang hyphenation program exactly _did_ that in 2004. It did exactly what the Google.code hyphenator does: insert all possible hyphens in a HTML file. I proposed it to the firm I was working for at the mo', to be used in a HTML reference guide they were working on. It was turned down because it apparently did not \"work with ALL browsers\", which was kind of a bummer.\n\nSo. No hyphenation means you cannot really expect good looking justified text -- as has been remarked upon before. Case closed.\n\n<cite>it will be a very long time before they match the resources of a desktop computer today, let alone grow to something with “more memory and faster cpus”.</cite>\n\nSitting here with a g\\*d\\*mn _phone_ surpassing memory and CPU caps of my first computer by a factor I'm to weary to calculate, I tend to disagree.\n\n<cite>the entire workflow of one-time-layout [...] will morph to each individual specifying her own preferences for a pod-book, with layout proceeding from her personal choices.</cite>\n\nAbsolutely agree on that. But I must repeat, there is no way (barring futuristic AI applied to typesetting) any random document can be typeset (oh alright, \"formatted\") in just about any pleasing way the customer wants. There must be some form of pre-formatting, or tagging, or whatever. Adding hyphens to the mix is not difficult.\n\nAre you targeting currently existing hardware, or aiming for the future? If the former, you have no choice but to opt for the most common divider -- \"it displays text\", and that's all.\n\n"
    },
    {
      "time": "15 Mar 2009 — 5:15pm",
      "content": "theunis said:  \n\\> I’m guessing you want hardware specs to be as low as possible\n\nno. i want a supercomputer in my hand. in everyone's hands.  \nand i want it to be cheap enough that everyone will have one...\n\nwe're just not there yet. and it'll be a while before we are there.\n\n\\> the prudent thing is to ’prepare’ text  \n\\> for handhelds by pre-hyphenating\n\neven pre-hyphenated text won't work. based on what i've observed.\n\ni haven't yet started coding for the iphone, because it requires xcode,  \nand i'm not yet ready to start learning a new language, so i cannot be  \nas specific as i'd like to be in telling you exactly what today's machines  \ncan and cannot do, but it's clear that the resources are relatively sparse.  \nwhen i've done some coding, i'll know how much we can push the edge.\n\nbesides, it's not insertion of all-possible-hyphens that's the problem.  \ncurrent machines can do that just fine, no reason to do it beforehand.  \nthe problem is that you can't jump to page 123 without processing the  \ntext \\_before\\_ page 123, to know exactly what text is \\_on\\_ page 123...  \nwe can't do \\_that\\_ fast enough without making people wait too long.  \npeople don't like to wait these days...\n\n\\> It was turned down because it apparently did not “work with  \n\\> ALL browsers”, which was kind of a bummer.\n\nsoft hyphens \\_still\\_ don't work with all browsers.\n\nand the big reason for that is the browser-programmers \\_know\\_  \nhyphenation is a time-sink that will make users unhappy waiters.\n\n\\> No hyphenation means you cannot really expect good looking  \n\\> justified text — as has been remarked upon before. Case closed.\n\nyou can think the \"case\" is \"closed\". fine. i'm quite sure that it's not.\n\n\\> Sitting here with a g\\*d\\*mn phone surpassing memory  \n\\> and CPU caps ofmy first computer by a factor I’m to weary  \n\\> to calculate, I tend to disagree.\n\nok. prove it by making a hyphenation routine work on your phone  \nfast enough to process an entire book in real-time on-the-fly...\n\nthe world will thank you. well, ok, \\_typographers\\_ will thank you.  \n(everyone else will yawn and turn back to \"dancing with celebrities\".)\n\nyou and i have no beef. do you get that? you're arguing with \\_reality\\_.  \nand, in my experience, that's a waste of time, since reality always wins.  \nand if you \\_insist\\_ on arguing, she will slap you in the face big-time...\n\n\\> I must repeat, there is no way (barring futuristic AI applied  \n\\> to typesetting) any random document can be typeset (oh alright,  \n\\> “formatted”) in just about any pleasing way the customer wants.\n\nsure there is, depending on how \"pleasing\" the person \"wants\" it to be.  \nif you have unlimited time. but we want e-books to work in real-time.  \nthat's the thing that makes all this so challenging. have i been unclear?\n\n\\> There must be some form of pre-formatting, or tagging, or whatever.\n\nwhen you find \"whatever\", let people know. that's what i'll be doing...\n\n\\> Are you targeting currently existing hardware,  \n\\> or aiming for the future?\n\nboth. the future \\_is\\_ now.\n\n-bowerbird\n\n"
    },
    {
      "time": "15 Mar 2009 — 5:46pm",
      "content": "<cite>ok. prove it by making a hyphenation routine work on your phone fast enough to process an entire book in real-time on-the-fly...</cite>\n\nMy proposal was actually to do that beforehand. There is no reason to dismiss this idea whatsoever. That's what I meant with 'tagging' and 'preformatting' -- the more work is done in the file that goes _into_ your hypothetical reader, the lesser it has to do on its own.\n\n<cite>when you find “whatever”, let people know. that’s what i’ll be doing...</cite>\n\nYep -- the points I mentioned earlier. Live hyphenation, for example, requires all texts tagged with the correct language. It's no different than tagging text to be italic, or bold, or as quotes. Surely you don't expect your (hypothetical?) program to handle that without supervision? So, take as much of the burden of \"live\" formatting _away_ from your reading device and move it into the data file. As per your example, if page numbers need to be known in advance (if your document contains references to absolute pages, e.g., a table of contents, an index, or internal references), you have no choice but to \"fix\" page boundaries. If you don't you will _have to_ devise a way to _generate_ the page references when needed. It's really one or the other.\n\nYou'll have to define your reading target, though, as formatting of a novel is quite different than that of, say, a programmer's guide to Perl (to name a random scientific text).\n\n<cite>you and i have no beef. do you get that? you’re arguing with _reality_. and, in my experience, that’s a waste of time, since reality always wins. and if you _insist_ on arguing, she will slap you in the face big-time...</cite>\n\nI'm merely trying to fathom what you are hoping to accomplish. No arguing involved.\n\n<cite>the future _is_ now</cite>\n\nApparently it is not, since by that argument you shouldn't have any problems with futuristic specs. If your target is _current_ software and hardware, you have no other choice than to opt for text only. No justification, no hyphenation. And do all pocket readers even support italic text?\n\n"
    },
    {
      "time": "15 Mar 2009 — 8:51pm",
      "content": "Know-it-all bird\n\nGuerrizmo+Design  \nNo man is an island unto himself\\_John Donne\n\n"
    },
    {
      "time": "16 Mar 2009 — 12:28am",
      "content": "theunis said:  \n\\> My proposal was actually to do that beforehand.  \n\\> There is no reason to dismiss this idea whatsoever.\n\nhey, look, i love the person who does what everyone else  \nsays cannot be done. which is why i never say that myself.\n\nif you can do it, great! do it. lead the way. clear the path.\n\nall i'm saying is that no one has done it up to this point...\n\ni don't think it's because they're all deaf, dumb, and blind.  \ni think it's because resources on handhelds are insufficient.\n\npresently, there are three handheld platforms of substance:  \nthe kindle, sony reader, and iphone. and only the iphone is  \nopen for programmers. if you want to consider the g1 too,  \nor the blackberry, or palm's new operating system, go ahead.\n\nthere will also be a flock of e-ink hardware \"coming soon\",  \nplus some (like the iliad) which have already been around,  \nthough they haven't established much of a foothold as yet.\n\nso there'll be lots of platforms \"soon\", albeit not right now.\n\nbut most will be resource-challenged, when compared to  \nthe desktop, so an ability to accomplish your objectives on  \nthe desktop won't necessary equate to handheld success...\n\nbut still, better to start \\_somewhere\\_ as soon as possible.\n\n\\> That’s what I meant with ’tagging’ and ’preformatting’ —  \n\\> the more work is done in the file that goes \\_into\\_ your  \n\\> hypothetical reader, the lesser it has to do on its own.\n\nyou don't do yourself favors with the term \"hypothetical\".  \ne-book apps are real, right now, and used out in the wild...\n\nas for preformatting, again, if you can make it work, do it.\n\nmy sense is that it won't help you that much, but perhaps  \nyou can invent the preformatting that \\_will\\_ give a boost.  \nagain, i won't ever tell you it can't be done.\n\nbut you will have to \\_do\\_it\\_, not just say it could be done.\n\nanother thing about \"preformatting\" is that you will have to  \nget buy-in agreement from the-world-at-large to do that task.  \nso it complicates things. still, you can worry about that later.\n\n\\> Live hyphenation, for example, requires all texts  \n\\> tagged with the correct language. It’s no different than  \n\\> tagging text to be italic, or bold, or as quotes.\n\nthat's part of the \"buy-in\" that you'll have to get from creators.\n\nyou can \\_assume\\_ that they'll be willing to do it, but if they  \nbalk, then your scheme won't succeed, even if it does \"work\".\n\nwelcome to the world of e-book application programming...\n\n\\> Surely you don’t expect your (hypothetical?) program to  \n\\> handle that without supervision?\n\nbut i'm not the one with a hyphenation program. \\_you\\_ are!\n\nand you're free to define the terms of how your program works,  \nand what it can and cannot handle, with or without supervision.\n\nbut if you require jobs of them, people might dismiss your system.\n\n\\> So, take as much of the burden of “live” formatting \\_away\\_  \n\\> from your reading device and move it into the data file.\n\nif you can make it work, fine, make it work.\n\n\\> As per your example, if page numbers need to be known in  \n\\> advance (if your document contains references to absolute  \n\\> pages, e.g., a table of contents, an index, or internal references),  \n\\> you have no choice but to “fix” page boundaries.\n\nwell, just to be clear, that example didn't actually require that  \n\"page numbers need to be known in advance\". that is, when i  \nused \"page 123\", what i meant was \"somewhere in the middle\".  \ncould have been \"where chapter 6 starts\", or \"where this quote  \nis located\", or \"where this footnote was referenced\" or whatever.\n\nsome e-book programs try to \"finesse\" the reality that they can't  \nattach a \"page number\" to a specific bit of text, so instead they  \nreport that you are \"62% of the way through the book\", or some  \nsuch nonsense, or even just give the user some vague scroll-bar.\n\nmyself, i like my programs to be a lot more specific than that...  \ni like to say \"you're on page 123 of 292 pages\". bam! exactly!\n\nbut also note that -- when the person bumps up the fontsize,  \nor switches from landscape to portrait, or changes fonts --  \nthen those 292 pages might morph into 336 pages, and then  \nthe person would instead be \"on page 135 out of 336 pages\"...  \nyou must repaginate the whole book. in real-time. on the fly.\n\n\\> If you don’t you will \\_have\\_to\\_ devise a way to \\_generate\\_  \n\\> the page references when needed. It’s really one or the other.\n\nright. exactly. you have to \\_generate\\_ and \\_update\\_ all of the  \npage references. and you have to do it on-the-fly, in real-time...\n\n\\> You’ll have to define your reading target, though,  \n\\> as formatting of a novel is quite different than that of, say,  \n\\> a programmer’s guide to Perl (to name a random scientific text).\n\nwelcome to the world of e-book application programming.\n\nnobody said it was going to be easy.\n\n\\> I’m merely trying to fathom what you are hoping to accomplish.\n\ni'm seeking feedback on my tests of some strategies to eliminate  \nloose lines obtained during justification \\_without\\_ hyphenation.\n\nsome people -- like you -- want to keep dragging hyphenation in...\n\n\\> If your target is \\_current\\_ software and hardware,  \n\\> you have no other choice than to opt for text only.  \n\\> No justification, no hyphenation.  \n\\> And do all pocket readers even support italic text?\n\ni wish i would have realized from the very beginning that you  \nhave absolutely no experience with what you're talking about.\n\nthe kindle and the sony reader and \\_many\\_ iphone apps offer  \njustification. only a couple iphone apps offer any hyphenation,  \nand you wouldn't be all that impressed with their performance.\n\nif you want to read more on these issues, take a look here:  \n\\> [http://www.futureofthebook.org/blog/archives/2009/02/why\\_is\\_text\\_on\\_scre...](http://web.archive.org/web/20131020225914/http:/www.futureofthebook.org/blog/archives/2009/02/why_is_text_on_screens_so_ugly.html \"http://www.futureofthebook.org/blog/archives/2009/02/why\\_is\\_text\\_on\\_screens\\_so\\_ugly.html\")\n\ni'm not sure i've ever seen any e-book program that did \\_not\\_  \noffer styled text. even if there was one, readers wouldn't use it.\n\n-bowerbird\n\n"
    },
    {
      "time": "16 Mar 2009 — 4:13am",
      "content": "(While I'm pondering your other points:)\n\n<cite>only a couple iphone apps offer any hyphenation,<br>\nand you wouldn’t be all that impressed with their performance.</cite>\n\n... is the reason I'm suggesting inserting hyphens into the data files. There is no reason at all the reader device should be **able** to hyphenate -- it should display text. Performance can be as low as economically possible.\n\nAnd yes, I admit, it means data files should be prepared before reading. It means that you cannot download any Project Gutenberg text and automatically expect the best possible reading experience -- but I doubt people are realistically expecting this right now.\n\nOr, for that matter, that it's even _possible_ using fully automatic software; an example that springs to mind is automated translation of straight to curly quotes. See the mishaps of SmartyPants ('cause 'no we can't').\n\n"
    },
    {
      "time": "16 Mar 2009 — 1:39pm",
      "content": "_...the mishaps of SmartyPants (’cause ’no we can’t’)._\n\nSmartyPants is configured at Typophile to work with North American quote marks/apostrophes, not the UK system:  \n('cause \"no we can't\").\n\nStraight-to-curly quote software that worked with the UK system would require some kind of grammatical+dictionary intelligence to determine the difference between a single left quote and an apostrophe.\n\n"
    },
    {
      "time": "16 Mar 2009 — 1:04pm",
      "content": "theunis said:  \n\\> is the reason I’m suggesting inserting hyphens into the data files.\n\nbut, once again i say, that's not where the time-bottleneck is.\n\nwhen you know exactly what word needs to be hyphenated,  \nit's not time-consuming to find the word in a look-up table.\n\n(preinsertion might not save \\_any\\_ time, whole-picture-wise,  \nbecause you will need to delete all the unnecessary hyphens.)\n\nthe time-bottleneck comes from paginating the entire book...\n\nnote that your inexperience here is starting to test my patience;  \nyou need working code if you want to make a convincing point.\n\n\\> There is no reason at all the reader device should be able  \n\\> to hyphenate — it should display text.\n\nagain, if you want preformatting, then it gets even more hairy,  \nbecause you then need additional buy-in for the preformatting.\n\nso, in addition to working code, you need charisma as well...\n\n\\> And yes, I admit, it means data files should be prepared\n\nright. and that has ramifications that go beyond working code.  \nbut for now, it would be good enough to deliver working code...\n\n\\> It means that you cannot download any Project Gutenberg text  \n\\> and automatically expect the best possible reading experience  \n\\> — but I doubt people are realistically expecting this right now.\n\nthat happens to be the exact goal i had when i started this work.\n\nand i was expecting that preformatting would be a requirement.  \n(and -- since i was willing to do that preformatting by myself --  \ni had the necessary buy-in.)\n\nand i found that the job \\_can\\_ be done without preformatting.\n\nnot with project gutenberg e-texts per se, because they have  \ntons of inconsistencies. but if they had been properly prepared  \n-- by which i mean they had merely followed their own rules --  \ni would indeed be able to download them and run them \\_as\\_is\\_.\n\nso now, instead of \"preformatting\" them, i'm merely making them  \n\\_consistent\\_, which is a much smaller burden, largely automatic...\n\n\\> Or, for that matter, that it’s even possible using fully automatic  \n\\> software; an example that springs to mind is automated translation  \n\\> of straight to curly quotes. See the mishaps of SmartyPants  \n\\> (’cause ’no we can’t’).\n\nsmartypants isn't quite as smart as it could be.\n\nbut that's all beside the point, because even with preformatting,  \nyou can't get the performance you need if you do hyphenation...\n\nor maybe \\_you\\_ can, but you'll need to show me the working code.\n\n-bowerbird\n\n"
    },
    {
      "time": "16 Mar 2009 — 1:42pm",
      "content": "here's one that i seem to have forgotten to post.\n\nand since it's \\_relevant\\_ to the actual \\_topic\\_ here...\n\nit's a reply to the comment from theunis where he  \ngave sample output from his hyphenation routine,  \nthe comment dated 14 march, timestamp 5:57pm.  \nit's the comment that contains the little screenshot.\n\n\\*\\*\\*\n\noh-oh. better watch out. :+)\n\nif you think i can talk a lot at a \\_general\\_ level,  \ndon't get me started with \\_specific\\_ examples...\n\nbelow are 6 different takes, using \\_your\\_ text...\n\nno hyphenation, just different breaks of the lines.  \nand, for a few, some extremely slight re-writes...\n\nyou might consider rewrites to be \"unfair\". if so,  \nthen your point boils down to the statement that,  \nfor any piece of text, wrapping it to various widths  \nmight lead to loose lines for some of those widths.\n\nbut nobody is arguing that statement. \\_nobody.\\_  \nleast of all \\_me\\_. but really, nobody in the world.  \nbecause it's bloody obvious. all you have to do is  \nimagine constructions consisting of numerious  \nconsecutive multi-syllabic sequential monstrosities  \nmasquerading as meaningful meanderings, without  \nintroducing many shorter words therein so as to give  \nthe break routines some flexibility with which to work.  \nheck, most of the time, three (and sometimes just two)  \nlong words in a row is enough to cause you problems.  \n(or even one word, if it's \\_ubersetzenseehafenstadt\\_.)\n\nso if one loose line on a page, or even two or three,  \nis enough to upset your frail sensibilities, then yes,  \nyou will undoubtedly have to resort to hyphenation,  \nif you want justification, or use ragged-right instead.\n\nbut the people who \\_want\\_ justification will generally  \nbe willing to put up with \\_some\\_ loose lines to get it,  \nif that's what it takes. and they'll likely prefer \\_that\\_  \nover the other option -- long waits for hyphenation...\n\nin addition, if you also give them a convenient toggle  \nfor the justification, thereby allowing a quick and easy  \nswitch-over to ragged-right when the loose lines on  \na specific page get to be too much for them to handle,  \nwith a quick-and-easy switch-back on the next page,  \ni think you've got the solution they will come to prefer.  \n(even if it was not \"optimal\" in some theoretical sense.)\n\nit's a balancing act...\n\n\\*\\*\\*\n\nalso, getting back to your example, under my rules,  \nthere's only \\_one\\_ set of breaks that \\_must\\_ be tight  \n-- the author's linebreaks on the \"canonical\" version.\n\nin other words, in my workflow, the \\_author\\_ does the  \nline-breaks, so thus is right there to rewrite if needed.\n\n(the publisher has been disintermediated, thank god.)\n\nso if the linebreaks on the \"canonical\" version are tight,  \nthat's all readers expect. they know full well that if they  \nrewrap to some other width, there might be loose lines.  \nthat's life.\n\n-bowerbird\n\np.s. some possible reworkings of your paragraph...\n\nhe was born graf heinrich karl wilheim otto friedrich  \nvon ubersetzenseehafenstadt, but changed his name  \nto nigel st. john gloamthorpby, a.k.a. lord woadmire,  \nin 1914. in his photograph, he looks every inch a von  \nubersetzenseehafenstadt, and he is entirely free of the  \ncranial geometry problem so evident in the older portraits.  \nlord woadmire is not related to the original ducal line of  \nqwghlm, the moore family (anglicized from the qwghlmian  \nclan name mnyhrrgh) which had been terminated in 1888  \nby a spectactularly improbable combination of schistosomiasis,  \nsuicide, long-festering crimean war wounds, ball lightning,  \nflawed cannon, falls from horses, improperly canned oysters,  \nand rogue waves.\n\nhe was born graf heinrich karl wilheim otto friedrich  \nvon ubersetzenseehafenstadt, but changed his name  \nto nigel st. john gloamthorpby, a.k.a. lord woadmire,  \nin 1914. in his photograph, he looks every inch a von  \nubersetzenseehafenstadt, and he is entirely free of the  \ncranial geometry problem so evident in the older portraits.  \nlord woadmire is not related to the original ducal line of  \nqwghlm, the moore family (anglicized from the qwghlmian  \nclan name mnyhrrgh) which was terminated in 1888 by a  \nspectactularly improbable combination of schistosomiasis,  \nsuicide, long-festering crimean war wounds, ball lightning,  \nflawed cannon, falls from horses, improperly canned oysters,  \nand rogue waves.\n\nhe was born graf heinrich karl wilheim otto friedrich von  \nubersetzenseehafenstadt, but changed his name to nigel  \nst. john gloamthorpby, a.k.a. lord woadmire, in 1914. in his  \nphoto, he looks every inch a von ubersetzenseehafenstadt,  \nand he is entirely free of the cranial geometry problem so  \nevident in the older portraits. lord woadmire is not related  \nto the original ducal line of qwghlm, the moore family  \n(anglicized from the qwghlmian clan name mnyhrrgh) which  \nhad been terminated in 1888 by a spectactularly improbable  \ncombination of schistosomiasis, suicide, long-festering  \ncrimean war wounds, ball lightning, flawed cannon, falls  \nfrom horses, improperly canned oysters, and rogue waves.\n\nhe was born graf heinrich karl wilheim otto friedrich von  \nubersetzenseehafenstadt, but changed his name to nigel  \nst. john gloamthorpby, a.k.a. lord woadmire, in 1914. in his  \nphoto, he looks every inch a von ubersetzenseehafenstadt,  \nand he is entirely free of the cranial geometry problem so  \nevident in the older portraits. lord woadmire is not related  \nto the original ducal line of qwghlm, the moore family  \n(anglicized from the qwghlmian clan name mnyhrrgh)  \nwhich had been terminated in 1888 by a spectactularly  \nimprobable combination of schistosomiasis, suicide,  \nlong-festering, crimean war wounds, ball lightning, flawed  \ncannon, falls from horses, improperly canned oysters, and  \nrogue waves.\n\nhe was born graf heinrich karl wilheim otto friedrich von  \nubersetzenseehafenstadt, but changed his name to nigel  \nst. john gloamthorpby, a.k.a. lord woadmire, in 1914. in his  \nphoto, he looks every inch a von ubersetzenseehafenstadt,  \nand he is entirely free of the cranial geometry problem so  \nevident in the older portraits. lord woadmire is not related  \nto the original ducal line of qwghlm, the moore family  \n(anglicized from the qwghlmian clan name mnyhrrgh)  \nwhich had been terminated in 1888 by a spectactularly  \nimprobable combination of schistosomiasis, suicide,  \nlong-festering, crimean war wounds, ball lightning,  \nflawed cannon, falls from horses, improperly canned  \noysters, and rogue waves.\n\nhe was born graf heinrich karl wilheim otto friedrich  \nvon ubersetzenseehafenstadt, but changed his name  \nto nigel st. john gloamthorpby, a.k.a. lord woadmire,  \nin 1914. in his photograph, he looks every inch a von  \nubersetzenseehafenstadt, and he is entirely free of  \nthe cranial geometry problem so evident in the older  \nportraits. lord woadmire is not related to the original  \nducal line of qwghlm, the moore family (anglicized  \nfrom the qwghlmian clan name mnyhrrgh) which had  \nbeen terminated in 1888 by a spectactularly improbable  \ncombination of schistosomiasis, suicide, long-festering,  \ncrimean war wounds, ball lightning, flawed cannon, falls  \nfrom horses, improperly canned oysters, and rogue waves.\n\n"
    },
    {
      "time": "16 Mar 2009 — 3:33pm",
      "content": "Well, I'm working on it :-)\n\nNick:  \n<cite>...some kind of grammatical+dictionary intelligence to determine the difference between a single left quote and an apostrophe...</cite>\n\nSure. I tried to come up with a sentence containing both _'cause_ and _cause_ to illustrate that. (No luck, on such a short run -- sorry, I'm not a native. Couldn't find a good use for _'twixt_ either.)\n\nAs for bowerbird (apologies for changing the order around), returning to hyphenation code just this once more:\n\n<cite>..you need working code if you want to make a convincing point...</cite>\n\npreceded by\n\n<cite>.. preinsertion might not save _any_ time, whole-picture-wise, because you will need to delete all the unnecessary hyphens.</cite>\n\nMy code--existing on my hard disk and all--_does_ finds breaking points. A test routine actually inserts them--so I can verify if they're correct. _However:_ inserting them physically into the text, checking lengths, then removing extraneous ones before blitting to screen, is totally redundant. The breaking code returns breaking points, offset from the start of the word. The pragraph breaking routine expects lengths and widths of words and/or fragments; not the actual _words_. Only when drawn to the screen, the characters are called up from memory. This separates 'formatting' (= line breaking) nicely from 'drawing'.\n\nThe good news is I'm taking the same approach as you are on the un-/badly formatted Gutenberg texts: preprocessing them makes it all a bit tidier.  \nBut it seems our targets diverge from there. Oh well.\n\nIf you're interested in 'the very best line breaking' for any width, you should (indeed, perhaps you already have) take a look at Knuth/Plass line breaking. A good introduction for me was [this primer text](http://web.archive.org/web/20131020225914/http:/defoe.sourceforge.net/folio/knuth-plass.html). The example shown uses hyphenation, but the general algorithm works just as well without, which is a pretty important point for you. You can't get any better than that.\n\n"
    },
    {
      "time": "16 Mar 2009 — 3:58pm",
      "content": "\"Brevity is the soul of wit.\" Not to mention, intelligence.\n\n-------------------------------------  \n_Inventor of the DVD rewinder_\n\n"
    },
    {
      "time": "16 Mar 2009 — 4:40pm",
      "content": "Such a counterpart shall fame his wit.\n\nI'd suggest \"Thine Enmity's most Capital\" -- perhaps looking better in all lowercase.\n\n"
    },
    {
      "time": "16 Mar 2009 — 6:23pm",
      "content": "theunis said:  \n\\> Well, I’m working on it :-)\n\nand, as i said from the outset, i look forward to seeing it. :+)\n\n\\*\\*\\*\n\n\\> I tried to come up with a sentence containing  \n\\> both \\_’cause\\_ and \\_cause\\_ to illustrate that.\n\nthe occasional exception won't really invalidate results that  \nare completely correct in the vast majority of cases, though.\n\nif you want to discuss curly-quote conversion, start a thread,  \nand i'll be happy to share the results of my experimentation.\n\n\\*\\*\\*\n\n\\> My code—existing on my hard disk and all— \\_does\\_  \n\\> finds breaking points. A test routine actually inserts them  \n\\> — so I can verify if they’re correct.\n\njust a quick note here to say that i don't need to \\_see\\_ your code.  \nin fact, if it's novel at all, i would suggest you keep it under wraps.\n\ni just need to see it in action. compile a program that i can run.  \ni'm on mac, but i'll find a windows box if that's all you can make.\n\n\\> \\_However:\\_ inserting them physically into the text,  \n\\> checking lengths, then removing extraneous ones  \n\\> before blitting to screen, is totally redundant.\n\nwell, i would've sworn you mentioned preinsertion up above.  \nbut if you now contend \"preformatting\" involves something  \ndifferent than that, i will accept that. you can set whatever  \nconditions you want. whether people \\_buy\\_ them or not is a  \ndifferent story, but for our purposes here, whatever you say.\n\n\\> The breaking code returns breaking points, offset from  \n\\> the start of the word. The pragraph breaking routine  \n\\> expects lengths and widths of words and/or fragments;  \n\\> not the actual \\_words.\\_\n\nok, that's another way that people have attacked this issue, yes.\n\nthe problem with that, as you might or might not know, is that  \nin order to know \"the lengths and widths\" of those fragments,  \nyou need their font and fontsize. but one important aspect of  \nelectronic-books is that the end-user sets the font and the size.  \nthe user also sets the size of the viewport, another consideration.  \nin the more sophisticated programs, the user might also control  \nother aspects that affect layout, such as the position and size of  \npictures and other graphic elements (e.g., space around callouts).\n\nsome e-book programs try to \"finesse\" this problem by giving  \nthe user a small number of font-sizes -- the kindle gives you 4,  \nor maybe it's 6, if memory serves correctly, and they only offer  \n1 or 2 fonts -- so they can compute the widths for all the sizes.\n\nbut that kind of constraint will \\_not\\_ be tenable in the long run.  \ne-book end-users \\_expect\\_ that they can use any font they want,  \nand they \\_expect\\_ that they can make that font any size they like.\n\n(and yeah, you can scale the numbers, but then you've moved to  \ndouble-math instead of integer-math, and that means it's slower.)\n\n\\> If you’re interested in ’the very best line breaking’ for any width\n\num, no, that's the very thing we've been discussing all along...\n\nthe situation has scarce resources and a real-time requirement,  \nso i'm looking for the best \\_possible\\_ line-break routines that  \n\\_meet\\_ those requirements. it's all about living with constraints.\n\n\\> If you’re interested in ’the very best line breaking’ for any width,  \n\\> you should (indeed, perhaps you already have) take a look at  \n\\> Knuth/Plass line breaking.\n\ni've looked at it. i've studied it. it cannot meet the requirements,  \nas far as i can see... so i use simpler routines that give me breaks  \nthat are \\_almost\\_ as good, in \\_most\\_ situations\\_, and i move on...\n\n\\> The example shown uses hyphenation, but the general algorithm  \n\\> works just as well without, which is a pretty important point for you.  \n\\> You can’t get any better than that.\n\nno, but you can get \\_almost\\_ as good, and do the job a \\_lot\\_ faster,  \nwhich happens to be the superior solution in this particular situation.\n\nfor instance, was there anything wrong with the breaks i gave above,  \non your actual text? the rag looked pretty good, at least to my eyes.\n\n-bowerbird\n\n"
    },
    {
      "time": "16 Mar 2009 — 9:57pm",
      "content": "If there ever comes a time  \nto pluck the bowerbird,  \nit ought to be done well,  \nso it stays plucked.\n\n"
    },
    {
      "time": "29 Mar 2009 — 1:29pm",
      "content": "- CSS controls whitespace, among many other things, as you should know by now.\n- No matter how you do it, you’re going to have to improve your HTML and PDF semantics, even if that means throwing out your existing infrastructure and starting from scratch.\n- `html lang=\"en-US\"` (or any ISO language code optionally with extension)\n- I do too much volunteer work as it is.\n\nWe would appreciate it if you stopped using so many hard returns in your postings here. Two returns after a paragraph are more than enough.\n\n—  \nJoe Clark  \n [http://joeclark.org/](http://web.archive.org/web/20131020225914/http:/joeclark.org/ \"http://joeclark.org/\")\n\n"
    },
    {
      "time": "29 Mar 2009 — 3:29pm",
      "content": "joe said:  \n\\> No matter how you do it, you’re going to  \n\\> have to improve your HTML and PDF semantics,  \n\\> even if that means throwing out your existing infrastructure\n\nas i said, it's simply a matter of rewriting the template,  \nand when my users do that task, i'll happily update it...\n\nbecause if i don't have any users who \\_want\\_ this done,  \nor any users at all, there's no need for me to do it myself.\n\ni suspect, however, that when you say i \"have to\" do this,  \nwhat you're really saying is that if i want my output to be  \naccessible, that's what i'd \"have to\" do.\n\nmy answer is that i \\_do\\_ want my output to be accessible,  \nbut that accessibility will be a product of my z.m.l. format  \nwith its viewer-program, \\_not\\_ the .html or .pdf formats...\n\nas far as i'm concerned, .html and .pdf are legacy formats;  \nthey'll be replaced by some light-markup format like mine.  \nbut this, of course, is another conversation for another day.\n\n\\> I do too much volunteer work as it is.\n\nthanks for your feedback...\n\n-bowerbird\n\n"
    }
  ]
}

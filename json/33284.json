{
  "id": "33284",
  "title": "Class Kerning and font preview",
  "forum": "Build",
  "tags": [
    "Build"
  ],
  "content": "I wanted your opinion in this subject:  \nI have built a font that uses only Class Kerning and decided not to expand to conventional kerning, so I have a very clean file, only a few kbs, etc.  \nthe problem is that I can't have a correct preview of font in Linotype Fontexplorer X nor in MyFonts preview. (Adobe apps all support)  \ndo you think we have to still use conventional kerning creating redundant information in font files?\n\n",
  "author": "dimitre",
  "time": "24 Apr 2007 — 3:29pm",
  "uid": "4777",
  "comments": [
    {
      "time": "24 Apr 2007 — 4:59pm",
      "content": "What kind of font are you generating? (OpenType TT, OpenType CFF, PostScript Type 1, etc.)\n\n"
    },
    {
      "time": "24 Apr 2007 — 5:32pm",
      "content": "Is OpenType CFF the same PostScript Flavoured Opentype? this is what I am generating.\n\n"
    },
    {
      "time": "24 Apr 2007 — 6:43pm",
      "content": "Yes, OpenType CFF = PostScript-flavored Opentype\n\n"
    },
    {
      "time": "25 Apr 2007 — 2:26am",
      "content": "<cite>the problem is that I can’t have a correct preview of font in Linotype Fontexplorer X nor in MyFonts preview. (Adobe apps all support)<br>\ndo you think we have to still use conventional kerning creating redundant information in font files?</cite>\n\nA 'kern' feature with class-based kerning is supported widely, thought still not everywhere. So this is what, in my opinion, you should count on. I think that font managers' and websites' font previews are the least thing to care for. They are just that: previews. It is them which should adapt to current OT standards, not the other way round.\n\n"
    },
    {
      "time": "25 Apr 2007 — 6:39am",
      "content": "I suppose, as a stop-gap measure, you could write a script that would apply your class-based kerning indivudually to every single letter combination. It would balloon file size but would allow you to continue working with class-based in program, and then only need to run the script once right before producing the font.\n\n_«El futuro es una línea tan fina que apenas nos damos cuenta de pintarla nosotros mismos». (La Luz Oscura, por Javier Guerrero)_\n\n"
    },
    {
      "time": "25 Apr 2007 — 9:51am",
      "content": "Tools \\> Kerning Assistance \\>Expand\n\nThis will convert your class kerns into \"hard\" kerns stored in a separate font table which can be accessed by previewers.\n\nYou can also inspect and edit these hard kerns in the list on the right side of the Metrics window.\n\nFL provides various criteria by which you may limit the number of kern pairs generated by the Expand process, allowing you to limit ballooning.\n\n"
    },
    {
      "time": "25 Apr 2007 — 11:04am",
      "content": "Heh, well there ya go. FontForge doesn’t have that quick of an option. Maybe I should go check out the source and see if my Obj-C skills might not be able to handle some C++ to do it.\n\n_«El futuro es una línea tan fina que apenas nos damos cuenta de pintarla nosotros mismos». (La Luz Oscura, por Javier Guerrero)_\n\n"
    },
    {
      "time": "26 Apr 2007 — 6:24am",
      "content": "I agree with k.l.  \nits more to ask what you think about it than ask how to do it.  \nI do prefer not to expand. the big problem is that people buy fonts based on the preview.\n\n"
    }
  ]
}

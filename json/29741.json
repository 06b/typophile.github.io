{
  "id": "29741",
  "title": "Punctuation in italics",
  "forum": "Design",
  "tags": [
    "Design"
  ],
  "content": "Is there a point in designing \"slanted\" versions of the punctuation marks and other supportive symbols (eg. ! ? , . / ; : ' \" \\ | {} [] () \\* % \\<\\> + - = @) in the italics of a typeface, or is it just a matter of consistency? Do you think that the italics of a typeface could work with \"upright\" designs of those characters?\n\n",
  "author": "gtrianta",
  "time": "27 Nov 2006 — 6:27am",
  "uid": "10933",
  "comments": [
    {
      "time": "27 Nov 2006 — 7:01am",
      "content": "Yes, e.g., [http://www.chicagomanualofstyle.org/](http://web.archive.org/web/20131105092054/http:/www.chicagomanualofstyle.org/ \"http://www.chicagomanualofstyle.org/\")\n\n"
    },
    {
      "time": "27 Nov 2006 — 7:19am",
      "content": "Upright exclamation points, question marks, quote marks and particularly parenthesis look really awkward with italics. I'd say mathematic marks and the @ symbol probably don't need to be slanted.\n\n"
    },
    {
      "time": "27 Nov 2006 — 8:07am",
      "content": "Yes, but together with altered matrics. (Oops! Didn’t mean to overstress)\n\n"
    },
    {
      "time": "27 Nov 2006 — 8:49am",
      "content": "Kristian,\n\nactually, I recommend including both slanted and upright punctuation in an italic font (the upright being stylistic set 1, for example). Depending on the context and the language you're setting, people may want to set punctuation italic or upright. In some countries the typographic practice is that if you insert an italic quotation into parantheses in a upright text, the parantheses will be upright. However, if you use the upright parantheses from the upright font, you'll end up with spacing problems that need to be corrected manually. Therefore, it would be quite useful to have the upright fonts in the italic font, of course properly spaced to go well with the italic letters.\n\nA.\n\n"
    },
    {
      "time": "27 Nov 2006 — 11:16am",
      "content": "I think it depends on the face.  \nIt is certainly more appropriate to have slanted marks in a sans serif, especially when the italic is very much a slanted version of the roman.  \nIn serifed faces where the italic serifs are prominent, some upright marks such as the parentheses, look much better straight than slanted. The reason is that the serifs \"fill out the square\". See below.  \nRather than accept the editor's view, via Chicago or whatever authority, this is more a decision for the typographer.  \nIn italics, the degree of slant varies within most faces. The round letters in Helvetica, for instance, have less slant than the straight ones. And in many old style italics, some of the punctuation has very little slant at all. See the Caslon commas:\n\n ![](http://web.archive.org/web/20131105092054im_/http:/typophile.com/files/slantmarks_4742.png)\n\n"
    },
    {
      "time": "29 Nov 2006 — 9:44am",
      "content": "<cite>I recommend including both slanted and upright punctuation in an italic font (the upright being stylistic set 1, for example).</cite>\n\nSounds like a good idea! By the way I like your work on Polish diacritics.\n\nKTKM\n\n"
    },
    {
      "time": "29 Nov 2006 — 11:10am",
      "content": "_I recommend including both slanted and upright punctuation in an italic font_\n\nAdam is certainly in contention for \"most glyphs in a font\" with Zapfino Super Pro, although Karsten Luecke may hold the lead in quantity of stylistic sets in a single font, Tiptoe. However, Robert Slimbach's Garamond Pro upped the ante for sheer glyph-count, its multiple language encodings leaving Ed Interloc's contextual alternates in the dust. I don't know what Adam's working on at the moment, but it may well regain him the lead, and the OTie statuette, if he follows through on all his recommendations for glyph substitutions :-)\n\n"
    },
    {
      "time": "29 Nov 2006 — 7:48pm",
      "content": "Arial Unicode probably has the most glyphs  \nof any font (although most of them suck).\n\nhhp\n\n"
    },
    {
      "time": "30 Nov 2006 — 3:26am",
      "content": "Nick,\n\nyou may be surprised, but I actually talk to people like book designers and find out what they mean. I have a few fellow book designers who continuously are telling me that the vast majority of body faces that are on the market suck. They may have \"pretty faces\" but they're either spaced inconsequently or they don't contain the glyphs they should. Swashes and ligatures are bells and whistles that a good book designer does not necessarily \\*need\\*. But he would surely need an ample amount of punctuation marks, superscript and subscript letters and figures. Perhaps also small caps (even two sizes of them). Adobe \"Pro\" fonts are O.K. in this regard but far from being perfect.\n\nThere are people who may have the goal of producing the largest number of typefaces possible, there may be others who only want to create a few, but good ones.\n\nA.\n\n"
    },
    {
      "time": "30 Nov 2006 — 7:27am",
      "content": "Adam, I'm not surprised, but I do find it hard to keep up with all the characters and glyphs that are necessary in a font. I have a couple of faces under development for several years, and every time I get close to finishing them, I discover that I need to introduce more OT feature sets and more glyphs. Both slanted AND upright punctuation in an italic, as stylistic sets? Is this something your book designer friends have been crying out for?!\n\nIt's a little precious to complain that most text faces suck, when book work is only one genre of text work, and most text faces have not been designed for it. News text faces certainly aren't pretty, and they're inappropriate for book work, but that doesn't mean they suck.\n\n_Adobe “Pro” fonts are O.K. in this regard but far from being perfect._\n\nWhat is the Twardoch Standard? What would you add to Minion Pro, for instance?  \nHow about Microsoft's CS fonts?\n\n"
    },
    {
      "time": "30 Nov 2006 — 11:18am",
      "content": "Nick,\n\nthe some problematic issues about Minion Pro that come to my head are:\n\nMinion Pro problematic issue 1: The mess regarding superscript and subscript glyphs.\n\nI've discussed my position at large at [http://typophile.com/node/16879](http://web.archive.org/web/20131105092054/http:/typophile.com/node/16879 \"http://typophile.com/node/16879\") , and my remarks still stand. The set of superscript and subscript glyphs really needs to be as complete as possible, or none at all. I'd even go as far as to say that the entire character set could be replicated in sups and subs/sinf. I mean, why not :)\n\nIf you design your typeface with optical sizes, then you're a winner. Because essentially, all you need to do is to pick the right optical size for each of your basic optical sizes, and reduce the size down by a percentage. For example for your 10 pt font, you could use a 5 pt master, and for your 36 pt font you need to use a 18 pt master. (In reality, you'd use different factors, like 55%-60%).\n\nBefore doing the procedure described below, make sure that your glyphset is reasonably sorted in your font and that your metrics and kerning for all the glyphs that you want to provide in the half-sized sets are already designed and kerned.\n\nIf you design using an optical size MM axis, you can generate the \"half-sized\" masters as instances. Then, in Tools / Action / Contour / Scale, you choose a 53% horizontal scale and a 50% vertical scale, or something like that. Your kerning, metrics and hinting will be scaled as well. This is your master for the half-sized glyphs.\n\nYou may now remove some glyphs that you don't think need to be included in the half-sized way. However, I don't think there's something wrong with just including all your glyphs rather than just a-z and 0-9. Well, you probably want to remove \".notdef\" and space\" there.\n\nSwitch to the Index mode of your Font Window. Now open the classes panel in the half-sized font and drag the entire character set onto a new class which you should call \"\\_subs1\". You should use \"\\_\" because you may also use this class definition as a kerning class. Pick one key glyph in this class, e.g. \"n\".\n\nCopy-and-paste this class definition into your target font Classes panel. This will be the class that represents all the glyphs that will be replaced in the sups, subs, sinf and ordn features.\n\nYou will need to create four sets of them: sitting on a baseline, below the baseline, touching the caps height line or being slightly below it, and above the caps height line. What you have now is the first set. (Alternatively, you may want to only include three sets: below the baseline, touching the caps height and above the caps height).\n\nYou save this font, then you run a simple Python macro:\n\nfor g in fl.font.glyphs: g.name = g.name + \".subs\"  \nfl.UpdateFont(-1)\n\nAfter that, choose Glyph / Glyph Names / Generate Unicode. This gives you a set of glyphs which you will include in your font for the \"subs\" feature.\n\nGo to your main font, choose Tools / Merge Fonts and add the half-sized glyphs to your font. You go back to your half-sized font, revert the changes (so the suffixes are gone) and you append a new set of suffixes using the little Python macro, this time \".sinf\". You move your glyphs below the baseline (using Action / Contour / Shift) and repeat the merging into your base font. Then, you revert your half-sized font again, append the \".ordn\" suffix and move your glyphs to touch or be slightly below the caps height, and you repeat the procedure. Finally, you use the \".sups\" suffix and move the glyphs to be above the caps height.\n\nNow you have four sets of \"half-sized\" glyphs at different positions. For each of the sets that you have added, select all the glyphs and drag-and-drop them onto new classes, named: \\_subs2, \\_sinf2, \\_ordn2 and \\_sups2. You should use an \"\\_\" at the beginnig because you will also use these classes in class kerning. Pick one glyph such as \"n\" from each class (i.e. n.subs, n.sinf, n.ordn and n.sups) as key glyph and set the kerning scope for these classes to both L and R.\n\nThen, the only thing you need to do is to add the OT Layout code:\n\nfeature subs { sub @\\_subs1 by @\\_subs2; } subs;  \nfeature sinf { sub @\\_subs1 by @\\_sinf2; } sinf;  \nfeature ordn { sub @\\_subs1 by @\\_ordn2; } ordn;  \nfeature sups { sub @\\_subs1 by @\\_sups2; } sups;\n\nFinally, you need to add some positive kerning values for the classes you created against some problematic glyphs, e.g. parantheses, lowercase f etc. In fact, you will already do a lot of damage prevention if you simply add positive kerning for all the pairs in the string:\n\n/n/n.subs/n/n.sinf/n/n.ordn/n/n.sups/n\n\nThis will result in positive kerning between all the classes that you created. I think it's quite safe to assume that some extra letterspacing will always be useful whenever the font switches to any of the half-sized letters. Of course, the positive kerns between /n/n.sinf/n/n.sups/n may be larger than between /n/n.subs/n/n.ordn/n because the half-sized glyphs that hang below the baseline or above the caps height have more potential to clash with the full-sized glyphs. You may want to do some extra kerning for glyphs like parantheses, f or Q.\n\nMinion Pro problematic issue 2: The absence of upright punctuation in italics.\n\nThis is especially problematic for parantheses, brackets and quotation marks. In some typographic practices, the rule is that you you have some upright text and then there are quotation marks, parantheses or brackets, and the text inside these is italic, you set the punctuation upright rather than italic. The rationale of it is that the quotation marks, parantheses or brackets do not \"belong\" to the italicized quotation but to the surrounding upright text. This typographic practice poses problems especially when there are italicized letters such as \"f\" immediately followed by upright quotation marks or closing parantheses. Since there is a font change, there is no possibility for automatic kerning. If the font vendor provided upright punctuation in the italic cuts, and it were properly kerned against the italic letters (or simply the left sidebearing of the closing brackets, parantheses or quotation marks in those upright sets were enlarged), all the nasty typesetting problems would go away -- of course provided that the typesetter knew about that particular feature. The upright variants should be placed in one of the \"ssXX\" features and in the \"salt\" feature.\n\nMinion Pro problematic issue 3: The absence of combining (non-spacing) diacritical marks from the U+03xx section.\n\nIf included, users could build some special accented characters more easily. Of course ideally, a \"mark\" positioning feature could be defined in VOLT so that combining marks that follow letters would automatically snap into the right positions when typeset, but this requires using VOLT and is not currently supported by InDesign. However, even the mere presence of the combining diacritics would already be helpful.\n\nRegards,  \nAdam\n\n"
    },
    {
      "time": "30 Nov 2006 — 4:24pm",
      "content": "\"<cite>I spent so much time on Typophile I never figured out disagreeing with Adam about quirky diacritics.</cite>\" (Typophile Small Talk Generator 1.3!)\n\nThis is great, Adam. I will definitely implement your recommendations in my fonts (over time). Thanks!\n\n"
    }
  ]
}

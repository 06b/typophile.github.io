{
  "id": "17262",
  "title": "Feature hacks and stylistic sets",
  "forum": "Build",
  "tags": [

  ],
  "content": "So, deriving from the topic here - [http://typophile.com/node/16879](http://web.archive.org/web/20070808071048/http:/typophile.com/node/16879 \"http://typophile.com/node/16879\") - what is the general feeling on using stylistic sets to accomplish some of what presently can’t be done with existing OpenType features (but some “crazy” people might want to do anyways) ? Lets say I want to make supersuperiors or a petite lowercase or special size and aligment just for end/footnotes, special form for captioning images, etc? The immediate problem from the user POV is that the same set from two different foundries or even fonts need not mean the same thing and there is no sensible way to memorize what which does. If the feature is used before registration, there is no real guarantee that it would be registered or registered with the same name thus creating a fairly dangerous minefield.\n\nOr should one always propose and register[1] a new OpenType feature for it and then wait with releasing? Never mind that as no app would support[2] it at the very least until a new version is out (even if then) so users couldn’t use it? Or is there a good middle ground?\n\n[1] However that is done, and if there will really be an ISO standard, I can imagine it will be the standard “please come back with a truckful of documentation in time for the standards next revision in 5 years”?\n\n[2] OK, so so far even support for stylistic sets is rather thin\n\n [‹ Company logo as font](http://web.archive.org/web/20070808071048/http:/typophile.com/node/17319 \"Go to previous forum topic\") [FontLab Glitch: Percentage symbol doesn't appear ›](http://web.archive.org/web/20070808071048/http:/typophile.com/node/17394 \"Go to next forum topic\")\n\n",
  "author": "<a href=\"/web/20070808071048/http://typophile.com/user/5580\" title=\"View user profile.\">sander</a>",
  "time": "<br>",
  "uid": "5580",
  "comments": [
    {
      "time": " 12.Jan.2006 11.41pm",
      "content": "I think the Stylistic Sets features would be entirely appropriate for something like ’a petite lowercase’. This is exactly the sort of thing the features were designed for.\n\nI think using them for something like specially tailored superiors for e.g. footnotes as opposed to ordinals, would also be appropriate and not at all a hack, so long as you implement the features so that the stylistic set feature is used in conjunction with the superiors feature. So you wouldn’t use e.g. ’ss01’ to map regular numerals to your special superior numerals, you would use it to map the superior numerals resulting from the ’sups’ feature to those special, stylistic forms. This is entirely legitimate, because what you are doing is applying stylistic variants of superior letters.\n\nCross-font compatibility is always going to be a problem for anything involving stylistic substitutions, and there is no way around this. Ideally, applications should have the option to automatically turn off stylistic set layout tags when you switch fonts out of a particular family.\n\n"
    },
    {
      "time": " 17.Jan.2006 6.33pm",
      "content": "I can’t think of a case where “ss01”-“ss20” could be hacked. These features are intended to be “non-semantic” i.e. they do not impose a particular functionality of the glyphs. You can essentially put any variants you want to them. On several occasions, I have made them work together with other features, e.g. smcp or onum.\n\nAdam\n\n"
    },
    {
      "time": " 17.Jan.2006 10.37pm",
      "content": "_I can’t think of a case where “ss01”-“ss20” could be hacked. These features are intended to be “non-semantic”..._\n\nSo hacking a stylistic set feature would involve using one to impose a semantic distinction, but that is true of pretty much any GSUB feature. The kind of example that comes to mind is using s stylistic feature to substitute a semantically meaningful variant that is not a true variant of the underlying character code. For example, in some Greek typesetting certain letters might be printed upsidedown, and this is semantically meaningful because it indicates a distinct pronunciation, and these forms really should have their own Unicode codepoints and be encoded in the text string. But because they are not (yet) in Unicode, some intrepid font developer might decide to treat them as stylistic variants of the regular letters. I would consider this to be a hack.\n\n"
    },
    {
      "time": " 19.Jan.2006 12.04pm",
      "content": "What if a font has both a bi-cameral and one-cameral “g” and a particular textual application considers both variants necessary and imposes semantic difference?\n\nThere are more things in heaven and earth, John :)\n\nA.\n\n"
    },
    {
      "time": " 19.Jan.2006 10.44pm",
      "content": "_What if a font has both a bi-cameral and one-cameral “g” and a particular textual application considers both variants necessary and imposes semantic difference?_\n\nThen the mono-storey ɡ should be encoded as U+0261.\n\nThere are more things in heaven and Unicode, Adam :)\n\n"
    }
  ]
}

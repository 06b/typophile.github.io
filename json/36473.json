{
  "id": "36473",
  "title": "Modifying Apple's Myriad Pro",
  "forum": "Release",
  "tags": [
    "Build",
    "Release"
  ],
  "content": "Hello,\n\nI'm planning to work on my website design and I'm going to use a dynamic text replacement technique that will automatically change the headlines with an image. That way I'm able to use other fonts than the regular Arial, Verdana, Georgia, Courier and Times New Roman and, so far, I'm going for the Myriad Pro available in Mac OS X.\n\nHowever, there's a slight problem: Romanian, the language I use on my website, has some characters not available in the default Myriad Pro like Ş and Ţ and I thought I could try and add those by hand.\n\nAm I allowed to do that? And am I allowed to upload a font from the operating system to the server so I can use it to generate images with it?\n\nThank you.\n\n",
  "author": "acm",
  "time": "25 Aug 2007 — 2:03am",
  "uid": "21080",
  "comments": [
    {
      "time": "25 Aug 2007 — 4:48am",
      "content": "The End User License Agreement for most commercial fonts prohibits any modification or reverse engineering of the font data, so opening the font up in an editing program and adding characters is a no-go.\n\nj a m e s\n\n"
    },
    {
      "time": "25 Aug 2007 — 5:02am",
      "content": "Doesn't Adobe's EULA allow for modification for personal use, though? Wouldn't this fall under that? I am not a lawyer…\n\n"
    },
    {
      "time": "25 Aug 2007 — 5:15am",
      "content": "Here's the thing: it's Apple's Myriad Pro that has only some slight differences from the Adobe Myriad Pro and I'm guessing there are different EULAs. I can't find Apple's font EULA on the web so I don't really know what I can and can't do.\n\nThanks for your input.\n\n"
    },
    {
      "time": "25 Aug 2007 — 6:18am",
      "content": "I found these characters in Adobe Myriad Pro version 002.000. According to [this link](http://web.archive.org/web/20141108102112/http:/en.wikipedia.org/wiki/Romanian_alphabet) of Wikipedia, those are the characters you are looking for.\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/romanian_5513.gif)\n\n"
    },
    {
      "time": "25 Aug 2007 — 6:39am",
      "content": "Note: The glyphs in unicode posisions U+021A and U+021B in Myriad Pro 002.000 are the same as those of Tcommaaccent and tcommaaccent above.\n\n"
    },
    {
      "time": "25 Aug 2007 — 1:27pm",
      "content": "\\> _it’s Apple’s Myriad Pro_\n\nHuh!? How did you get this font? Are you an Apple employee?  \nLast time I checked it was not being bundled with the OS...  \n [http://docs.info.apple.com/article.html?artnum=25710](http://web.archive.org/web/20141108102112/http:/docs.info.apple.com/article.html?artnum=25710 \"http://docs.info.apple.com/article.html?artnum=25710\")  \n [http://docs.info.apple.com/article.html?artnum=301332](http://web.archive.org/web/20141108102112/http:/docs.info.apple.com/article.html?artnum=301332 \"http://docs.info.apple.com/article.html?artnum=301332\")  \n [http://en.wikipedia.org/wiki/List\\_of\\_fonts\\_in\\_Mac\\_OS\\_X](http://web.archive.org/web/20141108102112/http:/en.wikipedia.org/wiki/List_of_fonts_in_Mac_OS_X \"http://en.wikipedia.org/wiki/List\\_of\\_fonts\\_in\\_Mac\\_OS\\_X\")\n\n"
    },
    {
      "time": "25 Aug 2007 — 2:05pm",
      "content": "Um, I might have mixed things up. I have 10 otf files with MyriadPro in their name in /Library/Fonts. I thought it was Apple's Myriad Pro, but now I notice that there's a copy of Photoshop, Illustrator and InDesign installed. It's a second-hand MacBook so fonts might have been installed with those applications.\n\nAs you might have noticed, I'm really, really new in typography. I've just learned the difference between serif and sans-serif :)\n\n"
    },
    {
      "time": "25 Aug 2007 — 2:50pm",
      "content": "\\> _I have 10 otf files with MyriadPro in their name in /Library/Fonts_\n\nOpen FontBook and tell us the version of these fonts. (Go to Preview-\\>Show Font Info, or press Apple+I)\n\n\\> _I notice that there’s a copy of Photoshop, Illustrator and InDesign installed_\n\nWhich versions?\n\n"
    },
    {
      "time": "25 Aug 2007 — 5:03pm",
      "content": "Apple Myriad is the branding font they use internally, right? The only version of Myriad that Apple ever claimed to have shipped would have been the 3rd generation (first color) iPod UI font, but they've since removed references to that from their site.\n\n"
    },
    {
      "time": "25 Aug 2007 — 7:17pm",
      "content": "I googled and could fairly rapidly find this\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/amyriadofdowloads_3538.gif)\n  \nand the links are not dangling. \n"
    },
    {
      "time": "25 Aug 2007 — 9:24pm",
      "content": "My guess is that there can't be much difference between these and the Adobe versions, otherwise the Apple lawyers would have been on this, like a...\n\n"
    },
    {
      "time": "26 Aug 2007 — 12:53am",
      "content": "Here's what I got from FontBook for MyriadPro-Bold:\n\nPostScript name MyriadPro-Bold  \n Full name MyriadPro-Bold  \n Family Myriad Pro  \n Style Bold  \n Kind OpenType PostScript  \n Language English, French, German, Spanish, Italian, Dutch, Swedish, Danish, Finnish, Portuguese  \n Version Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032  \n Location /Library/Fonts/MyriadPro-Bold.otf  \n Unique name 2.007;ADBE;MyriadPro-Bold  \n Designer Robert Slimbach and Carol Twombly  \n Copyright © 2000, 2004 Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.  \n Trademark Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.  \n Enabled Yes  \n Duplicate No\n\nI guess it's the Adobe Myriad Pro, not Apple Myriad.\n\nFrom what I've read, Apple's Myriad has \"incorporates minor spacing and weight differences from the standard varieties, and includes Apple-specific characters such as the company logo\" (from the [Wikipedia article](http://web.archive.org/web/20141108102112/http:/en.wikipedia.org/wiki/Typography_of_Apple_Inc.)) and may not be as cross-platform as the Adobe version.\n\nI'm sorry for the mix-up :)\n\n"
    },
    {
      "time": "26 Aug 2007 — 6:01am",
      "content": "\\> _My guess is that there can’t be much difference between these and the Adobe versions_\n\nWell, here is a grab taken from the output of ADFKO's \"tx -pdf\" command applied on a otf reencoded version of the said ttf font.\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/myapple_5385.gif)\n\n"
    },
    {
      "time": "26 Aug 2007 — 8:17am",
      "content": "U+2044 appears to be the stick the lawyers will beat you with if you post the font. ;-)\n\n"
    },
    {
      "time": "26 Aug 2007 — 5:37pm",
      "content": "\\> _Romanian, the language I use on my website, has some characters not available in the default Myriad Pro like Ş and Ţ_  \n\\> _Full name MyriadPro-Bold  \nVersion Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032_\n\nAndrei, what makes you think that the version you say you have does not contain the characters needed for Romanian?  \nBTW, v2.007 is the latest shipping version of Myriad Pro.\n\n"
    },
    {
      "time": "27 Aug 2007 — 3:42am",
      "content": "Miguel, forgive my ignorance, but I used a Romanian keylayout for the Mac and when I pressed those letters in, let's say Pages, I got a different font. I'm guessing the software automatically changes the font so it will still print that letter.\n\n"
    },
    {
      "time": "27 Aug 2007 — 5:21am",
      "content": "On my Mac, here is what the Romanian keyboard looks like:\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/romaniankeyboard_4343.gif)\n  \nI thus get the Ș just under the escape and Ț under Â at the left of the CR. How did you type Ș and Ț in your message above? Where is \"Pages\" on your keyboard? If they are the up and down arrow, that's not the right choice! [edit] for typing your characters. \n"
    },
    {
      "time": "27 Aug 2007 — 7:01am",
      "content": "Pages is an Apple application that is part of the iWork suite :)\n\nRomanian layouts have been a major problem in the last few years. Pre-Windows Vista keyboards have S and T with a cedilla, not a comma underneath so most applications and documents use the non-stardard Microsoft way. And most Windows fonts, like Arial, Verdana and Times New Roman, don't have the T and S with a cedilla (Microsoft issued an update a couple of months ago, but you have to search for it, it's not in the mainstream Windows Update) and if you write a web page with those letters or the equivalent HTML entities Internet Explorer will display empty squares instead and Firefox will try to \"build\" the letters.\n\nIt seems that the letters T and S with cedilla are not part of Myriad Pro (or at least they won't show up as regular Myriad Pro letters).\n\nThanks for helping me clear things out.\n\n"
    },
    {
      "time": "27 Aug 2007 — 7:18am",
      "content": "Now everything is clear. Here is s cedilla, is it not (we have c cedilla in French).\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/scedilla_4806.gif)\n  \nand I don't see either a correct Tcedilla or tcedilla; all I see is a T and a t with a comma underneath. No font in my system seems to have a Tcedilla or a tcedilla. [edit] By the way, the above Scedilla and scedilla are from Myriad. \n"
    },
    {
      "time": "27 Aug 2007 — 7:27am",
      "content": "Correction: I found many other fonts with a correct Tcedilla ant tcedilla, but I don't get them in my Myriad Pro\n\n"
    },
    {
      "time": "27 Aug 2007 — 7:51am",
      "content": "What is even more mysterious to me is that the S and s with a comma underneath do not even show in this [**Character map**](http://web.archive.org/web/20141108102112/http:/www.fontshop.com/fonts/singles/monotype/myriad_pro_regular/?acs=1&acs_p=2) on FontShop.\n\n"
    },
    {
      "time": "27 Aug 2007 — 9:51am",
      "content": "With a SIL [Ukelele](http://web.archive.org/web/20141108102112/http:/scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=ukelele) modified romanian keyboard (not the one coming with the mac), I could type directly in Excel the following:\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/cedillas_5974.gif)\n  \nThat does not solve your problem with Myriad but Ukelele is a useful tool. The keyboard I used is [here](http://web.archive.org/web/20141108102112/http:/www.iro.umontreal.ca/~boyer/typophile/romanian.tgz); you put it in your library/Keyboard Layouts, log out and log in again. \n"
    },
    {
      "time": "27 Aug 2007 — 10:07am",
      "content": "The 'true' Romanian forms for these characters were a recent addition to Unicode...\n\nU+0218 Ș LATIN CAPITAL LETTER S WITH COMMA BELOW  \nU+0219 ș LATIN SMALL LETTER S WITH COMMA BELOW  \nU+021a Ț LATIN CAPITAL LETTER T WITH COMMA BELOW  \nU+021b ț LATIN SMALL LETTER T WITH COMMA BELOW\n\nSo older fonts, older keyboard layouts and older apps may only support or expect the legacy code-points, that were 'shared' (uneasily) with Turkish - +015e, U+015f, U+0162, U+0163\n\nCheers, Si\n\n"
    },
    {
      "time": "27 Aug 2007 — 10:28am",
      "content": "The necessary letters are in the fonts.\n\nI strongly suspect that \"acm\" is running into a Mac OS issue wherein they are using glyph names to determine encoding, instead of using the encoding built into the font, and then on top of that they may not have always recognized the glyph names as defined in Adobe's glyph naming standards, in favor of their own schemes. The latter problem is likely better in newer versions of Mac OS, even if the former is not.\n\nWhat version of OS X are you running, acm?\n\nRegards,\n\nT\n\n"
    },
    {
      "time": "27 Aug 2007 — 10:43am",
      "content": "Off topic a bit, but does the Acrobat Reader end-license also grant font modification rights like the stand-alone Adobe font EULA does (or at least like the FAQ does) to cover modification of the fonts it supplies?\n\nIf so I wonder if Myriad might become an alternative to Bitstream Vera / dejavu, in that modified versions may be freely shared between anyone who has a validly licensed Acrobat Reader on their desktop or device?\n\n"
    },
    {
      "time": "27 Aug 2007 — 10:56am",
      "content": "Thomas,\n\nI must confess that I would like to have a look at the pdf file produced by the command  \n` tx -pdf -1 MyriadPro-Regular.otf > Myriad.pdf`  \n on the last version of the font.\n\nMichel\n\n[edit] The first three pages would be enough.\n\n"
    },
    {
      "time": "27 Aug 2007 — 11:54am",
      "content": "Thomas, I'm not sure if I really understood the problem, but the About This Mac windows is telling me I have Mac OS X version 10.4.10. As far as I know I have the entire system up to date. Might be a problem with the keyboard and as soon I'll have the time I'll look into Ukelele and try to fix things.\n\nIt's great to know that I don't have to modify a font because, honestly, I was pretty sure I would do a lousy job.\n\nI had no idea that the world of typography was so complex :) Fonts, glyphs, UTF numbers... I really have to buy those three books recommended on the Typowiki page.\n\n"
    },
    {
      "time": "27 Aug 2007 — 1:38pm",
      "content": "Michael:  \nI appreciate your efforts but hold on a second as you're creating more confusion than helping to solve Andrei's problem. Thanks.\n\nAndrei:  \nOne thing is for sure, the characters you need are in the fonts you have — as Thomas said —, so there's no need to modify them.\n\nNow, the problem you're having is most likely related with Mac OS X not reading the fonts' 'cmap' table and relying on the glyphs' names instead. I'm also running OS X v10.4.10. I don't use Pages but I did a test with TextEdit and I had no problems with the said characters (Ș ș Ț ț). Can you please confirm this in your end?\n\nOn the other hand, I tested — still in TextEdit v1.4 (220) — a few other \"related\" characters (Ş ş Ţ ţ) and some of them — highlighted in red — were replaced by Lucida Grande, despite Myriad Pro v2.007 containing them. I reckon this is a bug in Mac OS X or TextEdit, not in the font.\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/MyriadProv2007_MacOSX_3599.png)\n\n"
    },
    {
      "time": "27 Aug 2007 — 5:09pm",
      "content": "BTW, Arno Pro displays correctly, just because the glyphnames happen to be in uniXXXX form.\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/Arno_Tcommaaccent_4289.png)\n\n"
    },
    {
      "time": "28 Aug 2007 — 8:44pm",
      "content": "In their link [**About the Unicode Standard**](http://web.archive.org/web/20141108102112/http:/www.unicode.org/standard/standard.html), the [**Unicode consortium**](http://web.archive.org/web/20141108102112/http:/www.unicode.org/) states that the entire content of the Unicode Standard including the Character Code Charts is available online. Here are their online [**Unicode Character Code Charts**](http://web.archive.org/web/20141108102112/http:/www.unicode.org/charts/) and here is the [**Latin Extended-A**](http://web.archive.org/web/20141108102112/http:/www.unicode.org/charts/PDF/U0100.pdf) chart. And here is a grab of the glyphs for U+0162 and U+0163 from the Latin-Extended-A chart provided by the Consortium:\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/fromlatina_4892.gif)\n\n"
    },
    {
      "time": "29 Aug 2007 — 7:19am",
      "content": "Of course, and as pointed out by Thomas, the real issue here is a naming issue. In the Myriad Pro Regular font that I bought directly from Adobe on Aug 27, the unicode characters U+0162 and U+0163 (look above) are named `Tcommaaccent` and `tcommaaccent`; if they are renamed `Tcedilla` and `tcedilla` respectively, then textedit and Word gain access to those Myriad Pro characters and insert them correctly in your file. It no longer seems those characters are undefined in Myriad Pro. I checked.\n\nMichel\n\n"
    },
    {
      "time": "29 Aug 2007 — 12:15pm",
      "content": "The same Latin-Extended-A chart also points out that \"a glyph variant with comma below is preferred for Romanian\":\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/0162_0163_6174.png)\n\nAnd that is also the opinion of two esteemed expert residents:  \n [http://www.typophile.com/node/2764#comment-22015](http://web.archive.org/web/20141108102112/http:/www.typophile.com/node/2764#comment-22015 \"http://www.typophile.com/node/2764#comment-22015\")  \n [http://www.typophile.com/node/3970#comment-29637](http://web.archive.org/web/20141108102112/http:/www.typophile.com/node/3970#comment-29637 \"http://www.typophile.com/node/3970#comment-29637\")\n\n"
    },
    {
      "time": "29 Aug 2007 — 12:16pm",
      "content": "Thomas also points out that \"they may not have always recognized the glyph names as defined in Adobe’s glyph naming standards\", which seems to be true given the fact that the Adobe Glyph List For New Fonts v1.6 associates the name Tcommaaccent to codepoint 0162, and tcommaaccent to codepoint 0163:  \n [http://partners.adobe.com/public/developer/en/opentype/aglfn13.txt](http://web.archive.org/web/20141108102112/http:/partners.adobe.com/public/developer/en/opentype/aglfn13.txt \"http://partners.adobe.com/public/developer/en/opentype/aglfn13.txt\")\n\nIt's also worth mentioning that the history of these two characters has been eventful, judging by the notes on that same file:\n\n# 1.1 [17 April 2003] Renamed [Tt]cedilla back to [Tt]commaaccent:  \n#  \n# 1.0 [31 Jan 2003] Original version. Derived from the AGLv1.2 by:  \n# - removing the PUA area codes  \n# - removing duplicate Unicode mappings, and  \n# - renaming tcommaaccent to tcedilla and Tcommaaccent to Tcedilla\n\n"
    },
    {
      "time": "29 Aug 2007 — 1:48pm",
      "content": "Miguel\n\nHere is how I read the notes from the Standard that you displayed above concerning U+0162 and U+0163. A first point says that U+0163 is used in Romanian, for Semitic transliterations and there is a ... that usually suggests other uses. The next point insists that the character is used in Romanian data, and will thus stay in archives even if a new glyph is now preferred. The third point states explicitly that for Romanian, the new preferred glyph, a t with comma below, is to be found at U+021B.\n\nGreat! Romanian was granted four new characters, namely U+0218, U+0219, U+021A and U+021B as mentioned above by sii. I don't see how this should imply that people in Semitic studies (and others) should now be deprived from their glyphs in U+0162 and U+0163.\n\nIf there is any doubt left, there is a last line; it is in [**Backus Naur form**](http://web.archive.org/web/20141108102112/http:/en.wikipedia.org/wiki/Backus-Naur_form) (BNF), commonly used in Computer Sciences (in particular in the syntax of programming languages) and it leaves no ambiguity; it defines the glyph U+0163 as a composed glyph; a glyph composed of those in U+0074 and U+0327; U+0074 is just a \"t\"; now what is U+0327? It is so small on the screen that we may have doubts. So we just go to the page [**The Unicode Character Code Charts By Script**](http://web.archive.org/web/20141108102112/http:/www.unicode.org/charts/) and enter \"0327\" in the slot for \"Look up by character code\" and then click \"go\". The most current chart is said to be [**here**](http://web.archive.org/web/20141108102112/http:/www.unicode.org/charts/PDF/U0300.pdf). We look and we find this nice glyph:\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/u0327_5787.gif)\n  \nand in the notes under, we learn how the corresponding character is to be named: \"combining cedilla\"  \n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/cedilla_4865.gif)\n  \nSo U+0163 is defined in BNF as a \"t\" with a \"combining cedilla\" under. The people in Semitic studies are safe (and maybe others as well), they may keep their \"tcedilla\" glyph in U+0163! \n\nMichel\n\n"
    },
    {
      "time": "29 Aug 2007 — 2:16pm",
      "content": "By the way, U+0162 was also defined unambiguously as the glyph in U+0054 composed with the glyph in U+0327, and the last chart containing U+0327 leaves no room for interpretation.\n\n[edit] My interpretation may be biased by the fact that I have been Faculty in a Computer Science department for now over 20 years and for me a BNF definition prevails over any comment.\n\nMichel\n\n"
    },
    {
      "time": "29 Aug 2007 — 3:10pm",
      "content": "There are several issues that come together here:\n\n1. Mac OS X ignores the glyph-to-Unicode mapping provided in the \"cmap\" table of OpenType PS (CFF/.otf) fonts, while it uses it for OpenType TT (.ttf) fonts. For OpenType PS fonts, Mac OS X uses the glyph-to-glyphname mapping provided in the font and then maps the glyphnames to Unicodes itself.\n\n2. Unfortunately, Mac OS X does not recognize the \"\\*commaaccent\" glyphnames that are defined by Adobe for Romanian and Baltic languages (such as Tcommaaccent, Rcommaaccent, Kcommaaccent, Ncommaaccent) but instead only recognizes the \"\\*cedilla\" names (Tcedilla, Rcedilla, Kcedilla, Ncedilla) or the \"uni\\*\\*\\*\\*\" names (uni0162, uni0156, uni0136, uni0145). This means that Mac OS X will fail to recognize the glyphs Tcommaaccent, Rcommaaccent, Kcommaaccent, Ncommaaccent and map them to their respective Unicodes.\n\n3. On top of that, there is another confusion. Originally, the Unicode consortium defines the codepoints U+015E, U+015F, U+0162, U+0163 as suitable for both Turkish and Romanian, and defined them as containing the cedilla accent. Turkish indeed uses cedilla in U+015E, U+015F but does not make any use of U+0162, U+0163. But the Romanian normalization delegation raised an objection towards those mappings because in the Romanian typographic tradition, glyphs with a commaaccent are preferred. So the Unicode consortium added the mappings U+0218, U+0219, U+021A, U+021B, and defined them as containing a commaaccent.\n\n4. Unfortunately, many of the Romanian locale definitions used in operating systems still use the \"old\" mappings rather than the \"new\" mappings. So it is common practice that Romanian texts contain U+015E, U+015F, U+0162, U+0163 rather than U+0218, U+0219, U+021A, U+021B.\n\n5. Nonetheless, the preference that the Romanian characters should be rendered using a commaaccent still applies. Since a \"T/t with cedilla\" does not seem to be used in any living language, many type designers have decided to draw U+0162, U+0163 as a \"T/t with commaaccent\". So the glyphs for U+0162, U+0163 and for U+021A, U+021B are identical in many fonts, and that's how it should be.\n\n6. Since the U+015E, U+015F are used as \"S/s with cedilla\" in Turkish but are also used in \"old\" locales for Romanian, many OpenType fonts now contain a \"locl\" glyph substitution that replaces the glyphs Scedilla (U+015E), scedilla (U+015F) with the glyphs uni0218, uni0219 in Romanian context. This is not a very elegant solution but seems a pragmatic one.\n\nTo resolve the problem, Apple should do two things:\n\na) change the Romanian locale/keyboard layout definition so that it no longer uses the U+015E, U+015F, U+0162, U+0163 codepoints but instead uses U+0218, U+0219, U+021A, U+021B.\n\nb) change the manner how it treats OpenType PS (.otf) fonts in that it no longer relies on glyphnames to build a glyph-to-Unicode mapping but instead, directly uses the \"cmap\" table included in the font.\n\nTo avoid problems with current Mac OS X versions, font developers should do three things:\n\na) do not use the \"\\*commaaccent\" glyphnames but use the \"uni\\*\\*\\*\\*\" glyphnames instead\n\nb) draw the \"Scedilla\" and \"scedilla\" glyphs with a cedilla, and draw the \"uni0162\", \"uni0163\", \"uni0218\", \"uni0219\", \"uni021A\", \"uni021B\" glyphs with a commaaccent (\"commaaccent\" does not mean that the accent has to look 100% like a small comma, but it should be disconnected from the base letter, should be thicker at the top and thinner at the bottom)\n\nc) provide the following OpenType feature definition code in their fonts:\n\n`feature locl { # Localized Forms\nlanguage MOL; # Moldavian\n  sub [Scedilla scedilla] by [uni0218 uni0219];\nlanguage ROM; # Romanian\n  sub [Scedilla scedilla] by [uni0218 uni0219];\n} locl;`\n\nOptionally, the type designer could provide stylistic alternates \"uni0162.cedilla\" and \"uni1063.cedilla\" that indeed would be \"T/t with cedilla\", suitable for Semitic studies and similar applications. These could be available through the \"ss\\*\\*\" and \"salt\" OpenType layout features.\n\nShould the type designers feel that he desperately needs to to draw the \"uni0162\", \"uni0163\" glyphs using a cedilla, they should provide the following OpenType feature definition code in their fonts:\n\n`feature locl { # Localized Forms\nlanguage MOL; # Moldavian\n  sub [Scedilla scedilla] by [uni0218 uni0219];\n  sub [uni0162 uni0163] by [uni021A uni021B];\nlanguage ROM; # Romanian\n  sub [Scedilla scedilla] by [uni0218 uni0219];\n  sub [uni0162 uni0163] by [uni021A uni021B];\n} locl;`\n\nRegards,  \nAdam Twardoch  \nFontlab Ltd.\n\n"
    },
    {
      "time": "29 Aug 2007 — 2:56pm",
      "content": "_[edit] My interpretation may be biased by the fact that I have been Faculty in a Computer Science department for now over 20 years and for me a BNF definition prevails over any comment._\n\nWell, I guess that is where we differ. I trust the human understanding about the human language more than the computer understanding about the human language.\n\nBesides, any Backus-Naur form i.e. a context-free grammar that describes a formal language has been written by someone. Therefore, there's no difference between it and \"any comment\".\n\nA.\n\n"
    },
    {
      "time": "29 Aug 2007 — 3:18pm",
      "content": "\\> _Here is how I read the notes from the Standard that you displayed above [...]_\n\nThat is not exactly the way the notes are to be read. The entries with a bullet (•) are Informative Notes, the ones with an arrow (→) are Cross References, and the ones with an equivalent sign (≡) are Canonical Decompositions. According to the Unicode 5.0 reference book, these are defined as:\n\n**Information About Languages**  \nAn informative note may include a list of one or more of the languages using that character where this information is considered useful. For case pairs, the annotation is given only for the lowercase form to avoid needless repetition. An ellipsis \"...\" indicates that the listed languages cited are merely the principal ones among many.\n\n**Cross References**  \nCross references are used to indicate a related character of interest, but without indicating the nature of the relation. Possibilities are a different character of similar appearance or name, the other member of a case pair, or some other linguistic relationship.\n\n**Decompositions**  \nThe decomposition sequences (one or more letters) given for a character is either its canonical mapping or its compatibility mapping. The canonical mapping is marked with an _identical to_ symbol ≡.\n\nIn addition, in page 564 one can read the following:  \n**Images in the Code Charts and Character Lists**  \nEach character in these code charts is shown with a representative glyph. A representative glyph is not a prescriptive form of the character, but rather one that enables recognition of the intended character to a knowledgeable user and facilitates lookup of the character in the code charts. In many cases, there are more or less well-established alternative glyphic representations for the same character.\n\nDesigners of high-quality fonts will do their own research into the preferred glyphic appearance of Unicode characters.[...]\n\n"
    },
    {
      "time": "29 Aug 2007 — 3:31pm",
      "content": "\\> Well, I guess that is where we differ. [added with edit]\n\nOk, that's fair.\n\nSo more research is needed (or maybe just call people from the Consortium, they are people too and there is a phone number on their site).\n\nHere is a citation from Chapter 7, page 228, of the Unicode Standard version 5.0 to be found [**here**](http://web.archive.org/web/20141108102112/http:/www.unicode.org/versions/Unicode5.0.0/ch07.pdf).\n\n<cite><br>\nIn Turkish and Romanian, a cedilla and a comma below sometimes replace one another depending on the font style, as shown in example 4 in Figure 7-1. The form with the cedilla is preferred in Turkish, and the form with the comma below is preferred in Romanian. The characters with explicit commas below are provided to permit the distinction from characters with a cedilla. Legacy encodings for these characters contain only a single form of each of these characters. ISO/IEC 8859-2 maps these to the form with the cedilla, while ISO/IEC 8859-16 maps them to the form with the comma below. Migrating Romanian 8-bit data to Unicode should be done with care.<br>\n</cite>  \nAnd here is Fig 7-1.\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/fig71_6326.gif)\n  \nThe cedilla form being preferred in Turkish, why then remove it completely from the font?\n\nMichel\n\n"
    },
    {
      "time": "29 Aug 2007 — 3:51pm",
      "content": "@Miguel\n\nWell, I now see the syntax is not quite the one I was expecting; I also feel bad for people that depend on characters that are not accessible in their font.\n\nMichel\n\n[edit] In fact, I am not sure the way you describe the interpretation is fundamentally inconsistent with mine.\n\n"
    },
    {
      "time": "29 Aug 2007 — 3:58pm",
      "content": "_The cedilla form being preferred in Turkish, why then remove it completely from the font?_\n\nTurkish doesn't use a T/t with cedilla, only S/s and C/c.\n\nLet me provide some background here to the practice to date with regard to the T/t with cedilla, and then outline what I am doing now and what I recommend to other font developers. This has changed recently.\n\nWhen font developers started extending their fonts to support central and eastern European languages, they began documenting the orthographies of these languages, noting glyph preferences and correlating these to Unicode characters. Romanian was quickly identified as a problem in terms of both encoding and glyph preference. The encoding problem was due to the fact that Unicode provided a single codepoint encoding two text entities that, it turns out, needed to be distinguished: S/s with cedilla below and S/s with comma accent below. It should be noted that Unicode also encoded a number of other characters nominally 'with cedilla', but for which a comma accent form is preferred in all the European orthographies that use these diacritic letters: K/k, R/r and, importantly it turned out, T/t. So although Unicode calls these characters letters 'with cedilla' the expectation in most fonts is that these will actually be displayed with a comma accent below, as per the editorial notes in the Unicode Standard and user expectations.\n\nBut the S/s with cedilla created a different situation, because that diacritic, with an actual cedilla not a comma accent, is a common feature of virtually all Turkic language orthographies using the Latin script. This meant that font developers and text processing engineers had a problem because a single codepoint encoded two possible forms that needed to be distinguished for different languages. So Unicode and WG2, with input from the Romanian national standards body, decided to add separate codepoints for the two Romanian diacritics S/s and T/t with comma accent.\n\nThat should have solved the problem, but it hasn't because pre-existing 8-bit Romanian character sets -- which continued to be used by some computer systems and that bizarrely continue to influence encoding and display behaviour even in some nominally Unicode environments (notably Mac OS X) -- reference the old, unified S/s and T/t 'with cedilla' codepoints. And of course there are a lot of existing Romanian documents that use those codepoints. And change-over to the new, comma accent codepoints has been slow and inconsistent.\n\nNow, bearing in mind again that what the majority of font developers were trying to do was to support the modern orthographies of a subset of European languages and not all the languages of the world and not semitic transliteration and other specialised uses, it appeared that the most efficient way to give the most desirable display of the most number of characters for Romanian users was to present the T/t 'with cedilla' character with a comma accent form _just as is done for K/k and R/r 'with cedilla'_. Further, in acknowledgement that the old cedilla codepoints would continue to be an issue for Romanian users, fonts were future-oriented at projected support for OpenType language system tagging, by mapping the S/s with cedilla to the comma accent glyph forms via language-specific substitution lookups for Romanian. What this means is that in applications like InDesign CS3 that support such tagging, both S/s and T/t will display with the comma accent _regardless of which character pairs are used to encode the text._\n\nGiven the information available -- the clear preference of Romanian users for the comma accent form, the lack of use of T/t with cedilla in any of the target orthographies, and the glyph processing options available --, I think this was all pretty reasonable decision making.\n\nWhat we hadn't taken into account, because no one had raised the issue until very recently, is that the Romanians might have a different preference in the condition in which systems and applications do not take advantage of the OpenType language system tagging. In such situations, the S/s diacritic, when encoded using the old codepoints, displays with a cedilla not a comma accent, and the only way to correct this is to change the encoding to the new codepoints (which, as far as I'm concerned, is exactly what should be done). As explained above, the approach in the past ten years has been for font developers to minimise the number of incorrectly displayed Romanian diacritics to this single S/s diacritic, and to map the T/t 'with cedilla' character to a comma accent glyph, so that this diacritic displays correctly.\n\nLast year, I began to hear, through Microsoft's Romanian marketing people, that in this situation, where display of the S/s diacritic is with the cedilla, their preference is, in fact, for T/t to also display with cedilla _for the sake of consistency._ This is a notable instance of two wrongs making a right: it is preferable for both diacritics to display incorrectly with the cedilla than for one diacritic to display correctly while the other displays incorrectly.\n\nSo I have recently revised my approach, and advise other font developers to do the same: start including those T/t with cedilla glyphs mapped to U+0162 and U+0163, because that, it turns out, is what the Romanians want. Of course, under the Romanian language system tag, these should then be mapped to comma accent forms as a glyph-level rather than a character-level solution to the Romanian display issue.\n\nAnd it should go without saying that anyone making fonts that are targeted at broader language use and things like semitic transliteration should already be including T/t with cedilla as appropriate.\n\n"
    },
    {
      "time": "29 Aug 2007 — 7:11pm",
      "content": "\\> do not use the “\\*commaaccent” glyphnames but use the “uni\\*\\*\\*\\*” glyphnames instead\n\nSince this thread started with a practical problem caused by an existing font using \"\\*commaaccent\" in glyphnames, I will ask it would be a lot of work to provide end-users with a downloadable \"patch\" that, when applied to that font, globally replaces the \"\\*commaaccent\" glyphnames by the appropriate \"uni\\*\\*\\*\\*\".\n\nMichel\n\n"
    },
    {
      "time": "30 Aug 2007 — 2:47am",
      "content": "Doesn't this thread belong to the Build forum now?\n\nMichel Boyer -- <cite>The cedilla form being preferred in Turkish, why then remove it completely from the font?</cite>\n\nThere is no Tcedilla/tcedilla in Turkish.  \nHowever, John Hudson's paragraph 'So I have recently revised my approach' adds another aspect to consider which suggests to keep it. (Thank you for this.)\n\nMichel Boyer -- <cite>And here is Fig 7-1.</cite>\n\nWhat looks interesting to me is number (2) in this illustration. How acceptable is the dcaron/tcaron/lcaron versions with a 'real' caron above in countries that use them? With spacing/kerning in mind -- these would be much easier to deal with. I am curious for comments.\n\nKarsten\n\n"
    },
    {
      "time": "30 Aug 2007 — 7:53am",
      "content": "Great post John! Very clearly stated (and appreciated).\n\nChrisL\n\n"
    },
    {
      "time": "30 Aug 2007 — 8:25am",
      "content": "\\> Great post John!\n\nIndeed! And thanks.\n\n"
    },
    {
      "time": "30 Aug 2007 — 2:44pm",
      "content": "Karsten: What looks interesting to me is number (2) in this illustration. How acceptable is the dcaron/tcaron/lcaron versions with a ’real’ caron above in countries that use them? With spacing/kerning in mind — these would be much easier to deal with. I am curious for comments.\n\nNote that the figure is illustrating possible glyph variants at the script level, not at the individual language level. The 'real caron' forms are legitimate ways of representing these diacritic characters within the Latin script system and, indeed, there may be situations or languages for which these forms are preferred. But for Czech and Slovak the apostrophe-like form is very much the norm, and I've not seen the other form used with L/l d or t in any Czech typography. So again the issue is one of what languages you are targeting. The majority of Latin font development is targeted at languages of European use or origin, so the expectation is that the Czech and Slovak forms for these diacritic letters will be the default forms in most fonts.\n\nAs the target language coverage for fonts expands, the support of language-specific glyph variation will become more and more important. Thankfully, we're beginning to see it implemented, albeit not in an ideal way, in major apps like InDesign CS3 (and even in CS2 ME).\n\n"
    },
    {
      "time": "30 Aug 2007 — 4:41pm",
      "content": "Hello John, thank you. \"But for Czech and Slovak the apostrophe-like form is very much the norm, and I’ve not seen the other form used with L/l d or t in any Czech typography.\" This indeed answers my question. I wondered if -- maybe not at once but in future -- national habits might change in favor of a common denominator, and with some luck this would be forms that are less likely to collide.\n\nKarsten\n\n"
    },
    {
      "time": "30 Aug 2007 — 6:13pm",
      "content": "\\> _Unfortunately, Mac OS X does not recognize the “\\*commaaccent” glyphnames_\n\nI took the time to test and in fact, in Myriad Pro, the names [G/g, K/k, L/l, N/n, R/r, S/s]commaaccent are all used and are all processed correctly by my Mac.\n\nIt is only [T/t]commaaccent in 0x0162 and 0x0163 that cause problem so far as I can see. Could you be more precise in your statement?\n\nMichel\n\n"
    },
    {
      "time": "30 Aug 2007 — 6:59pm",
      "content": "More precisely, here is the display of a text written with Textedit in Myriad Pro with a customized keyboard.\n\n ![](http://web.archive.org/web/20141108102112im_/http:/typophile.com/files/commaaccented_4713.gif)\n  \nTo see exactly what is typed, we need only look at the text of the saved rtf file; here it is:\n\n`\n{\\rtf1\\mac\\ansicpg10000\\cocoartf824\\cocoasubrtf410\n{\\fonttbl\\f0\\fnil\\fcharset77 MyriadPro-Regular;}\n{\\colortbl;\\red255\\green255\\blue255;}\n\\margl1440\\margr1440\\vieww10380\\viewh8460\\viewkind0\n\\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx6236\\tx6803\\ql\\qnatural\\pardirnatural`\n\n\\f0\\fs96 \\cf0 \\  \n \\uc0\\u291 \\u290 \\u311 \\u310 \\u316 \\u315 \\u326 \\u325 \\u343 \\u342 \\u537 \\u536 \\  \n}\n\nWe see that the characters are all in MyriadPro-Regular (the font \\f0) and we also have the characters with their decimal value;  \nhere they are, with their transformation in hexa, and then their name in the otf file of Myriad Pro Regular:\n\n`\n     \\u291 ; 0x0123 ; gcommaaccent\n     \\u290 ; 0x0122 ; Gcommaaccent\n     \\u311 ; 0x0137 ; kcommaaccent\n     \\u136 ; 0x0136 ; Kcommaaccent\n     \\u316 ; 0x013C ; lcommaaccent\n     \\u315 ; 0x013B ; Lcommaaccent\n     \\u326 ; 0x0146 ; ncommaaccent\n     \\u325 ; 0x0145 ; Ncommaaccent\n     \\u343 ; 0x0157 ; rcommaaccent\n     \\u342 ; 0x0156 ; Rcommaaccent\n     \\u537 ; 0x0219 ; scommaaccent\n     \\u536 ; 0x0218 ; Scommaaccent\n`\n\nMichel\n\n"
    },
    {
      "time": "31 Aug 2007 — 1:17pm",
      "content": "Correction: of course, the line  \n`     \\u136 ; 0x0136 ; Kcommaaccent `  \nabove should read  \n`     \\u310 ; 0x0136 ; Kcommaaccent `\n\nMichel\n\n"
    }
  ]
}

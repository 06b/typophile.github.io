{
  "id": "104444",
  "title": "Understanding the OpenType Engine Layout Algorithm",
  "forum": "Build",
  "tags": [
    "calt opentype features-file script",
    "Build"
  ],
  "content": "I'm still trying to wrap my head around the [OpenType Layout Algorithm](http://web.archive.org/web/20150420211601/http:/www.adobe.com/devnet/opentype/afdko/topic_feature_file_syntax.html#7.a). Here's what I have currently, largely adapted from [Pecita](http://web.archive.org/web/20150420211601/http:/pecita.eu/) and [OTFPOC](http://web.archive.org/web/20150420211601/http:/pecita.net/otfpoc/calt-en.xhtml):\n\n``\n\n    lookup calt_pass_1 {\n        \n        sub @can_2s' lookup plain_to_2s\n            @can_s2' lookup plain_to_s2;\n    \n        sub @can_s2' lookup plain_to_s2\t# matched in [roe][it] \n            @can_2s' lookup plain_to_2s;\n    \n    \n        sub @can_2b' lookup plain_to_2b\n            @can_b2' lookup plain_to_b2;\n    \n        sub @can_b2' lookup plain_to_b2\n            @can_2b' lookup plain_to_2b;\n        \n    } calt_pass_1;\n\nI'm trying to figure out what happens when this sort of thing is applied to an arbitrarily long text string. I'm making a script font for [Quikscript (3 MB PDF)](http://web.archive.org/web/20150420211601/http:/www.frogorbits.com/qs/manual.pdf), and I'd like to be able to correctly represent the highly-ligated Senior Quikscript when 'calt' is turned on. If you'd like to see Quikscript, both Junior and Senior in action, turn to the antepenultimate page of the manual. Note that Senior Quikscript has a _lot_ of abbreviations that're in use in the \"As written in\" section; you may want to have a look at the last word on the page, which is \"impossible\" written with only one penlift.\n\nQuestions:\n\n- If I apply calt\\_pass\\_1 to a four-letter string, letters 2 and 3 won't shape each other. How do I design subs/lookups so the middle letters can affect each other, as well as the letters they're already (maybe) connected to? As I've written things [in my font](http://web.archive.org/web/20150420211601/https:/github.com/adiabatic/abbots-morton-experiment), I can't guarantee that [a second pass](http://web.archive.org/web/20150420211601/https:/gist.github.com/adiabatic/5950411#file-ame-fea-L149) will start at the second string instead of the first if there's nothing to change about the first character in the string.\n- Words with an odd number of letters occur frequently. How can I design my subs so I'm guaranteed to be able to change them too if I'm subbing letters two at a time?\n\n_Please_ chime in if I'm not being clear; I've tried to strip out some detail that depends on knowing how Senior Quikscript letters are formed. If it'll help, I'll be more than happy to draw pictures of what things should look like.\n\n",
  "author": "adiabatic",
  "time": "8 Jul 2013 — 6:28pm",
  "uid": "212810",
  "comments": [
    {
      "time": "8 Jul 2013 — 9:24pm",
      "content": "Without including definitions for the classes and lookups referenced in the above code, it's difficult to comment on this.\n\nAndré\n\n"
    },
    {
      "time": "9 Jul 2013 — 12:15pm",
      "content": "Whoops — that was in the first draft of this post, but not the one I actually posted. [Here's the whole .fea file](http://web.archive.org/web/20150420211601/https:/gist.github.com/adiabatic/5950411). This file is generated by [generate-calt.py](http://web.archive.org/web/20150420211601/https:/github.com/adiabatic/abbots-morton-experiment/blob/d5cc29959558c79477033a103932f2c7a6022445/generate-calt.py), which uses data described in [glyphinfo.yaml](http://web.archive.org/web/20150420211601/https:/github.com/adiabatic/abbots-morton-experiment/blob/08b7effde17905cf1bbb355d6a6414da52078f26/glyphinfo.yaml).\n\n"
    }
  ]
}

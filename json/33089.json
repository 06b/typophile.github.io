{
  "id": "33089",
  "title": "What interests you most about Opentype?",
  "forum": "General Discussions",
  "tags": [

  ],
  "content": "If you were to read an article about [Opentype](http://web.archive.org/web/20080830000601/http:/typophile.com/wiki/Opentype), what would you be most interested in seeing covered in it?\n\nChrisL\n\n [‹ Looking for similar font](http://web.archive.org/web/20080830000601/http:/typophile.com/node/33557 \"Go to previous forum topic\") [Fortune cookie fortunes ›](http://web.archive.org/web/20080830000601/http:/typophile.com/node/33551 \"Go to next forum topic\")\n\n",
  "author": "<a href=\"/web/20080830000601/http://typophile.com/user/3135\" title=\"View user profile.\">dezcom</a>",
  "time": "<br>",
  "uid": "3135",
  "comments": [
    {
      "time": " 16.Apr.2007 2.45pm",
      "content": "Fiddling around with fractions.\n\nand: language specifics\n\nand: metrics operations\n\n"
    },
    {
      "time": " 16.Apr.2007 2.57pm",
      "content": "I’d be most interested in a demonstration of contextual alternates — to show how OpenType can help mitigate the problems of handwritten and distressed types, i.e., the obviousness of repeating letters, as well as delivering unusual ligatures where appropriate. This had seemed to me to be a key aspect of TrueType GX that was never fully delivered. I guess that leads me to ask, is OpenType an evolution of TTGX?\n\n"
    },
    {
      "time": " 16.Apr.2007 3.07pm",
      "content": "I’d like to see a simple table explaining what each Opentype feature actually does, and which applications make use of them. This need not extend to features not implemented anywhere. It would also be nice to see someone cover Opentype features that nobody ever notices or uses—assuming such things exist, anyway.\n\n"
    },
    {
      "time": " 16.Apr.2007 4.19pm",
      "content": "_I guess that leads me to ask, is OpenType an evolution of TTGX?_\n\nMore a case of tackling some of the same layout issues from a different perspective. The two models are very different — to the degree that there isn’t always an obvious path to reproduce the layout behaviour of one in terms of the other — but they both address advanced linguistic and typographic layout.\n\nAt Apple, GX evolved into AAT.\n\nThe other significant evolution from GX is SIL’s Grafite, which provides a cross-platform implementation based on the GX approach.\n\n"
    },
    {
      "time": " 16.Apr.2007 5.20pm",
      "content": "How about an outlined plan of attack for Opentype’s mission to obliterate Truetype and Type 1? Anyone with me?\n\n"
    },
    {
      "time": " 16.Apr.2007 6.11pm",
      "content": "\\>How about an outlined plan of attack for Opentype’s mission to obliterate Truetype and Type 1?\n\nMay be more accurate to say that 18 years ago TrueType left his home in Cupertino, California and ten years ago hooked up with PostScript in Redmond, Washington. OpenType looks more like her father than her mother, but sadly her mother isn’t doing so well. On the bright side the family back in California has finally come to terms with the child, and has decided to fully support her.\n\n\\>Anyone with me?\n\nWell, several years ago, when OpenType was announced, there were two or three theorists who claimed that OpenType was some kind of elaborate scam to force people to re-license their entire existing libraries in OpenType form.\n\n"
    },
    {
      "time": " 16.Apr.2007 6.20pm",
      "content": "What would most interest me would be a discussion of what typographic “features” are best implemented through the font itself verses best implemented through a well though out applications (typesetting) program. Before OpenType there was only the composition programs, but now I sometimes wonder if things haven’t swung too far the other way.\n\n"
    },
    {
      "time": " 16.Apr.2007 6.29pm",
      "content": "<cite>Well, several years ago, when OpenType was announced, there were two or three theorists who claimed that OpenType was some kind of elaborate scam to force people to re-license their entire existing libraries in OpenType form.</cite>\n\nNext to those crackpots even _I_ look sane.\n\n"
    },
    {
      "time": " 16.Apr.2007 7.07pm",
      "content": "Would aanyone care to name any particular Opentype typefaces that they would like to peek under the hood of? In other words, which opentype faces really push the envelope and which features in them rev your engines?\n\nChrisL\n\n"
    },
    {
      "time": " 16.Apr.2007 7.16pm",
      "content": "Local Gothic  \nBickham Script Pro  \nTimes New Roman 80,000+ combining mark combinations  \nCambria Math  \nAmy’s rude font\n\n"
    },
    {
      "time": " 16.Apr.2007 7.51pm",
      "content": "i’m most interested in making OT fonts as intelligent as possible, the AI angle.\n\nI’d add to Si’s list  \nDear Sarah and  \nEd Interlock\n\n"
    },
    {
      "time": " 16.Apr.2007 8.43pm",
      "content": "<cite>Ed Interlock</cite>\n\nI’ll second that motion. _How_ magazines recent bit on Ed Interlock really opened my eyes, but it was only mentioned in part of a bigger type article.\n\n"
    },
    {
      "time": " 16.Apr.2007 9.47pm",
      "content": "<cite>contextual alternates</cite>\n\nme too\n\nAnd specifically for Fedra Display & Zaphino I think. And Softmachine too.\n\n"
    },
    {
      "time": " 16.Apr.2007 10.40pm",
      "content": "It seems that we Typophilers are really keen to hear about scripting possibilities... Perhaps the article could talk about that, if it is aimed towards typeface designers...\n\n"
    },
    {
      "time": " 17.Apr.2007 8.47am",
      "content": "Ricardo, I don’t think this is just of interest to type designers, I think that if the average user realized that there are fonts out there that are essentially “smart fonts” they would find that interesting, especially if these smart fonts do something cool and unexpected.\n\n"
    },
    {
      "time": " 17.Apr.2007 8.57am",
      "content": "What about situations where a user would like a font to have a particular ability to solve a typography issue for them? What could Opentype do to make a type user’s life easier?\n\nChrisL\n\n"
    },
    {
      "time": " 17.Apr.2007 9.00am",
      "content": "Sebastian,  \nWhat aspects of metrics operations interest you most?\n\nChrisL\n\n"
    },
    {
      "time": " 17.Apr.2007 9.06am",
      "content": "_Ricardo, I don’t think this is just of interest to type designers, I think that if the average user realized that there are fonts out there that are essentially “smart fonts” they would find that interesting, especially if these smart fonts do something cool and unexpected._\n\nPaul, right on.\n\nBy the way, I think that Ilene Strizver published a good article on OpenType features not too long ago, but right now I can’t remember if it was in **HOW** or **Print**.\n\n"
    },
    {
      "time": " 17.Apr.2007 9.10am",
      "content": "It was How, February issue.  \nWhat would be something thst you would like to see beyond what was in that article? Perhaps more depth or detail in what aspect?\n\nChrisL\n\n"
    },
    {
      "time": " 17.Apr.2007 9.12am",
      "content": "Paul, I’m one of those “average users” and I’ll third the request for contextual alternatives — my hubby asked me to identify a font used in a magazine (it was Zapfino) and when I showed it to him on the computer, I managed to get it to produce four different “g” glyphs.\n\nThat was pretty neat, but I’d like to know more about how to be able to pick and choose specific ones....\n\n"
    },
    {
      "time": " 17.Apr.2007 9.46am",
      "content": "“That was pretty neat, but I’d like to know more about how to be able to pick and choose specific ones…”  \nInInDesign? place the cursor in the doc, open the glyph pallette and pick. You can make a mess out of “googling” with Z-fino type, and still have a g left over.\n\n“What about situations where a user would like a font to have a particular ability to solve a typography issue for them?”  \nThat’s what I’m working on but the words are “users” and “fonts” and the issue is a basic quality spacing. ;-o\n\n"
    },
    {
      "time": " 17.Apr.2007 10.14am",
      "content": "I was actually just using TextEdit when playing — I don’t set much work in Zapfino, unfortunately, and usually don’t have enough time to dedicate to goofing around with it.\n\nMaybe I should make some.... ;-)\n\n"
    },
    {
      "time": " 17.Apr.2007 12.39pm",
      "content": "Paul,  \nWhat about P22’s DaDa face? Is there anything stroked and bored under the hood of that puppy?\n\nChrisL\n\n"
    },
    {
      "time": " 17.Apr.2007 12.43pm",
      "content": "”...and the issue is a basic quality spacing.”\n\nDavid,  \nThis is one of the areas that interests me most. I would like to see spacing adjustments when a word or so of italics was on the same line as roman. The space between the two is usually awkward and kerning accross fonts does not look like a likely candidate. Care to elaborate more on your work the Opentype spacing arena?\n\nChrisL\n\n"
    },
    {
      "time": " 17.Apr.2007 12.44pm",
      "content": "Linda, note that there is the “Zapfino” font that ships with Mac OS X, which is \\*not\\* OpenType. It is TrueType AAT, i.e. it contains some smartness in the Apple AAT (aka GX) format. There is also [Zapfino Extra Pro](http://web.archive.org/web/20080830000601/http:/www.linotypefont.com/2762/introduction.html), which includes a load of OpenType contextual features. They will work in InDesign, Illustrator, Photoshop, Mellel and even Notepad but not TextEdit. (Though in TextEdit, some simple features will work.)\n\nAdam\n\n"
    },
    {
      "time": " 17.Apr.2007 12.54pm",
      "content": "well, if you want me to brag on myself, i’ll do so. \\>^p\n\nThere are several P22 pro fonts that are interesting. [DaDa Pro](http://web.archive.org/web/20080830000601/http:/www.p22.com/products/dada_se.html) does some interesting things, i can’t remember all [Colin](http://web.archive.org/web/20080830000601/http:/typophile.com/wiki/Colin%252BKahn) put into that one, but there are some features that attempt to create unexpected typesetting a la DaDaist philosophy. [Mystic Font Pro](http://web.archive.org/web/20080830000601/http:/www.p22.com/ihof/mystic.html) (also programmed by Colin) acts as a digital 8 ball when you type questions with the ’calt’ feature enabled. [Cezanne Pro](http://web.archive.org/web/20080830000601/http:/www.p22.com/products/cezannepro.html) fixes most types of uncomfortable collisions that happened with the regular font as you type. Cezanne also renders a quasi-random texture with alternates being subbed in so that a word typed out looks more irregular and more like real handwriting. I had fun figuring out the Roman numeral feature that is present in both [Operina Pro](http://web.archive.org/web/20080830000601/http:/www.p22.com/ihof/operinapro.html) and [Vale Pro](http://web.archive.org/web/20080830000601/http:/www.p22.com/ihof/vale.html). Vale also has that wacky “quasi-olde-englyshe” feature, which is kind of fun. With [Declaration Pro](http://web.archive.org/web/20080830000601/http:/www.p22.com/products/dada_se.html), if you attempt to set the text of the Declaration of Independence, you will see that the font subs in Small caps, Script, and Black letter in the appropriate places, so as to emulate that document. several other pro fonts have things like archaic ligatures ( [Royalist Pro](http://web.archive.org/web/20080830000601/http:/www.p22.com/sherwoodtype/royalistpro.html)), extensive swashes ( [Sweepy OT](http://web.archive.org/web/20080830000601/http:/www.p22.com/ihof/sweepyreg.htmlot)), and other hidden fun stuff.\n\n"
    },
    {
      "time": " 17.Apr.2007 1.20pm",
      "content": "1. The possibilities of leveraging the Contextual Alternates feature to create new kinds of type design. The stuff Paul mentions is cool and special, and many people have done naturalistic handwriting fonts. However, I think that in formal terms, this is virgin territory. Bear in mind that the vast majority of OT script fonts are implementations of retro styles.\n\n2. Cyrillic and Greek. Fascinating, and not something I would likely have become involved with if Adobe hadn’t raised the bar, with its bundled fonts such as Minion Pro setting a de facto standard.\n\n3. What is a typeface? What is a family? What belongs in a font, what in an application? These are mind-boggling questions. Will all future sans faces have single and double bowl “a” and “g” as stylistic alternates? Of course, that’s nothing new, but it becomes more fundamental, and I can quite imagine that all my future faces will be so equipped.\n\n"
    },
    {
      "time": " 17.Apr.2007 1.50pm",
      "content": "<cite>Would anyone care to name any particular Opentype typefaces that they would like to peek under the hood of?</cite>\n\nFonts mentioned so far were gimmick fonts, good for advertising OpenType because something visible happens when using them. This is one end of the spectrum.  \nThe other end is ’average’ OpenType fonts, the workhorses. A recent ’Pro’ font by Adobe, and one of the new ClearType fonts, which may both define minimum standards for glyph set and supported features in future.\\*  \nThe important aspect would be: In how far do ’average’ Microsoft and ’average’ Adobe fonts differ, follow slightly different standards? Compared to these, what are the standards at Monotype/Linotype and FontShop?\\*\\*\n\nA complementary aspect: In how far does ’OpenType support’ differ in OSX vs Windows — vs applications from Adobe, Quark or RedleX (Mellel) which use their own OpenType layout engines?\\*\\*\\*\n\nI think both aspects deserve coverage, so users of OpenType fonts know what they can expect, and what would be too high expectations.\n\n(Unfortunately, I don’t know Mrs Strizver’s article!)\n\nKarsten\n\n[notes]\n\n\\* Mr Berlow’s mention of ’the issue is a basic quality spacing’ brings up an interesting topic. OpenType is associated with gimmick fonts first of all, your question and the font suggestions clearly indicate this. The real merit of OpenType would be ’invisible’ typographic improvements like good spacing, part of which is good spacing of caps in all-caps setting to which contextual positioning would add a lot. (At the same time, exactly things like these are, with rare honorable exceptions, not supported at all in most current applications.)\n\n\\*\\* There are differences, like tabular lining numerals as default for most foundries, but proportional oldstyle numerals in CT fonts, some of FontShops and a few independents. Then it is also interesting to see that many recent fonts cover small caps numerals too. Then, rather technical things like the fact that some fonts only contain ’sinf’ (following Adobe’s model), others only ’subs’ (following MS’s earlier model) for inferiors, while Adobe applications rely on ’sinf’ feature for inferiors but XPress7 on ’subs’ as I was told, which may result in fonts with apparently faulty behavior ...\n\n\\*\\*\\* This is important because one and the same font may behave differently in different applications which is not necessarily a fault of the font.\n\n"
    },
    {
      "time": " 17.Apr.2007 1.51pm",
      "content": "One part of the story:\n\nAdobe has released a 96,000 glyph font family (Arno), with full Greek and Cyrillic in 5 optical sizes, something that I dare say even Christian Schwartz would be hard put to produce that by himself, and no doubt Slimbach had a lot of help from others.\n\nIs type design shifting back, away from independents, to those outfits with production offices, or the ability to hire production people for open type, extended character sets, etc.?\n\n"
    },
    {
      "time": " 17.Apr.2007 2.01pm",
      "content": "<cite>Will all future sans faces have single and double bowl “a” and “g” as stylistic alternates?</cite>\n\nA bit off-topic — it is funny to see that a technique from metal type days, Monotype called it “three type faces in one”, is being revitalized thanks to Stylistic Sets. For example Intertype’s Vogue had alternate forms which could make it look more like Futura, or Futura with early geometric ’k’ ’m’ ’n’ ’r’ ’u’, or Kabel.\n\n"
    },
    {
      "time": " 17.Apr.2007 2.09pm",
      "content": "_Linda, note that there is the “Zapfino” font that ships with Mac OS X, which is \\*not\\* OpenType. It is TrueType AAT, i.e. it contains some smartness in the Apple AAT (aka GX) format._\n\nThanks, Adam: this is the one that I’ve got. I poked around with it for a few minutes and was quite thrilled with some of the alternates (such a change from the old Mac SE days!) — just wish I had clients whose work demands that sort of diversity, since it would give me the excuse to buy fonts with all the bells and whistles.\n\n"
    },
    {
      "time": " 17.Apr.2007 2.20pm",
      "content": "_Fonts mentioned so far were gimmick fonts_\n\ntrue. i guess i wasn’t answering the question for myself but as what i thought an “average type user” might find interesting in an article about OT.  \nto me the most interesting part is the ability to effectively focus on the typeface to create ideal wordshapes via contextual substitutions (where each letter can vary depending on context) instead of just rendering a string of idealized letters (where each instance of a letter is exactly the same as every other instance). this principle is important in creating convincing lettering (display) fonts; however, i’m interested in the possibility that contextual alternates can create better wordshapes or boumas (not that they’re the same thing) in text fonts.  \nanother aspect that interests me is the possibility of having alternates characters that are suited for specific languages or applications. i’m quite excited that InDesign CS3 is going to support language tags and some more complex lookup types to enable typesetting for more complex writing systems.\n\n"
    },
    {
      "time": " 17.Apr.2007 2.33pm",
      "content": "Karsten,  \nThanks for your contribution. I am glad you mentioned some areas that were not mentioned yet! Keep it coming.\n\n“OpenType is associated with gimmick fonts first of all, your question and the font suggestions clearly indicate this. The real merit of OpenType would be ‘invisible’ typographic improvements”\n\nI didn’t intend my question to focus on “gimmick fonts”. My personal interest in Opentype is much more in the usability arena. That said, I am looking for what others find interesting about it. I am thrilled with the idea of opening letterspacing when all caps are set but I would like to see a sampling of many others vision. I wonder about setting math and its relation to opentype coding done for complicated scripts like Arabic. “Gimmick fonts” may be where many people startto look but what we learn from these can be applied to more fundamental uses of type. I am hoping to get a broad look at all of the interests a typophile may associate with Opentype.\n\nChrisL\n\n"
    },
    {
      "time": " 17.Apr.2007 2.36pm",
      "content": "<cite>but as what i thought an “average type user” might find interesting</cite>\n\nI tried to broaden the focus for exactly this reason. If another OpenType article, then it should highlight aspects which the reader has not been aware of before.  \nYour remark about the use of contextual substitution to achieve better wordshapes — this is exactly the kind of subtle improvement which deserves attention.\n\n"
    },
    {
      "time": " 17.Apr.2007 2.47pm",
      "content": "Paul,  \nThanks for all of your comments!  \nThe audience for the article is typography geeks—not just type designers though. I think that typical Typophile regulars are about the right mix. If everyone submits what they would like to see as an individual, then the collection of comments should be pretty indicative of the sample I am hoping for.\n\nChrisL\n\n"
    },
    {
      "time": " 17.Apr.2007 2.57pm",
      "content": "<cite>Is type design shifting back, away from independents...</cite>\n\nI doubt it; most designers do not need huge font sets covering every possible glyph that could be used anywhere in Europe, Africa, and the Americas. Most design is still produced for consumption in a single region and in a single language, by designers who only work in said region and language. Massive fonts like Arno really only make sense in a few contexts; it makes sense for Adobe to generate them because Adobe is selling to designers worldwide, but Adobe would be have a hard time recouping the costs from a new font of such scale if it were only sold on its own.\n\n"
    },
    {
      "time": " 17.Apr.2007 3.36pm",
      "content": "<cite> to me the most interesting part is the ability to effectively focus on the typeface to create ideal wordshapes via contextual substitutions (where each letter can vary depending on context) instead of just rendering a string of idealized letters (where each instance of a letter is exactly the same as every other instance). this principle is important in creating convincing lettering (display) fonts; however, i’m interested in the possibility that contextual alternates can create better wordshapes or boumas (not that they’re the same thing) in text fonts. </cite>\n\nAgreed.\n\nPaul, do you know anybody who is working on this now?\n\nI have been reading about and scanning calligraphic sources and have started doing some calligraphy to try to look for what the richer contexts might be, and for beneficial ways of shifting the letters. I have to admit that a huge about of what I am finding in manuscripts involves simple fusing of the forms, especally in gothic textura & burgundica faces - although I do find what seems to be useful things now & then.\n\nThere are also some things about the design of Our Type’s Amalia ( even though it has no context-substitution that I know of ) that have helped to spur related but less chirographic thoughts about how letters might vary for better fit. Mostly because the face seems to break so many ’rules’ - but to quite good effect as far as I can see.\n\nHave alook if you want:\n\n[http://www.ourtype.be/pdf/OT-Amalia.pdf](http://web.archive.org/web/20080830000601/http:/www.ourtype.be/pdf/OT-Amalia.pdf \"http://www.ourtype.be/pdf/OT-Amalia.pdf\")\n\nI did notice an interesting altrenate g in a display weight of Fedra ( I got the printed speciment from typotheque ) although much of the altrenates there appear to be wonderful but very apparent ligatures and ornamental rearangements of letters rather than subtle shifts. But I don’t know the family well enough to say for sure if that’s all that’s there.\n\nYou can see what I am talking about here  \n [http://www.typotheque.com/site/font\\_features.php?family\\_id=19&id=239](http://web.archive.org/web/20080830000601/http:/www.typotheque.com/site/font_features.php?family_id=19&id=239 \"http://www.typotheque.com/site/font\\_features.php?family\\_id=19&id=239\")\n\n<cite> ...this is exactly the kind of subtle improvement which deserves attention. </cite>\n\nThat brought a big grin to my face. Thanks Karsten!\n\n"
    },
    {
      "time": " 17.Apr.2007 3.55pm",
      "content": "_do you know anybody who is working on this now?_\n\nwell, examples of display types that do this are listed above: Ed Interlock, &c. This principle is less used in text types as far as i’m aware. i think it would probably take some concerted study to find how much room for improvement there is here for text types, but i think this would be an interesting project to work on. i’m sure there are some fonts that do this on a limited scope: [Paperback](http://web.archive.org/web/20080830000601/http:/typophile.com/wiki/Paperback) has ligatures for rv/rw, but i’m sure there are several letter combos that would benefit from contextual substitutions. i think there’s a thread here somewhere about that...\n\n"
    },
    {
      "time": " 18.Apr.2007 5.55am",
      "content": "Paul — Actually, the Paperback combos you mention are contextual substitutions, not really ligatures. (But maybe you knew that and it’s just a matter of terminology.)\n\nFor those who are not familiar, there are variants of g and r (g.short and r.short) that are used in conjunction with a handful of following characters using the _calt_ feature. There are also “short” variants of v w y. Both end up getting called for rv or rw.\n\n— K.\n\n"
    },
    {
      "time": " 18.Apr.2007 7.15am",
      "content": " **Unicode!**\n\n"
    },
    {
      "time": " 18.Apr.2007 10.29am",
      "content": "Kent, can you show us what those look like? I could ask House for samples instread if you prefer. BTW I can see where Paul would have said ’ligature’ because in the article at creative pro which the wiki links to, the illustration is of an r & v overlapping. Maybe that’s not a technical ligature but it does visually look like a sort of ’forced’ one.\n\nPaul, sorry if my earlier post sounded like a hijack of the thread. I just started to wonder if there was new news I had missed.\n\nSilas, what do you mean by ’Unicode’? Do you want to know more about Support for it in Opentype?\n\n"
    },
    {
      "time": " 18.Apr.2007 10.32am",
      "content": "see what I mean?\n\n ![](http://web.archive.org/web/20080830000601im_/http:/typophile.com/files/rv_6499.gif)\n\n"
    },
    {
      "time": " 18.Apr.2007 11.01am",
      "content": "Eben,  \nAnything that brings to light peoples interests or experiences with Opentype are welcomed. I would not consider your comment a hyjack of my thread at all. The area of better letterfit and interaction is perfect material for Opentype discussion. I am happy to see it be applied to text faces rather than just mimicking handwritten scripts.\n\nChrisL\n\n"
    },
    {
      "time": " 18.Apr.2007 11.15am",
      "content": "Chris,\n\nMy biggest interests in OpenType, as a graphic designer/type appreciator, are pragmatically oriented with typographic rigor in mind. I love getting a type family that’s easy to manage both in file form and menu form, but at the same time removes so many of the restricitons that make robust typesetting more of a chore on the computer than it needed to be. Apex New, Garamond Pro, Estilo, and Bello are all examples of OpenType fonts that I’ve licensed and come to mind.\n\nI remember having to switch fonts for Garamond at my first job, just to use full caps in small caps words, because the small caps were stuck in an alternates font. Apex New went from 70 fonts to 14 simply because it could collapse small caps and numeral variations. As a user/consumer, I _love_ OpenType. I recognize that it isn’t fully adopted across consumer (vs. higher-end professional) applications, but that should be a matter of time, right? The more gimmicky stuff is great and all, but for me what’s so appealing is the idea that a robust font family is part of the core structure of digital fonts, rather than a workaround (alternate fonts). I’m sure font designers are less into that idea than I am...but there you go.\n\nFlexibility and control are big selling points for me, but I also like getting the designers’ ’recommendations’ via automatic character replacement, flourishes, etc.. It’s a bit like having professional advice scripted into the font. In my opinion, they’re just plain better to work with when compared to their non-OT counterparts.\n\n"
    },
    {
      "time": " 18.Apr.2007 11.31am",
      "content": "Thanks Philly Chris :-)\n\nChrisL\n\n"
    },
    {
      "time": " 18.Apr.2007 11.39am",
      "content": "Karsten, Paul, “gimmick” is not the right word.  \nThese fonts are novel by virtue of being experimental.  \nThey are perhaps naive, but these are early days for OT.  \nI would expect such experiments to lead to the kind of thing Eben mentions, and I’m developing some ideas in that direction.\n\n"
    },
    {
      "time": " 18.Apr.2007 12.39pm",
      "content": "I take the full blame for ’gimmick fonts’. These <cite>are</cite> high-end and groundbreaking fonts, designwise and technically, and are in no way naive. I am making fun of advertisement and press coverage of them which both evoke the equation “OpenType = Zapfino / Bickham / &c” which I regard as naive. My dislike of superlatives, positive and negative alike ...\n\nAs to other subtle applications of OT features, I think of Tim Ahrens’ Lapture and alternate glyph forms: avoiding an overlap of two serifs, or Robert Slimbach’s Brioso: creating a slightly more spontaneous word image, e.g. an alternate ’l’ if another one follows (saw this in the download specimen).\n\n"
    },
    {
      "time": " 18.Apr.2007 3.02pm",
      "content": "Eben — You’re right, the Paperback Italic has ligatures. Apologies to Paul, if this is what he was referring to also. I had only really noticed and explored the Roman:\n\n ![](http://web.archive.org/web/20080830000601im_/http:/typophile.com/files/PB_calt_4248.gif)\n\nHmm. Interesting that the Roman uses _calt_, while in the Italic there are no contextual alternates and _liga_ is used instead, with true ligatures.\n\n— K.\n\n"
    },
    {
      "time": " 18.Apr.2007 3.03pm",
      "content": "One interesting thing for me would be the kind of interactions that need to be thought through when OT might be doing several different things at once when turning character into glyph. A classic example might be the [long thread last summer in the Adobe typography forum](http://web.archive.org/web/20080830000601/http:/www.adobeforums.com/cgi-bin/webx/.3bc0dd7d/0) about the defective behavior of Garamond Premier Pro for polytonic Greek. Basically, an attempt to solve one possible OT layout problem (making sure all-caps text doesn’t have diacritics) has had the effect of causing a more serious problem (diacritics not showing on caps in mixed-case text) in many other situations.\n\nI can imagine a number of possible pitfalls. For combining diacritics, for example, an umlaut on an “n” might affect kerning: you would normally use class kerning for “n” and “n with umlaut”, but you might want the umlaut positioned a little differently if it should follow “r” rather than “i” - without changing its position relative to the base “n”. It would be really easy to get confused really quickly with this sort of thing.\n\n"
    },
    {
      "time": " 18.Apr.2007 3.42pm",
      "content": "<cite> It would be really easy to get confused really quickly with this sort of thing. </cite>\n\nYou are right, it could be. But theoretically speaking, solving for that sort of thing in a fairly optimal way is what you are paying for are when you buy the Uber-Nice extra-sweet multiple language support in an Opentype font. No?\n\n"
    },
    {
      "time": " 18.Apr.2007 4.45pm",
      "content": "_I can imagine a number of possible pitfalls. For combining diacritics, for example, an umlaut on an “n” might affect kerning: you would normally use class kerning for “n” and “n with umlaut”, but you might want the umlaut positioned a little differently if it should follow “r” rather than “i” - without changing its position relative to the base “n”. It would be really easy to get confused really quickly with this sort of thing._\n\nIndeed. One ends up with contextual kerning or mark positioning or some combination of the two. I’ve done a lot of this in Arabic fonts, but the challenges in Latin fonts with combining mark support are probably even more significant because of the greater number of potential combining marks and combining mark combinations, presuming one is aiming for very extensive and flexible language coverage.\n\nA conference presentation is gradually developing in my mind: _The Font that does Everything... and why I have not made it._\n\n"
    },
    {
      "time": " 18.Apr.2007 6.00pm",
      "content": "<cite>But theoretically speaking, solving for that sort of thing in a fairly optimal way is what you are paying for are when you buy the Uber-Nice extra-sweet multiple language support in an Opentype font.</cite>\n\nYes indeed. But sometimes the problem is complex enough that font designers/coders solve it in a way that’s very far from optimal - like with the polytonic Greek example - because of not being aware enough of the potential interactions. This isn’t to criticize Adobe, but rather to say that if their outstanding team got the OT language support wrong in that instance, how easy it is for anyone to make such mistakes when working with languages we don’t know very well.\n\n"
    },
    {
      "time": " 18.Apr.2007 6.06pm",
      "content": "\\> If you were to read an article about Opentype, what would you be most interested in seeing covered in it?\n\nIf “The Others” (graphic designers, art directors, design directors etc etc ) really ’care’ about that; really ’need’ 2000 glyphs\n\n"
    },
    {
      "time": " 18.Apr.2007 8.26pm",
      "content": "_If you were to read an article about Opentype, what would you be most interested in seeing covered in it?_\n\nI would like to see Stylistic Sets explained...thoroughly. I’d also like to see some instructions WITH OpenType fonts explaining each of them. (But that’s a whole ’nother topic.)\n\n"
    },
    {
      "time": " 18.Apr.2007 8.50pm",
      "content": "_If you were to read an article about Opentype, what would you be most interested in seeing covered in it?_\n\nWhy Opentype is not a platform where typographers take advantage of to show off? Also, eg; Why 2000 glyphs are actually in there?\n\n"
    },
    {
      "time": " 18.Apr.2007 9.45pm",
      "content": "\\> _A conference presentation is gradually developing in my mind: The Font that does Everything… and why I have not made it._\n\nThat made me smile :)\n\n"
    },
    {
      "time": " 19.Apr.2007 12.04am",
      "content": "<cite> That made me smile :) </cite>\n\nMe too. But actually it would make a good presentation.\n\n<cite> Why Opentype is not a platform where typographers take advantage of to show off? </cite>\n\nShowing off isn’t really the realm of type. Type needs to be useful. It needs to work better - not showier - in almost all situations. What kind of showing off do you have in mind? Is it more ornamental stuff?\n\n"
    },
    {
      "time": " 19.Apr.2007 12.05am",
      "content": "<cite> Hmm. Interesting that the Roman uses calt, while in the Italic there are no contextual alternates and liga is used instead, with true ligatures. </cite>\n\nThanks for posting this. It was really really interesting to see.\n\n"
    },
    {
      "time": " 19.Apr.2007 5.59am",
      "content": "So John, will both your “does everything” font and presentation both be ready for TypeCon this Summer? :-)\n\nChrisL\n\n"
    },
    {
      "time": " 19.Apr.2007 7.30am",
      "content": "Here’s what I would like catch up on in an article. A progress report on the ISO adoption of OpenType, and a comparison of OpenType and Graphite, regarding features, adoption and standards control.\n\n"
    },
    {
      "time": " 19.Apr.2007 8.30am",
      "content": "_If you were to read an article about Opentype, what would you be most interested in seeing covered in it?_\n\nFor me: application adoption plans in the next 3-5 years. When will, say, MS Office support the advanced features of OpenType? Will it ever?\n\nFor others: using OpenType to implement solid typographic practices. OpenType helps elevate the PC further beyond the typewriter.\n\n"
    },
    {
      "time": " 19.Apr.2007 8.37am",
      "content": " ![](http://web.archive.org/web/20080830000601im_/http:/typophile.com/files/calt_4625.jpg)\n\nChris, usually the customers outside of Typophile buy that because they like and later they mail asking why the pack comes without the swashes, ligatures, etc... and why it doesnt work on corel or vynil apps. I try with pdfs in every complex release but is still very difficult... To me the most important think is to show the real work situations of use in design work.  \nI hope your article help! and if you need any feedback or material please feel free to contact me.\n\n"
    },
    {
      "time": " 19.Apr.2007 9.54am",
      "content": "Thanks Alejandro! I certainly will!  \nI am very interested in real world issues with opentype. It seems that there are several factors. One is lack of support by either applications (like Word) or OSs. Another is a disconnect between the users and app developers on how to access opentype features, which is partly an interface issue and partly a lack of understanding issue. I am hoping to strike at the lack of understanding aspect at least, so we can move forward and let progress in development happen. I am sure everyone wants Opentype to succeed but may be playing wait-and-see before they act.  \nI am sure many of your script faces are loaded with alternates that are asking to be accessed :-)\n\nChrisL\n\n"
    },
    {
      "time": " 6.May.2007 4.14am",
      "content": "_\"I am very interested in real world issues with opentype.\"_\n\nIn the _’real world’_ OpenType features which support complex scripts (Devanagari, Arabic, Bangla, etc. _etc._) are probably far more significant than the typographic features.\n\nOne thing that disappoints me is that applications which do have support for the typographic features have not got very far in supporting the complex script features.\n\nIt is not that difficult. How is it that [Inkskape](http://web.archive.org/web/20080830000601/http:/www.inkscape.org/) - with only a handful of developers and no financial resources - manages this when Illustrator, CorelDraw and Freehand don’t?\n\n- Chris\n\n"
    },
    {
      "time": " 6.May.2007 2.20pm",
      "content": "Chris: _How is it that Inkskape - with only a handful of developers and no financial resources - manages this when Illustrator, CorelDraw and Freehand don’t?_\n\nThe developers of Inkskape have the advantage of starting from scratch and being able to build their software around components that provide support for complex script layout and/or typographic refinement. Developers of older applications have a much more difficult task: adding such support into existing code bases while maintaining backwards compatibility and not adversely affecting performance.\n\nThat said, I think it’s a great pity that complex script support wasn’t a central goal in the development of InDesign, because that would have been an excellent opportunity for Adobe, developing a new product with relatively little reliance on existing code.\n\n"
    }
  ]
}

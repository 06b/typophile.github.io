{
  "id": "42124",
  "title": "Rounded corners script",
  "forum": "Build",
  "tags": [
    "Build"
  ],
  "content": "Anyone know of a rounded corners python script for Fontlab, similar to Xtream Path for Illustrator?\n\n",
  "author": "Toby",
  "time": "15 Feb 2008 — 6:52am",
  "uid": "3070",
  "comments": [
    {
      "time": "15 Feb 2008 — 6:58am",
      "content": "Yes, Eric van Blokland wrote one for FF Unit Rounded.\n\n"
    },
    {
      "time": "15 Feb 2008 — 7:22am",
      "content": "But i don’t know if it’s written to be used in FontLab. Perhaps it’s for Superpolator.\n\nPieter\n\n"
    },
    {
      "time": "16 Feb 2008 — 12:37pm",
      "content": "It was for Superpolator, which of course is a tool that you'd use **with** FontLab Studio rather than **in** it.\n\nA.\n\n"
    },
    {
      "time": "17 Feb 2008 — 1:18pm",
      "content": "I wrote a rounded corners Python script for my [Mashine Rounded](http://web.archive.org/web/20120515174320/http:/justanotherfoundry.com/Masnine) but that only accepts straight polygons as an input so it probably wouldn't help you much.\n\n[Georg Seifert](http://web.archive.org/web/20120515174320/http:/www.typophile.com/user/8183) showed me a rounded corners script he has written for FontLab. It is really sophisticated: it gives obtuse angles a greater curve radius in order to make it visually consistent!\n\nMaybe you can convince him to share it, it is probably better than anything else out there.\n\n"
    },
    {
      "time": "17 Feb 2008 — 10:30pm",
      "content": "[TypeMedia grad](http://web.archive.org/web/20120515174320/http:/new.typemedia.org/) Frederik Berlaen wrote the round corner tool I used for FF Unit. [Movie here.](http://web.archive.org/web/20120515174320/http:/www.typemytype.com/scripting/roundingufo/) The confusion with [Superpolator](http://web.archive.org/web/20120515174320/http:/superpolator.com/) got started on a [Spiekerblog post](http://web.archive.org/web/20120515174320/http:/www.spiekermann.com/mten/index.html). For Unit Rounded, both tools were used, but only Frederik's made round corners. And yes, it does make proportional corners, it even handles curve to curve segments.\n\n"
    },
    {
      "time": "18 Feb 2008 — 8:29am",
      "content": "Erik,\n\nso was it so that Fredrik's script made the rounded corners and then you used Superpolator to help find Spiekermann the \"right\" amount of rounding, i.e. the optimal instances between fully straight and fully round?\n\nA.\n\n"
    },
    {
      "time": "18 Feb 2008 — 1:04pm",
      "content": "Hi\n\nErik asked me a while ago for some scripts to \"turn\" corners into round ones.  \nI wrote a stand alone app to convert UFO's to rounded UFO's see ( [http://www.typemytype.com/scripting/roundingufo/](http://web.archive.org/web/20120515174320/http:/www.typemytype.com/scripting/roundingufo/ \"http://www.typemytype.com/scripting/roundingufo/\") )  \nand next to that i wrote also a FL script that does the same thing because its the same code :). It can add rounding to the whole font or just to one point in a glyph (short movie: [http://www.vimeo.com/704368](http://web.archive.org/web/20120515174320/http:/www.vimeo.com/704368 \"http://www.vimeo.com/704368\") )\n\nthe input can be a corner with straight lines aswell as a combination with curves or just only curves.\n\nThe parameters are the radius of the rounding and where you want rounding: in the black or white corners\n\nErik used the standalone UFOrounding app for the round corners and superpolator for the interpolations :)  \nFor the standalone app i also added inktraps because its basically the same thing: adding rounding or inktraps :)\n\ngr  \nFrederik\n\n"
    },
    {
      "time": "18 Feb 2008 — 2:49pm",
      "content": "When looking through Hrant's proposal for an ink trap formula, [The Trapping Flower](http://web.archive.org/web/20120515174320/http:/www.themicrofoundry.com/ss_trapping1.html), I too realized It could also be adapted to rounding corners as well (and further that the \"flower\" need not necessarily be circular). Of course, not being a programmer, I have no idea as to how to automate this method.\n\nI'm curious as to how you did it, Frederik, and if your app could be adapted to run with FontForge, either as a Python script internally or as a post-process on .sfd files.\n\n"
    },
    {
      "time": "19 Feb 2008 — 12:21pm",
      "content": "Thanks for your comments guys. I think I´ll contact Georg Seifert then, thanks Tim.  \nFrederik, is your FL script available?\n\n"
    },
    {
      "time": "22 Feb 2008 — 7:41am",
      "content": "I just released a python rounded corner script for FontLab yesterday at [http://betatype.com](http://web.archive.org/web/20120515174320/http:/betatype.com/). It's very nuts and bolts, but it allows a user to select the points he/she wants rounded, configure x and y radius, as well as the length of the bezier handles, influencing the steepness of the curve.\n\nIt definitely isn't designed to be automatic where you can point it at a whole font and expect some magic new design to come out of it. That never works anyway. You really need to pick the corners that need to be rounded, and by how much.\n\n"
    },
    {
      "time": "22 Feb 2008 — 3:10pm",
      "content": "Great, looks really usable, thanks for sharing Christian.\n\n"
    }
  ]
}

{
  "id": "59057",
  "title": "Using FDK FontMenuNameDB to assign \"s=Regular\" to Name ID 4 & 17?",
  "forum": "Build",
  "tags": [
    "Build"
  ],
  "content": "Hi. Can someone tell me if this is a bug on my end or if afdko is doing something weird.\n\nI'm trying to build a font with the style name set to \"Regular\" but when I run makeotf I get blanks in Name ID 4 and Name ID 17. If put anything other than \"s=Regular\" it works fine.\n\nI'm running afdko 2.5.\n\n",
  "author": "Jackson",
  "time": "15 Jun 2009 — 1:33pm",
  "uid": "4346",
  "comments": [
    {
      "time": "15 Jun 2009 — 4:00pm",
      "content": "After a little more troubleshooting, it doesn't appear to be a bug but the way adobe prefers to name their fonts. Unless there's a command to override this in fdk I'm just going to edit the name tables with ttx.\n\n"
    },
    {
      "time": "15 Jun 2009 — 6:46pm",
      "content": "Are you on the OpenType mailing list? You might try asking there.\n\n"
    },
    {
      "time": "15 Jun 2009 — 9:29pm",
      "content": "Or you could also try asking at\n\n[http://forum.fontlab.com/adobe-fdk-for-opentype-afdko-b38.0/](http://web.archive.org/web/20131015221017/http:/forum.fontlab.com/adobe-fdk-for-opentype-afdko-b38.0/ \"http://forum.fontlab.com/adobe-fdk-for-opentype-afdko-b38.0/\")\n\n"
    },
    {
      "time": "17 Jun 2009 — 9:52am",
      "content": "I suggest that you read the 'name' table portion of the OpenType Specification, specifically for IDs 4 and 17: [http://www.microsoft.com/typography/otspec/name.htm](http://web.archive.org/web/20131015221017/http:/www.microsoft.com/typography/otspec/name.htm \"http://www.microsoft.com/typography/otspec/name.htm\")\n\nAFDKO is simply following the specification.\n\nDr. Ken Lunde  \nSenior Computer Scientist, CJKV Type Development  \nAdobe Systems Incorporated  \n [lunde@adobe.com](mailto:lunde@adobe.com)\n\n"
    },
    {
      "time": "17 Jun 2009 — 10:24am",
      "content": "Thanks Ken, good to know there's a reason.\n\nAre there any technical reasons, besides the spec you referenced, why I shouldn't manually change IDs 4 and 17 to \"Regular\"? This rule seems a little arbitrary and I don't like the inconsistency (at least in my large, not style-linked family).\n\n"
    },
    {
      "time": "17 Jun 2009 — 10:37am",
      "content": "Given that the specification deals with the string \"Regular\" in a special way, overriding this behavior by post-processing the font using \"ttx\" may have consequences.\n\nThere is no harm in experimenting, which should include a heavy dose of application testing, to make sure that the \"Regular\" weight of the font appears correctly in the font menus, and otherwise behaves as expected.\n\nIf you don't mind a suggestion, one thing to consider is the use of one- and two-letter abbreviations for the weight names, such as EL, L, R, M, B, and H for Extra Light, Light, Regular, Medium, Bold, and Heavy.\n\nDr. Ken Lunde  \nSenior Computer Scientist, CJKV Type Development  \nAdobe Systems Incorporated  \n [lunde@adobe.com](mailto:lunde@adobe.com)\n\n"
    },
    {
      "time": "18 Jun 2009 — 12:50am",
      "content": "Jackson: '[...] This rule seems a little arbitrary and I don’t like the inconsistency [...]'\n\nI don't think the rule is either arbitrary or inconsistent. As you can read in the specs, with exception of the CFF entry for the Windows platform, the _Full font name_ is made of the _Font Family name_ + _Font Subfamily name_. If a typeface has more than four weights/styles, the fact that a family on the Windows side can't contain more than four 'MacStyles' (fsSelection) will force one to put for instance the Light, Medium, Black or whatever weight into a separate family. So, the _Font Family name_ could very well in that case contain a weight indicator then and adding 'Regular' to it in the _Full font name_ for the fsSelection: 64 would be the undesirable result of your consistency rule.\n\nFor validating the Naming Table the _Consistency Checker_ of [DTL OTMaster (Light)](http://web.archive.org/web/20131015221017/http:/www.fontmaster.nl/english/demo.html) is a helpful tool, I reckon.\n\n&nbsp;\n\nKen: '[...] There is no harm in experimenting [...]'\n\nNo, there isn't, but, as you will agree, the nice thing of specs is that following these will at least theoretically assure one of a proper behavior of one's fonts. If they don't, one can blame the application in question or even the operating system.\n\nThe rules for the OpenType Naming Table are mostly pretty old anyway, because the format is an enhancement of the TrueType format, of course.\n\n"
    },
    {
      "time": "18 Jun 2009 — 7:19am",
      "content": "Thanks for the reply, Frank.\n\n<cite>- I don’t think the rule is either arbitrary or inconsistent.</cite>  \nIt seems arbitrary to me because I could change the style name from \"Regular\" to \"Book\" and the name tables would be built differently. And it seems inconsistent because the Full Font Name of the \"Regular\" font doesn't contain the style name unlike every other font.\n\n ![](http://web.archive.org/web/20131015221017im_/http:/typophile.com/files/Picture-1_3993.gif)\n\n<cite>- the nice thing of specs is that following these will at least theoretically assure one of a proper behavior of one’s fonts.</cite>  \nGreat point, I should probably suck it up and just follow spec. It's just a minor annoyance.\n\n"
    },
    {
      "time": "19 Jun 2009 — 2:57am",
      "content": "Jackson: ‘[...] I could change the style name from “Regular” to “Book” and the name tables would be built differently [...]'\n\nThat is according to the specs still. As you know, on the Mac side you can theoretically have an unlimited number of Font Subfamilies (which used as such, is not always an advantage for the end user, but that is another discussion). On the Windows side there is a maximum of four because a Font Family can't contain more than four different styles.\n\nUsing ‘Book’ as a Subfamily on the Windows side is not incorrect as such, but personally I prefer to let the Font Subfamily name correspond with the fsSelection setting and then the specs make sense.  \nNot every Windows app shows the Subfamily name, and in my opinion the style information, for instance ‘Regular’, could be confusing when the actual Subfamily is ‘Book’.\n\nThe escape route for the more advanced apps is offered by the naming entries for PlatformID 3 (Windows), NameID 16 (Preferred Family) and 17 (Preferred Subfamily), which I would use for equaling PlatformID 1 (Mac OS), NameID 1 (Font Family name) and 2 (Font Subfamily name).\n\n"
    },
    {
      "time": "23 Jun 2009 — 3:15am",
      "content": "As you probably know, an adapted version of the AFDKO is under the hood of DTL FontMaster. So, perhaps it might be interesting to know how the font naming is controlled in FM.\n\nThe file structure of FM is based on the 35 years old IKARUS system (we celebrate this fact at the FM conference in the [Kurhaus hotel](http://web.archive.org/web/20131015221017/http:/www.kurhaus.nl/) in the Hague coming autumn. Besides the ‘central’ Character Layout file(s) (for character names, Unicode code points and encoding vectors) and OT Layout features file(s), there are four different font files: a glyph database file (BE or IK), the kerning file (AFM or .fea), the font metrics info/naming file (UFM) and a file that contains certain parameters like for instance the blue values (PAR). The files are connected with each other by the file names.\n\nI have attached an example of the UFM file below. It is just a text file that contains font info such as naming. The ‘TTName’ entries are specifically used for the TrueType and OpenType production and are supplemental to, or supersede related info in the rest of the file.\n\nWhen exporting OpenType fonts all required conversions are done in a temporary directory, where all files needed by the conversion tools involved are created or copied. For instance _feathead.txt_, _featname.txt_, and _featos2.txt_ contain table blocks for respectively the ‘head’, ‘name and ‘OS/2’ table, with all entries based on the UFM and PAR files. Name IDs from _featname.txt_ are in the range of 1–6 (the standard range). The original _Adobe Hatch OpenType_ tool (HOT) will not take these names from a features file, but the modified HOT tool (by URW++) will accept any ID.\n\nThe main concern of every font producer is **reproducibility** and **consistency** throughout a type library. Font data must be easy to edit and update. The fact that the UFM file is an editable and duplicatable text file, makes it easy to re-use it for variants of font weights/styles, for instance for other scripts.  \nI have made simple Apple scripts that rename a couple of entries like •indicator• (for instance TOT for the text version of an OpenType Standard font, or TPRO for the OpenType Pro version) and •UniqueID• and some other font specific entries, and subsequently distribute the UFM files to a static system of directories for the actual font production, where the four font files for the different scripts reside (Character Layout files and OT Layout features files are ‘globally’ used).  \nThe glyph database files in these directories are renamed copies of ‘central’ glyph databases, of which file-renamed copies are re-distributed over the system after updates using Apple scripts also. The generation of the actual fonts is handled by a ‘pyramid’ like structure of command files that relate to the static directory system.\n\nWith the future in mind, it has taken me some time to organize the production at DTL as described. For quite some years now we are working on WGL4 character sets for all fonts and the copying/distributing system makes it easier to generate (and control!) all font variants that contain subsets.  \n&nbsp;  \n----------------------------------------------------------------------------------------  \nStartFontMetrics  \nTTName 0 1 0 0 \"© Dutch Type Library, 1992-2009. All rights reserved.\"; #Macintosh  \nTTName 0 3 1 0x409 \"© Dutch Type Library, 1992-2009. All rights reserved.\"; #Windows  \nTTName 1 1 0 0 \"DTL Argo •indicator•\"; #Macintosh  \nTTName 1 3 1 0x409 \"DTL Argo •indicator• Medium\"; #Windows  \nTTName 2 1 0 0 \"Medium\"; #Macintosh  \nTTName 2 3 1 0x409 \"Regular\"; #Windows  \nTTName 4 1 0 0 \"DTL Argo •indicator• Medium\"; #Macintosh  \nTTName 7 1 0 0 \"DTL Argo is a trademark of the Dutch Type Library.\"; #Macintosh  \nTTName 7 3 1 0x409 \"DTL Argo is a trademark of the Dutch Type Library.\"; #Windows  \nTTName 8 1 0 0 \"Dutch Type Library\"; #Macintosh  \nTTName 8 3 1 0x409 \"Dutch Type Library\"; #Windows  \nTTName 9 1 0 0 \"Gerard Unger\"; #Macintosh  \nTTName 9 3 1 0x409 \"Gerard Unger\"; #Windows  \nTTName 10 1 0 0 \"retail edition\"; #Macintosh  \nTTName 10 3 1 0x409 \"retail edition\"; #Windows  \nTTName 11 1 0 0 \"http://www.dutchtypelibrary.com\"; #Macintosh  \nTTName 11 3 1 0x409 \"http://www.dutchtypelibrary.com\"; #Windows  \nTTName 13 1 0 0 \"By downloading, unpacking and/or installing DTL Font Software you acknowledge that you have read the DTL End User License Agreement, understand it and that together with the related invoice it is the complete and exclusive statement of your agreement with the Dutch Type Library concerning this purchase of DTL Font Software and that your obligations under this agreement shall inure to the benefit of Dutch Type Library licensors whose rights are licensed under this agreement. No variation of the terms of this agreement will be enforceable against the Dutch Type Library unless the Dutch Type Library gives it expressed consent in writing signed by an officer of the Dutch Type Library. By installing the software you accept your own liability to comply with all terms and conditions of the license. If you do not agree completely with the license, do not download, unpack and/or install DTL Font Software.\"; #Macintosh  \nTTName 13 3 1 0x409 \"By downloading, unpacking and/or installing DTL Font Software you acknowledge that you have read the DTL End User License Agreement, understand it and that together with the related invoice it is the complete and exclusive statement of your agreement with the Dutch Type Library concerning this purchase of DTL Font Software and that your obligations under this agreement shall inure to the benefit of Dutch Type Library licensors whose rights are licensed under this agreement. No variation of the terms of this agreement will be enforceable against the Dutch Type Library unless the Dutch Type Library gives it expressed consent in writing signed by an officer of the Dutch Type Library. By installing the software you accept your own liability to comply with all terms and conditions of the license. If you do not agree completely with the license, do not download, unpack and/or install DTL Font Software.\"; #Windows  \nTTName 14 1 0 0 \"http://www.dutchtypelibrary.nl/PDF/Licenses/DTL\\_FS\\_License.pdf\"; #Macintosh  \nTTName 14 3 1 0x409 \"http://www.dutchtypelibrary.nl/PDF/Licenses/DTL\\_FS\\_License.pdf\"; #Windows  \nTTName 16 3 1 0x409 \"DTL Argo •indicator•\"; #Windows  \nTTName 17 3 1 0x409 \"Medium\"; #Windows  \nTTName 18 1 0 0 \"DTL Argo •indicator• Medium\"; #Macintosh  \nTTName 19 1 0 0 \"The quick brown fox jumps over the lazy dog.\"; #Macintosh  \nTTName 19 3 1 0x409 \"The quick brown fox jumps over the lazy dog.\"; #Windows  \nCopyright © Dutch Type Library, 1992-2009. All rights reserved.  \nNotice DTL Argo is a trademark of the Dutch Type Library.  \nVersion 002.200  \nFamilyName DTL Argo •indicator• Medium  \nFontName DTLArgo•indicator•-Medium  \nFullName DTL Argo •indicator• Medium  \nUniqueID •UniqueID•  \nWeight Medium  \nIsFixedPitch false  \nAscender 774  \nDescender -226  \nUnderlinePosition -143  \nUnderlineThickness 20  \nBodysize 1000  \nCapHeight 706  \nFigureSize •FigureSize•  \nXHeight •XHeight•  \nAccentOffset 181  \nMacFileName DTLArg•indicator•Med  \nFondName DTL Argo •indicator• Medium  \nFondID •FondID•  \nMacStyle 0  \nFondAscender 774  \nFondDescender -226  \nFondLeading 0  \nFaceName DTL Argo •indicator• Medium  \nPCWeight 5  \nPitchAndFamily Dontcare  \nSubScript 0  \nSubScriptSize 424  \nSubscriptXSize 360  \nSuperScript 282  \nSuperScriptSize 424  \nSuperscriptXSize 360  \nUnderlineOffset -133  \nUnderlineWidth 20  \nDoubleUpperUnderlineOffset -56  \nDoubleUpperUnderlineWidth 63  \nDoubleLowerUnderlineOffset -180  \nDoubleLowerUnderlineWidth 63  \nStrikeOutOffset 267  \nStrikeOutWidth 53  \nInternalLeading 0  \nExternalLeading 0  \nSlant 0  \nFontFamilyName DTL Argo •indicator• Medium  \nSubfamilyName Regular  \nTrueTypeID •TrueTypeID•  \nWidthClass 5  \nFamilyClass 8 0  \nPanose 0 0 0 0 0 0 0 0 0 0  \nVendID DTL  \nTypoAscender 774  \nTypoDescender -226  \nTypoLineGap 0  \nAscenderHHEA 774  \nDescenderHHEA -226  \nLineGapHHEA 0  \nLowestRecPpem 12  \nFsType 4  \nWinAscent 974  \nWinDescent 246  \nXavgCharWidth 500  \nFirstCharIndex 0  \nGaspRange 0 0 0  \nEndFontMetrics  \n----------------------------------------------------------------------------------------\n\n"
    }
  ]
}

{
  "id": "116658",
  "title": "Insert programming into type file",
  "forum": "Build",
  "tags": [
    "Build"
  ],
  "content": "Hello,  \nFirst of all sorry for my English, I'll try to be clear.\n\nI'm looking for a way to insert code (programme) into a type file (into a .otf or .ttf file).  \nSome language I could use to write algorythm which could substitutes glyphs to others (based on complex rules, algorythmes)\n\nI can not use ligatures because the substitution rules are far too complex.  \nIf I would like to define them one by one I'll have to do it for every words.\n\nWhich language (C, C++, Python...) ?  \nWhich soft ?\n\nThank you very much,  \nPatrice\n\n",
  "author": "ptrpp",
  "time": "19 May 2014 — 3:28am",
  "uid": "220256",
  "comments": [
    {
      "time": "19 May 2014 — 9:16am",
      "content": "None of them. The closest things to programs in a font is the TrueType hinting/instructing code. Everything else is done with data tables compiled from a feature description language.\n\n"
    },
    {
      "time": "19 May 2014 — 3:22pm",
      "content": "Anything more complicated than the glyph-to-glyph translations offered by OpenType is usually done in a text layout engine. Examples are: Uniscribe (Microsoft Windows), Core Text (Apple), Harfbuzz/Pango (open source), and LaTEX.\n\nAlso, software for special purposes such as equations (LaTEX again; MathType) and music (Guido) use additional routines, not linked to data available from font files only.\n\n"
    },
    {
      "time": "21 May 2014 — 3:03am",
      "content": "You could write a program in the language of your choice to generate feature files (in AFDKO, VOLT or other syntax).\n\n"
    },
    {
      "time": "26 May 2014 — 6:28pm",
      "content": "Some of your advice are actually sounds great.\n\n"
    }
  ]
}

{
  "id": "31448",
  "title": "Hints, good or bad? Is it really needed?",
  "forum": "Build",
  "tags": [
    "Build"
  ],
  "content": "I am currently starting to try dig in a little bit deeper into the hinting process of fonts. Actually I would lie if I said I understand it completely, but slowly getting there perhaps.\n\nHere is one interesting issue I noticed, however, which makes me wonder if hints really are that good. It could also be that I am missing something very important here, but everybody tells me that Autohinting with Adobes AFDK 2.0 is quite good.  \nWhat I have done here is to make one font with hints and one without. The standard stem values are the same and also the Alignment zones have the exact same value.\n\nNow look what happens when I use the font in InDesign. The funny thing is that, the bigger size the worse hinting.\n\nIn the last example the letters are really distorted as you see.\n\nAny thought on this? Thanks in advance.\n\n ![](http://web.archive.org/web/20131018012332im_/http:/typophile.com/files/hintsornotwhat_4501.png)\n\n",
  "author": "Goran Soderstrom",
  "time": "14 Feb 2007 — 10:44am",
  "uid": "11526",
  "comments": [
    {
      "time": "14 Feb 2007 — 10:54am",
      "content": "...I should maybe add, that after this last example shown above (if I enlarge the pointsize more) – it starts to look really good. Sharp and clear.\n\n"
    },
    {
      "time": "14 Feb 2007 — 11:00am",
      "content": "[http://www.pyrus.com/downloads/hinting.pdf](http://web.archive.org/web/20131018012332/http:/www.pyrus.com/downloads/hinting.pdf \"http://www.pyrus.com/downloads/hinting.pdf\")\n\n[http://www.microsoft.com/typography/tools/trtalr.htm](http://web.archive.org/web/20131018012332/http:/www.microsoft.com/typography/tools/trtalr.htm \"http://www.microsoft.com/typography/tools/trtalr.htm\")\n\n[http://www.microsoft.com/typography/TrueTypeHintingIntro.mspx](http://web.archive.org/web/20131018012332/http:/www.microsoft.com/typography/TrueTypeHintingIntro.mspx \"http://www.microsoft.com/typography/TrueTypeHintingIntro.mspx\")\n\n[http://www.microsoft.com/typography/hinting/tutorial.htm](http://web.archive.org/web/20131018012332/http:/www.microsoft.com/typography/hinting/tutorial.htm \"http://www.microsoft.com/typography/hinting/tutorial.htm\")\n\n"
    },
    {
      "time": "14 Feb 2007 — 11:23am",
      "content": "It's my understanding that ClearType negates the need for manual hinting and fonts might even perform better _without_ manual hints on ClearType displays. Can someone confirm? What about OS X's CoolType?\n\n"
    },
    {
      "time": "14 Feb 2007 — 11:30am",
      "content": "Somehow I can find myself having some kind of feeling that todays technology doesnt need hinting. I mean, how many graphic designers today use low resolution screens and/or print on low resolution outputs?\n\n"
    },
    {
      "time": "14 Feb 2007 — 11:38am",
      "content": "<cite>I mean, how many graphic designers today use low resolution screens...?</cite>\n\nAll of them.\n\n(And I'm speaking as someone using a 148PPI display.)\n\n"
    },
    {
      "time": "14 Feb 2007 — 11:45am",
      "content": ":-) Youre right. It was a strange statement from me. I was more thinking of low resolution outputs and generally \"old technology\".\n\n"
    },
    {
      "time": "14 Feb 2007 — 11:45am",
      "content": "Sometimes OS X's hinting can be somewhat shoddy. Especially if a glyph contains multiple shapes. Compare a single grave à with a double grave ȁ. The double grave almost doesn't even register at 12pt and is less than a hairline at even 18-24 pt. But the larger the font size gets, the more the two acutes look the same. It seems to happen more with negative sloped forms (compare double acute a̋ to double grave ȁ) or those whose looser curve is above a tighter curve (compare breve ă inverted breve ȃ). But I've even run into it causing problems with the Cyrillic ы in one of the fonts I'm working on.\n\n_«El futuro es una línea tan fina que apenas nos damos cuenta de pintarla nosotros mismos.» (La Luz Oscura, por Javier Guerrero)_\n\n"
    },
    {
      "time": "14 Feb 2007 — 12:18pm",
      "content": "Hmm, I guees it’s a matter of opinion here after all. Hinting is all about choosing between to have a crisp sharp appearance on screen that will be somewhat distorted in its letterform OR keep the letterform but settle for a less sharp crispiness. Isn’t it?\n\nInstead of celebrating Valentines Day like I really should, I have now inspected some fonts I (the ad agency I’m working for) have. They all suffer the same problem. Sometimes its more obvious and sometimes less. It depends on the shapes of the letterforms.\n\nThey are all hinted, and they all change a little bit in proportions of the letterform depending on which size I display the font on, on the screen. A one-point-size-change can sometimes almost don’t do any difference at all (the letter is hinted to the nearest pixel or something?).\n\nSome other times, the font makes a bigger step visually in font size (I guess it then stick to the next \"grid\") even though I only change the size one point as before.\n\nLetters like v and w – sometimes they go a little bit too far below the baseline compared to the other letters, and sometimes they jump up to it’s right position.\n\nIs this what hinting is about? In that case I guess it’s up to the font developer to decide which to choose. Both a hinted font and an unhinted have \"issues\". None of them are perfect.\n\nOf course it also depends on how the letterforms itself are created?  \nIf that is true, then I understand what happened to my font (as shown above) because I really tried to display the font with small, small changes in size – comparing it to the un-hinted above, and then there was a certain moment when this big distorsion appeared (last example).\n\nOr are there someone out there that believes hinting could be done perfect without ANY of these distorsions? Is it even possible?\n\nSorry if my thought sounds a bit stupid, but I also having some problems expressing myself on english :)\n\n"
    },
    {
      "time": "14 Feb 2007 — 12:29pm",
      "content": "As to illustrate my above message.\n\n ![](http://web.archive.org/web/20131018012332im_/http:/typophile.com/files/distorsion_5767.png)\n\n"
    },
    {
      "time": "14 Feb 2007 — 2:12pm",
      "content": "\\> _Letters like v and w – sometimes they go a little bit too far below the baseline compared to the other letters, and sometimes they jump up to it’s right position._\n\nThis might have to do with the [BlueScale](http://web.archive.org/web/20131018012332/http:/typophile.com/wiki/BlueScale) value.\n\nThe [...] BlueScale [...] controls the point size at which overshoot suppression ceases.\n\n- For point sizes that occupy fewer device pixels than the BlueScale value results in for a given device, overshoot suppression is performed. All features falling in an alignment zone are rendered at the same pixel height.\n- For point sizes that occupy the same number or a greater number of device pixels than the BlueScale value results in, overshoot suppression is turned off, thus allowing overshoots to occur. (This behavior may be modified by the optional [BlueShift](http://web.archive.org/web/20131018012332/http:/typophile.com/wiki/BlueShift) setting)\n\nIn, [Adobe Type 1 Font Format](http://web.archive.org/web/20131018012332/http:/partners.adobe.com/public/developer/en/font/T1_SPEC.PDF) (PDF file), page 39.\n\nI agree that [hinting](http://web.archive.org/web/20131018012332/http:/typophile.com/wiki/hinting) is not an easy subject, and that little documentation about it is available. I've been struggling with these things as well.\n\n"
    },
    {
      "time": "14 Feb 2007 — 9:51pm",
      "content": "Hinting is a transitional problem, only useful as long as we have low resolution displays. It shares this characteristic with 8-bit color palettes, something people used to spend a lot of time fiddling and tweaking.\n\nSince almost nobody today actually has high-res displays, whether hinting is worth doing depends on what the font will be used for. If it's going to be used as a UI font or as the primary reading font in an app like a Web browser, then yeah, you need to hint. If it's primarily used for print, or only in display sizes, or you only care about computers shipping after the year 2012, then nah, don't bother.\n\nIf you do hint, you need to choose between TrueType and Type1 (CFF) flavors. The former gives the font creator a _lot_ more control, but also requires more deep programming magic.\n\n"
    },
    {
      "time": "15 Feb 2007 — 12:53pm",
      "content": "<cite>If you do hint, you need to choose between TrueType and Type1 (CFF) flavors. The former gives the font creator a lot more control, but also requires more deep programming magic.</cite>\n\nI focus mainly on the OpenType PS-format, it feels like good standard. So for me it’s all about Type 1 Hinting at the moment.\n\n"
    },
    {
      "time": "17 Feb 2007 — 7:22am",
      "content": "It seems that not so many are interested in talking more deeply about hints, so I go on ;-)\n\nSorry, but just trying to fully understand this. It seems as no matter what I do with the hint settings, an optimal result cant be reached at this moment. It makes me start digging deeper, so....\n\nThis is Warnock Pro. A very beautiful font that I believe comes with the CS2 package. Now, this is hinted by Adobe I guess (?) which of course means good quality. I am absolutely not saying anything negative about Adobe here, just to make that clear – just trying to understand the \"Art of Hinting\".\n\nLook – it has the same distorsion as mine attempt above, see? Proportions of the letters do change depending on which size I use. Look at the \"e\" for example. It’s like three different shapes.\n\n ![](http://web.archive.org/web/20131018012332im_/http:/typophile.com/files/warnockhints_4894.png)\n\n**Now to my question:** Is this, generally speaking, how it works with hints? Is it a compromise where you choose crispy looking letters on screen before letterforms that stay proportional (as they do if you don’t hint them).\n\n"
    },
    {
      "time": "17 Feb 2007 — 8:01am",
      "content": "[http://www.rogerblack.com/blog/second\\_font\\_war](http://web.archive.org/web/20131018012332/http:/www.rogerblack.com/blog/second_font_war \"http://www.rogerblack.com/blog/second\\_font\\_war\")\n\n[http://www.rogerblack.com/blog/screen\\_fonts\\_history](http://web.archive.org/web/20131018012332/http:/www.rogerblack.com/blog/screen_fonts_history \"http://www.rogerblack.com/blog/screen\\_fonts\\_history\")\n\n"
    },
    {
      "time": "17 Feb 2007 — 8:33am",
      "content": "That was **very** interesting reading, Grot Esqué. Thanks for the links.\n\n"
    },
    {
      "time": "18 Feb 2007 — 4:57pm",
      "content": "Goran asked: <cite>Is this, generally speaking, how it works with hints? Is it a compromise where you choose crispy looking letters on screen before letterforms that stay proportional (as they do if you don’t hint them).</cite>\n\nYes. That is, the whole purpose of hints is to distort the letterforms in favor of some higher purposes such as stroke consistency or legibility or what-have-you.\n\nIf you experiment with BlueScale a bit, you'll soon find that with pretty much every typeface, there will be some specific ppem size (or range of sizes) for which it looks bad if you allow overshoot, and it looks bad if you suppress overshoot, and you just have to decide which is worse.\n\nOf course, with rendering technologies and screens having improved, it is at least plausible to think about foregoing hinting altogether. There was a time when that was not the case.\n\nRaph wrote: <cite>Hinting is a transitional problem, only useful as long as we have low resolution displays.</cite>\n\nAgreed. Once displays get up around 400+ dpi, hinting will become pretty unimportant. Even 200 or 250 dpi will make hinting a lot less critical. Mind you, I wonder if really basic displays on newly-enabled devices will get those resolutions as soon as our computers and cell phones: will your fridge, toaster, range and microwave all have high-res displays? If not, hinting may be with us for longer than we think, just important on a different class of devices.\n\nGuifa wrote: <cite>Sometimes OS X’s hinting can be somewhat shoddy.</cite>\n\nOS X is doing rasterizing (rendering), not hinting. Hinting is what goes into the font, and rasterizing is the process of taking that hinted font and turning it into a pattern of pixels on screen or dots in print.\n\nSorry for being picky about the terminology, but this stuff is plenty complicated even when we're using the right terms for things!\n\nCheers,\n\nT\n\n"
    },
    {
      "time": "19 Feb 2007 — 4:28am",
      "content": "Thomas,\n\nThanks very much for your input.\n\n"
    }
  ]
}

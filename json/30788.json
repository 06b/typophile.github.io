{
  "id": "30788",
  "title": "FL vertical spacing",
  "forum": "Design",
  "tags": [
    "Design"
  ],
  "content": "Is there a nice, visual way of adjusting default line spacing [edit: line height], similar to the method of adjusting horizontal metrics?\n\n",
  "author": "Choz Cunningham",
  "time": "22 Jan 2007 — 10:04am",
  "uid": "13605",
  "comments": [
    {
      "time": "22 Jan 2007 — 10:48am",
      "content": "Which software are you using? And are you referring to word spacing (H&Js) or leading? If the latter, you can adjust your default in Preferences \\> Paragraph (in Quark - I don't know how in InDy)\n\n"
    },
    {
      "time": "22 Jan 2007 — 11:01am",
      "content": "I'm not positive, but I think Chos is asking about setting the default leading value within the font itself (hence \"FL\" = FontLab). I'm curious about this myself as I'm not sure if the default leading is built into the font, or if InD/Quark simply uses a standard leading for any given type size. It seems to me it would be the former, as I've used fonts that seem to have insanely generous leading settings which need to be over-riden in InD.\n\nI'll be interested to see replies to this post from those more type-design/development inclined.\n\n"
    },
    {
      "time": "22 Jan 2007 — 11:04am",
      "content": "I mean in the design of a font file itself. FontLab.It allows a number of ways to set up the metrics of a glyph, and to drag n' drop things. But at this point I seem to only be able to set up the leading by typing in numbers, rendering font, testing, changing numbers, rendering, testing. Due to a large funky 'f', I need to fiddle with things, 'til they are just so.\n\n"
    },
    {
      "time": "22 Jan 2007 — 11:04am",
      "content": "Quark has a default setting of 20% which you can adjust. No idea what InDy's calculation is. It does not seem to be built into the font.\n\n"
    },
    {
      "time": "22 Jan 2007 — 11:09am",
      "content": "Manual control of the default leading (I prefer the term line-spacing in digital work) is prepared for various operating systems' font renderers by the font itself, through the the \\*ascent, \\*descent, and similar font tables. As near as I can tell, there's a seperate set of figures for Windows, Mac, and OpenType. Which are all calculated differently. Its a backward-compatability induced pain.\n\nIf anyone knows otherwise, feel free to correct the above guess.\n\n[http://en.wikipedia.org/wiki/Leading](http://web.archive.org/web/20141028122345/http:/en.wikipedia.org/wiki/Leading \"http://en.wikipedia.org/wiki/Leading\")\n\n[edit] According to this, I'm looking for a way to visually adjust line height, not leading.\n\n[Choz Cunningham](http://web.archive.org/web/20141028122345/http:/www.chozcunningham.com/)  \n [!Exclamachine Type Foundry](http://web.archive.org/web/20141028122345/http:/www.exclamachine.com/)  \n [The Snark](http://web.archive.org/web/20141028122345/http:/www.exclamachine.com/snark)\n\n"
    },
    {
      "time": "22 Jan 2007 — 11:12am",
      "content": "_Quark has a default setting of 20% which you can adjust. No idea what InDy’s calculation is. It does not seem to be built into the font._\n\nI think there is a default that generic apps use, but that Quark and CS apps \"do their own thing\" much like they do with metrics, smoothing, OT features, and so forth.\n\n"
    },
    {
      "time": "22 Jan 2007 — 11:25am",
      "content": "Several pieces of information are in the font concerning vertical metrics, and different programs and platforms use these pieces of information differently.\n\nHere is an explanation of it all by John Hudson:\n\n[http://typophile.com/wiki/Vertical%20Metrics%20How-To](http://web.archive.org/web/20141028122345/http:/typophile.com/wiki/Vertical%20Metrics%20How-To \"http://typophile.com/wiki/Vertical%20Metrics%20How-To\")\n\nWarning: you are about to descend into font programming hell, with conflicting legacy specs, official standards that are not actually standards, etc., etc.\n\n"
    },
    {
      "time": "22 Jan 2007 — 11:37am",
      "content": "_\"font programming hell\"_\n\nI've noticed the flames. Being as this will be my first mass market font, I think I've got to grin and face it. Not that I am above cheating. :) Is there any application, even standalone, that (relatively) smoothly glosses this over and generates the happy math, automagically?\n\n"
    },
    {
      "time": "22 Jan 2007 — 12:18pm",
      "content": "The link William posted is the best one to look at. \"TypoLineGap\" is the item but each software package that you use to output may have a different notion of what to do with it. Twenty-percent is a good rule of thumb but when you have ascenders and decenders pushing beyond, you get some weird stuff to deal with. Compare a script flourished like Kunstler or Bickham with Helvetica Neue and see the difference.  \nUsers who regularly use the \"Auto\" leading are not the most typography savvy. Most often, experienced typographers will set leading exactly to the quantity that suits their job at hand. Line length and H&J are factors too. Longer lines tend to need more leading. Auto rarely fits the bill. There is no magic bullet to test. I set up a file with assorted leadings, line lengths, and sizes to test a typeface. After setting up the file, I change the typeface to whatever I am testing and reprint it every time I make a revision to the font. You can compare the effect of your modifications this way.\n\nChrisL\n\n"
    },
    {
      "time": "22 Jan 2007 — 2:05pm",
      "content": "I am no FontLabber, but can't you just increase the body size without changing the glyph shapes to increase the effective linespacing?\n\n"
    },
    {
      "time": "22 Jan 2007 — 2:25pm",
      "content": "\"Is there a nice, visual way of adjusting default line spacing [edit: line height], \"\n\nNice, maybe, maybe not, but you open key glyphs in a metrics window, make the line break as many times as you need to see line spaces, and fiddle with the numbers in the font info panel/metrics and dimensions until satisfied.\n\n( I think FL displays what the font contains for line spacing, doesn't it?)\n\n"
    },
    {
      "time": "22 Jan 2007 — 2:25pm",
      "content": "\"Is there a nice, visual way of adjusting default line spacing [edit: line height], \"\n\nNice, maybe, maybe not, but you open key glyphs in a metrics window, make the line break as many times as you need to see line spaces, and fiddle with the numbers in the font info panel/metrics and dimensions until satisfied.\n\n( I think FL displays what the font contains for line spacing, doesn't it?)\n\n"
    },
    {
      "time": "22 Jan 2007 — 2:27pm",
      "content": "It appears I had the ascender wrong, b/c FonLab wants to grab dimensions from the 'b'. Now that I've adjusted it to the 'f', I've got to go make all the numbers fit again. I will try finding/adjusting the body size, however.\n\n"
    },
    {
      "time": "22 Jan 2007 — 2:37pm",
      "content": "\\>can’t you just increase the body size\n\nYou can always rescale the glyphs relative to the em, but that's only part of the story. InDesign, things are clear: it will scale em to the size specified, put the top of the ascenders at the top of the text box, and the next line below that exactly at the body size plus the leading you have specified--with a default of 20% of em leading. In Word and other word processing programs there are different defaults, and I understand these are based partly on the line gap information you specify.\n\nHere the problem is of setting a default--a default that won't cut off the extenders or diacritics, but will also not give too much leading, and across different platforms and applications. And the problem is that you don't have full control because the application will take your information and do with it what it wants. --And then the user can vary that. So you just want a default that a. people won't find weird and b. makes sense for your font.\n\nFor information on best practices for getting a good default across platforms and applications--oh and font formats too--take John Hudson's fun vertical metrics hell ride on the typowiki.\n\nEdit: I just saw David's post, which tells you how to look at the default with zero leading in FontLab. (\\n makes a new line) The technical complications have to do with the 'line gap' stuff, and the impact of that on defaults in word processors, and on different platforms etc.\n\n"
    },
    {
      "time": "23 Jan 2007 — 11:59pm",
      "content": "Word doesn't care what line gap information you put in; it uses the font BBox as represented by usWinAscent and usWinDescent (which you need to make equal to the BBox if you don't want clipping in GDI applications).\n\nThere are a bunch of different vertical metrics, and a bunch of different ways applications use them. It is literally not possible to get consistent and desirable line spacing across all common applications across platforms. So you have to decide what compromises you want to make. :(\n\nCheers,\n\nT\n\n"
    },
    {
      "time": "24 Jan 2007 — 6:08am",
      "content": "Thanks for the correction and clarification Thomas.\n\n"
    },
    {
      "time": "24 Jan 2007 — 6:37am",
      "content": "\\> Is there a nice, visual way of adjusting default line spacing [edit: line height], similar to the method of adjusting horizontal metrics?\n\nPlease don't. As a designer, I want that control, not to have it built into a font. You get to decide the design esthetics within the point size (ascender, descender, and x-height). I get to decide how much space should be added between lines. Do your job well, and I promise I will do mine as well as I can.\n\n"
    },
    {
      "time": "24 Jan 2007 — 8:04am",
      "content": "see also  \n [Vertical Metrics How-To](http://web.archive.org/web/20141028122345/http:/typophile.com/wiki/Vertical%20Metrics%20How-To)\n\n"
    },
    {
      "time": "24 Jan 2007 — 8:26am",
      "content": "\\>Please don’t\n\nDon, type designers don't have a choice, we have to set defaults. Then you can vary it as you like--it won't limit you.\n\nIf you are interested--and I don't recommend it if you don't have to!--you can work through the typowiki article, linked by Paul, and me in my first post here.\n\n(I promise to re-read it soon :)\n\n"
    },
    {
      "time": "25 Jan 2007 — 10:44am",
      "content": "Depends how your typeface looks like. Does it have extremely long ascenders and descenders, or modest ones?\n\nAll is said in John Hudson's \"How To\" (Paul Hunt's link), but I'll emphasize two things:\n\nYou should define [OS/2] usWinAscent and usWinDescent such that the values equal or exceed the longest ascender (or accent) in the font, and the longest descender (or accent) in the font.  \nSame for [hhea] Ascender and Descender.  \n[Footnote to Thomas Phinney's post: BBox holds information about longest ascending and longest descending of glyph outlines found in the entire font.]  \nThis because: If the former values are too small, parts of glyphs that are larger than that may be clipped in some applications. If the latter values are too small, glyphs may be squashed in some older Mac applications -- funny effect but not desired.\n\n[OS/2] TypoAscender and TypoDescender should, together, make the UPM value. (This is not a must, though.)  \nThis also means: if you begin designing/digitizing a typeface, you should <cite>at first</cite> measure its glyphs carefully, and make sure that <cite>average</cite> ascenders and descenders (as of \"h\", \"l\", \"j\", \"p\") fit, with a little additional space, into the UPM. Which usually but not necessarily equals 1000 in PS-outline fonts.  \nFor the few apps which calculate line spacing based on TypoAscender and TypoDescender, you now have defined the minimum line spacing.\n\nOne more note: If you deal with a family, you should calculate values based on the style with the largest ascendings/descendings, and use these values for all family members. In case someone relies on default line spacing, you would not want that this changes if some lines are set in Bold only and others in Italics only ...\n\nAnother description is [here](http://web.archive.org/web/20141028122345/http:/www.kltf.de/downloads/FontMetrics-kltf.pdf), slightly different but in the essence it's the same as John Hudson's. The example on page 3 may demonstrate that it is not that complicated.\n\n"
    },
    {
      "time": "25 Jan 2007 — 10:56am",
      "content": "Thanks Karsten!  \nAs usual, your posts are very helful and informative.\n\nChrisL\n\n"
    },
    {
      "time": "26 Jan 2007 — 1:44pm",
      "content": "Love the graphics in your link, Karsten--they make it much simpler to understand. Thanks!\n\n"
    }
  ]
}

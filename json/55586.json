{
  "id": "55586",
  "title": "A (very) simple question about OpenType Stylistic Sets",
  "forum": "Build",
  "tags": [
    "Build"
  ],
  "content": "Although I have read about the issue occasionally in a few threads, I am unsure about this question:  \nStylistic sets are ideally created to address a range of glyphs substitution, and I also think it works better to use them for full range substitutions (i.e. Swashed forms, Mediaeval forms, etc.)  \nInversely, I may just wish to have a single alternate glyph, which may allow the user to have – let's say — a more traditional [t] than the one I have decided to be standard.\n\nIn these cases, how do you think it's better to place that simple alternate?  \nI know some designers (for example, Karsten), like the idea of using Stylistic Sets as well, even for a single glyph, but I'm not so attracted by this \"multiplication of the sets\"… :)  \nWould it be fine to use [salt], or maybe I could just include the glyph and not address the automatic handling of the substitution?  \nAfter all, in lead we just entered the single alternates manually… :=)\n\n",
  "author": "piccic",
  "time": "6 Mar 2009 — 11:08am",
  "uid": "1316",
  "comments": [
    {
      "time": "6 Mar 2009 — 8:45pm",
      "content": "In my experience typesetting things with alternate glyphs I found it incredibly useful to be able to access each alternate in separate stylistic sets. So your t.alt would go in Stylistic Set 1, a Q.alt in Stylistic Set 2, etc.\n\nThis allows for someone to easily select a block of text and toggle each alternate individually. You should do it this way, unless there's a conceptual reason to group things together in a single feature. Or unless someone with actual technical knowledge of proper opentype etiquette wants to weight in.\n\n"
    },
    {
      "time": "7 Mar 2009 — 3:36am",
      "content": "Thank you. As I said, Karsten Lücke is in favor of the option you suggest, but I'm not the number one supporter of excessively automated things, since they tend to compensate a lack of professional skills which you should acquire to lay out a page, no matter if you see it as a \"graphic designer\", graffiti artist, stonecarver or plain street guy.  \nI already have conceptual sets, but when it comes to single glyphs I think the ability to access them relies also on how good is your layout software (and interface).\n\nSo I'd like to hear the procedures of others to see how they behave when there is a single (or few) alternate glyphs which by no means represent a stylistic set, but just a viable alternate form.\n\n"
    },
    {
      "time": "7 Mar 2009 — 5:08am",
      "content": "As primarily a type user, I use the stylistic sets for single glyphs when I want them \"on\" or \"off\" always in a text. For example, I usually draw up an alternate old style \"1\" for fonts where the os \"1\" looks like a small-cap \"I\". If I don't, sure as shootin there will be an editor who insists on not using os figs at all, because of that \"1.\" That alternate \"1\" goes in a stylistic set, which will be on for the whole job; I'll switch it on in the basic paragraph on which all other paragraphs are based.\n\nThough it is a set of two, I've also taken to making angle brackets for text fonts. I have a stylistic set where I switch them with the greater and less glyphs. The reason is, many text's have URLs where the author insists on using the form \\<http\\> as a part of the reference. So, for the bibliography paragraph style, I'll switch on that set & not think twice. If the text proper has such constructions, you have to search the text & make sure that \"greater\" and \"less\" aren't used mathematically. If not, again, I'll switch on the set in the basic paragraph style.\n\nOn the other hand, glyphs intended for occasional use should probably not be a part of a stylistic set, but placed by the compositor by hand. An obvious example would be swash letters, though that's handled by a separate feature.\n\nFor me, it is a matter of how stylistic sets are best used, not \"how many\" members a set has.\n\nFWIW\n\n"
    },
    {
      "time": "7 Mar 2009 — 7:26am",
      "content": "So are you saying for each 'alternative stylistic character' (stylistic A, or a stylistic O), it should be placed in a separate set (SS01, SS02)?\n\nI always wondered about that… if multiple characters are in one set the user might only want one activated over the other, no problem if it's a small amount of display text to edit but for large bodies of text having to turn on a stylistic set, only to go back through and deactivate a specific character within that set would be a lot of work.\n\n"
    },
    {
      "time": "7 Mar 2009 — 10:51am",
      "content": "Charles, that's interesting. So it is the old style 1 and not the old style \"ring\" 0 that's the problem for some editors?\n\nHere on Typophile some folks have strongly objected to the ring old style zero on aesthetic grounds. But they don't usually mention the one, which looks like a small cap I, as you say.\n\nI have just completed doing small caps figures, and in the process have finally understood the logic behind the design of the old style 0 and 1. --The clue was that I needed to narrow the old style 2 to make it harmonious with the regular, narrow 0 for the small caps, as opposed to old style figures.\n\nBy hanging the 34579 and raising the 68, the oldstyle design enables the part of the figure between the base line and x-height to have a width and color similar to the lower case letters, and still look properly proportioned to be recognizable. That's why they fit so well with text.\n\nThe 012 pose problems. You can make the 2 wide and be still recognizable, which is what is normally done. You could also make the top into an ascender, which I think a few typefaces do.\n\nMaking the 1 like a small cap I enables you to stretch the serifs, and push it wider than the one with a barbed top, so it fits better with the other letters and still looks not too bad. And after all it is differentiated from the lower case i and the cap I, so it works in text.\n\nMaking the 0 wide, as the design concept demands visually, can confuse it with the lower case 'o'. Hence the 'ring' or relatively unstressed zero solves the problem by avoiding confusion and keeping the width. I think the ring 0 can also look decent by 'cheating' and making it a bit oval instead of circular, and a bit stressed. There are more difficulties, as people here have pointed out, with heavier weights--which old style fonts originally didn't have.\n\nBut what I am realizing is that because there is no ideal solution you have to choose your poison, so to speak. If you have a wide stressed 0 it is going to be confusable with the 'o'. If you have the barbed 1 it is going to look less harmonious with the other old style figures.\n\nTo get around to the point, I think that if you have old style figures, particularly in a seriffed font, the situation argues for putting both an alternative old style barbed 1, and alternative stressed, wide old style zero each in its own stylistic alternative set. Then people can choose among four options, and \"sei gesunt\", go off in good health.\n\nPersonally, I prefer the original old style design, but then [I'm old fashioned.](http://web.archive.org/web/20150418010810/http:/www.youtube.com/watch?v=gYXHeP9PydQ)\n\n"
    },
    {
      "time": "7 Mar 2009 — 12:39pm",
      "content": "<cite>Charles, that’s interesting. So it is the old style 1 and not the old style “ring” 0 that’s the problem for some editors?</cite>\n\nYes. The ring zero, or worse, the reverse-stress \"Stempel\" zero are problems for graphic designers, but usually not editors. Most of the designers I know just avoid a font if they can't abide a glyph, editors are different creatures. And it is a little different, as there are those lining numbers for the editors latch on to.\n\nI have been known to make up alternate zeros as well, for the few designers that ask. I don't countenance the argument that a zero that looks like a lower-case \"oh\" is confusing, for the simple reason that you almost never see an \"oh\" in the middle of a string of numbers. And in the style we usually (have to) follow, single-digits are usually spelled out, so you don't see just a zero by itself.\n\nTo somewhat tie this in to the original question, I suppose I'd put an alternate zero in a stylistic set by itself.\n\nI'm more sanguine about alternate alphabetical characters -- the only one's I can thing of off-hand would be lower-case a (one & two tiered), and maybe the lower case g & y. If you're going to switch the g & y, with most designs it is best to do them together.\n\nI do think a text typeface with too many alternate glyphs is just a real chore to use. You have to hope the font designer provided adequate notes with the font. In any case, if all those 20 stylistic sets are filed up, using the font is going to get confusing unless there is a real logic to it all. Display type could be a different matter, but then why not just get the glyphs from the glyph pallet where you can (somewhat) see what you are doing?\n\n"
    },
    {
      "time": "7 Mar 2009 — 1:02pm",
      "content": "Charles, I think you are right practically that the 0 comes in the middle of other figures, and so is not confusing. The same argument applies to the 1, though, so in theory editors should not be bothered by the small cap 'I' style.\n\nAs to the O being confused with the o, I'd have to check, but IIRC originally they made the 012 exactly at x-height, not bigger as we do now, so then it was more of a problem. Here in Georgia you don't notice any problem. But when the year 2010 comes, maybe true old style will look better?\n\nBy the way, I suspect hinting makes the 0 and o of Georgia look more different in size here on the screen than they do in print.\n\n"
    },
    {
      "time": "7 Mar 2009 — 1:31pm",
      "content": "Originally, when stylistic sets were conceived, the authors of the OpenType specification throught that they should be mutually exclusive. And indeed, in the user interface of Mac OS X (the Typography palette), they are accessible through a series of mutually-exclusive radio buttons.\n\nBut in Adobe InDesign, the user interface treats them as additive, so the user can enable ss01 and ss04, for example, at the same time. And there have been more and more fonts that make use of this notion. I myself am a proponent of that approach as well — or at least, of the notion that it should be up to the type designer to choose whichever method works for him best.\n\nI guess a sensible principle is: one stylistic set should substitute glyphs that should be substituted together (at the same time).\n\nWhatever that may mean in practice. In some cases, it may mean that an entire alphabetic range is substituted by one ssXX feature, especially if the type designer thinks that mixing glyphs from different sets does not make much sense. But if your design has an alternative \"R\", an alternative \"K\" and alternative \"M\", and each of those glyphs is in a way independent of the others, so selectively substituting them one by one does make sense design-wise, I would then by all means put them into separate sets.\n\nAs far as salt vs. ssXX is concerned, I've outlined my view here:  \n [http://typophile.com/node/17887](http://web.archive.org/web/20150418010810/http:/typophile.com/node/17887 \"http://typophile.com/node/17887\")  \n [http://typophile.com/node/32399](http://web.archive.org/web/20150418010810/http:/typophile.com/node/32399 \"http://typophile.com/node/32399\")\n\nBest,  \nAdam\n\n"
    },
    {
      "time": "7 Mar 2009 — 1:58pm",
      "content": "And should you feel experimental, here's some ideas for you:\n\n`feature ss01 {\nsub a by a.ss01;\n} ss01;`\n\n`feature ss02 {\nsub a.ss01 by a.ss02;\nsub b by b.ss02;\n} ss02;`\n\n`feature ss03 {\nsub a.ss02 by a.ss03;\nsub b.ss01 by b.ss03;\nsub c by c.ss03;\n} ss03; `\n\nWhen `ss01` is enabled, `a` will be replaced by `a.ss01`.\n\nWhen `ss02` is enabled, `b` will be replaced by `b.ss02`.\n\nBut if `ss01` and `ss02` are enabled at the same time, `b` will be replaced by `b.ss02` but `a` will be replaced by `a.ss02` rather than by `a.ss01`.\n\nIn other words, you can design your stylistic sets so that something happens on ss01, something else happens on ss02 and something yet different happens on ss01+ss02.\n\n`feature ss01 {\nsub a by a.ss01;\nsub d by d.ss01;\nsub g by g.ss01;\n} ss01;`\n\n`feature ss02 {\nsub b by b.ss02;\nsub e by e.ss02;\nsub s by s.ss02;\n} ss02;`\n\n`feature ss03 {\nsub c by c.ss03;\nsub f by f.ss03;\nsub w by w.ss03;\n} ss03; `\n\n`feature calt {\n  sub [a.ss01-z.ss01] [a-z]' by [a.ss01-z.ss01];\n  sub [a.ss02-z.ss02] [a-z]' by [a.ss02-z.ss02];\n  sub [a.ss03-z.ss03] [a-z]' by [a.ss03-z.ss03];\n} calt;`\n\nDoesn't make so much sense by itself but illustrates the idea that the stylistic sets by themselves can perform some actions but they can also trigger different behaviors of, say, the \"contextual alternates\" feature, so in essence, you could have different \"branches\" of contextual behaviors implemented that way.\n\nBTW, you can even implement separate contextual behaviors within each ssXX feature. The ssXX features do not have to be simple \"a by a.1, b by b.1\" substitutions.\n\nRegards,  \nAdam\n\n"
    },
    {
      "time": "7 Mar 2009 — 2:31pm",
      "content": "That gets interesting creating the behaviors with it, didn't realize that was possible, so you basically override the previous set behavior as each additional set is activated depending on how you set it up… thanks for the reply… good information…\n\n"
    },
    {
      "time": "7 Mar 2009 — 2:55pm",
      "content": "_\"In other words, you can design your stylistic sets so that something happens on ss01, something else happens on ss02 and something yet different happens on ss01+ss02.\"_  \nThat looks very exciting! I didn't think that was possible.  \nOne question from the newbie fraction though: don't many users think of stylistic sets as purely additive and somewhat static, and wouldn't one risk terminally confusing some of them by introducing this kind of cross referencing between stylistic sets? Also because that would imply that as a curious user, you wouldn't just want to try out the 20 stylistic sets in isolation, but also all possible combinations between them – which would probably warrant a rather large manual, or require a \\*lot\\* of time playing around with the font.\n\n"
    },
    {
      "time": "7 Mar 2009 — 3:15pm",
      "content": "'So it is the old style 1 and not the old style “ring” 0 that’s the problem for some editors?'\n\nIn my experience, the 1 has always been the reason an art director has requested lining instead of old style figures. In some cases this has required changing the font entirely. I've never had a problem when the 1 has a flag serif instead of the I though, and in some cases I've gone as far as substituting a more contemporary 1 from a similar font just to get the design approved.\n\n"
    },
    {
      "time": "7 Mar 2009 — 5:45pm",
      "content": "<cite>I’ve never had a problem when the 1 has a flag serif instead of the I though . . .</cite>\n\nHow about the abbreviation for \"Interstate 10\", using small caps & os figs?\n\n"
    },
    {
      "time": "7 Mar 2009 — 7:36pm",
      "content": "Adam: _But in Adobe InDesign, the user interface treats them as additive, so the user can enable ss01 and ss04, for example, at the same time. And there have been more and more fonts that make use of this notion. I myself am a proponent of that approach as well — or at least, of the notion that it should be up to the type designer to choose whichever method works for him best._\n\nI agree with the sentiment of allowing the type designer to choose whether the ssXX features should be additive or exclusive, but I can't figure out how to make them truly exclusive within the InDesign UI model. One can make the lookups map variants from all sets to the specific stylistic set variants, but the order of the lookups still means that if more than one feature is turned on the later-processed lookups will override the earlier ones, regardless of the order in which the user has turned the features on. So, presuming lookup order follows feature order, if the user turns on stylistic set 7 in the InDesign UI, and then turns on stylistic set 4, the stylistic set 7 glyphs will still display, because that lookup is processed after the stylistic set 4 lookups.\n\nSo the user, not the type designer, is ultimately responsible for making the sets exclusive through selection of only one feature at a time.  \n\\_\\_\\_\n\nRegarding use of stylistic set features to implement changes to single glyphs, rather than to sets of glyphs such as alphabet subsets: this is not what I had in mind when I defined the stylistic set features, and this is also why there are only twenty such sets. If one wanted to use stylistic sets to mix and match different variants of individual glyphs one would quickly run out of features.\n\nPeter Constable at MS, working with his former colleagues at SIL, have been working on a feature spec for a hundred character variant features.\n\n"
    },
    {
      "time": "8 Mar 2009 — 5:51am",
      "content": "<cite>Peter Constable at MS, working with his former colleagues at SIL, have been working on a feature spec for a hundred character variant features.</cite>\n\nThis were nice to have and to see it supported in applications. I am very curious for the interface which can give access to so many alternates!\n\n"
    },
    {
      "time": "8 Mar 2009 — 8:12am",
      "content": "Charles, your arguments and those of others here have converted me. I do think that the small cap \"I\" style is good aesthetically, but if it's increasingly alienating to editors and some readers, that's for me a decisive argument against making it the default style. And the current old style numbers being above x-height makes the stressed 0 sufficiently different from the o.\n\nSo now I'm thinking that the best thing is to follow the lead of this font, Georgia, and use the stressed 0 and barbed 1 as default. I will put the classic style zero and one in an ss00 style group for those who want the traditional look on their old style figures.\n\n"
    },
    {
      "time": "8 Mar 2009 — 1:15pm",
      "content": "Charles\\_e said: <cite>I don’t countenance the argument that a zero that looks like a lower-case “oh” is confusing, for the simple reason that you almost never see an “oh” in the middle of a string of numbers<cite></cite></cite>\n\nAn aside: in Spanish, “o” is the equivalent for the English “or”, so it is possible to see a sequence like “1 o 2”, (i. e., “one or two”) and some people could read it wrongly as “one zero two” or, if the space between numbers is not big enough, “one hundred two”.\n\nI hope it will never happen to a doctor reading the dose he should give to his patient. :S\n\n"
    },
    {
      "time": "8 Mar 2009 — 5:05pm",
      "content": "OK, good reason to have the zero look different from the \"oh.\" Can be fatter with fonts that have a narrow \"oh\", narrower with fonts having a wide \"oh\" -- like Hypatia sans.\n\n"
    },
    {
      "time": "8 Mar 2009 — 7:14pm",
      "content": "Charles, I wish it were that easy to solve--making the old style 0 proportionally much wider or narrower than the o. The problem is that going too much one way or the other and the old style figures--and the 0 needs to be harmonious with the rest of them--won't fit in as well with the text, which is sort of their whole point.\n\n"
    },
    {
      "time": "9 Mar 2009 — 9:47am",
      "content": "Wow, great response, thank you! :=)\n\nI guess Adam has addressed the core of my question, but I'll be back to read in full later on…\n\n<cite> BTW, you can even implement separate contextual behaviors within each ssXX feature. The ssXX features do not have to be simple “a by a.1, b by b.1” substitutions. </cite>  \nHo do you do that, and which would be an interesting use?  \nI mean, addressing ligatures is already a sort of \"contextual\" behaviour within sets, since the more complex they are, you have to address them first (if I recall correctly, heh I'm still a novice…)\n\nGreat question about the OsF [1] as well. Later…\n\n"
    },
    {
      "time": "9 Mar 2009 — 11:51am",
      "content": "About the use of [salt], assuming I am limiting its use to spare glyphs, which is the usefulness of a similar code:\n\n` sub b from [b.1 b.2 b.3]; `\n\nI ask because I have never used other applications than InDesign and basic Apple apps, and I can't figure out precisely how the three [b] variants are accessed in this way.\n\n"
    },
    {
      "time": "9 Mar 2009 — 1:47pm",
      "content": "Addenda: After creating a set for my alternate [t], I have re-read the thread Stylistic Alternatives, and Thomas Phinney's words:\n\n<cite> Mark et al: Personally, I would not consider it egregious to have a stylistic set that only affected one glyph. I do think it would be a really bad idea to put completely unrelated things in a single stylistic set, as the whole point of a stylistic set is to get a consistent look, and it’s meant to be applied globally.<br>\nAlso of note is the idea that ’salt’ is meant to be applied on a single character at a time, and implies a UI that allows the user to pick which alternate they want for the character being affected.</cite>\n\nAnd once again I became undecided where to put my alternate [t]… LOL\n\nBeing a single letter it's not a \"stylistic set\" (although that [t] is _also_ part of a Set where all letters are substituted, but this is not the key).\n\nOn the other hand if [salt] is meant to be applied to a single character at a time, what happens when it contains various character substitutions? If I use [salt] for the [t], I will have it currently inaccessible in InDesign, and then if another single alternate needs the same treatment what should I use?\n\nNow I wait for Adobe and Microsoft to tell me what I should do… :P  \n(not a thing that over-worries me, in the end I think I will end up putting it somewhere just to have it addressed by [aalt]).\n\nOr maybe I'm just not done for the code… :P\n\n"
    },
    {
      "time": "9 Mar 2009 — 2:12pm",
      "content": "_I ask because I have never used other applications than InDesign and basic Apple apps, and I can’t figure out precisely how the three [b] variants are accessed in this way._\n\nThe idea behind OT one-to-one-of-many enumerated substitutions is that an application could provide a dynamic mini-palette of variants for the user to select from. So, for instance, you would select a character, apply the [salt] feature, and up would pop a little palette showing the variant forms available for that character. This is similar to some of the input method editors for Chinese characters, in which one types a series of phonetic characters and is presented with a palette of the possible Chinese characters.\n\nI'm not sure if anyone has actually tried to implement this aspect of OT in a UI. Perhaps Apple? It would adapt perhaps more easily to their approach to typographic feature menus than to some others.\n\n"
    },
    {
      "time": "9 Mar 2009 — 2:33pm",
      "content": "Thanks John, I guessed that. This reinforces my idea that, as of now, the [salt] feature is not so useful, unless the user interface will provide this.  \nDo we have to wait some Italian developing a Tasmeem-like software for setting advanced Cancelleresca to have these luxuries in Latin? :=)\n\n"
    },
    {
      "time": "9 Mar 2009 — 4:32pm",
      "content": "_Regarding use of stylistic set features to implement changes to single glyphs, rather than to sets of glyphs such as alphabet subsets: this is not what I had in mind when I defined the stylistic set features, and this is also why there are only twenty such sets._\n\nJohn, what exactly did you have in mind? Can you give a specific example? The examples in the spec (Poetica and Zapfino) are very general.\n\nAs I understand it, a stylistic set is a set of alternate glyphs that changes the appearance of a typeface when they are used. I don't see any logical reason why such a set could not consist of a single glyph (possibly including its related variants such as accented forms) as long as it changes the appearance of the typeface when it is used. The fact that there are only twenty possible sets does not necessarily have a bearing on this issue, unless you have more than twenty alternate glyphs that you want to use in this way.\n\n"
    },
    {
      "time": "9 Mar 2009 — 5:10pm",
      "content": "What I had in mind when spec'ing the Stylistic Set features, and discussing them with folk at MS and Adobe, were exactly typefaces like Zapfino and Poetica in which there are sets of variants that a) are harmoniously consistent with but distinct from the other sets and b) harmoniously consistent within themselves. If you consider the sets of Poetica letters with formata and corsiva extenders, you have a pretty good idea of what I had in mind. At the time, we had recently worked on the Apple version of Zapfino, and knew that Linotype would want a mechanism to address the variants in an eventual OT version, and that Adobe were facing similar needs for Poetica and perhaps some other designs.\n\nOf course, the definition of what constitutes a ‘set’ for such purposes is vague or, rather, design-specific. I wouldn't try to assign a minimum a quantity of glyphs, but would try to rationalise sets in terms of consistent variation of related shapes or concepts, e.g. ascenders, descenders, terminals, single- vs double-storey a and g, etc. Obviously, what happens to a base letter may be expected to carry across to diacritic forms of that letter, but these would not necessarily constitute a set to my way of thinking, unless the base letter varied in some unique way that was not applicable to any other letter.\n\nSome of my colleagues very quickly adapted the stylistic set features to access more finely granulated and additive variation, facilitating easy mixing and matching of variants of individual letters. I can't blame them because there were no similarly useful and widely supported layout features specifically for individual characters. But I knew it would only be a matter of time before the limit of 20 stylistic set features became an issue for such usage, and I'd say that this became a significant problem for some in 2008. For example, SIL are developing fonts for large numbers of languages with fluid orthographic norms and inconsistent interpretation of letter shapes, so they need a mechanism to allow users to mix and match desired forms for individual characters. Critically, the variation in forms is not a consistent stylistic feature applied across related shapes, but fundamental inconsistency in the shape of letters that Unicode considers a single character. They already have defined more than twenty such variations. Another example is that of the very complex OT Arabic font being developed by Idris Samawi Hamid, which requires a mechanism to mix and match multiple stylistic variants of individual letters in a free way. Again, the number of variants exceeds twenty, and are not classifiable as related sets.\n\nSo we're at a point where one of two things needs to happen: either we massively increase the number of registered stylistic set features, and in the process redefine the purpose of those sets and abandon their original intent, or we register new features specifically to address single character variants and maintain a distinction between that functionality and that of set variation. I favour the latter for a couple of reasons, not least because SIL and MS have already come up with a viable feature spec (including, by the way, name string indexing, allowing font developers to link human-friendly menu names to features, e.g. 'Left hook Y' or 'Right hook Y'; a similar mechanism is spec'd to be added to the existing stylistic set features). The other reason is that rather than having a hundred stylistic set features -- with no very obvious way to tell whether an individual feature applies to a set of letters or to an individual letter--, we would have twenty stylistic set features and one hundred character variant features, _which a font developer could make interactive._\n\n"
    },
    {
      "time": "9 Mar 2009 — 5:17pm",
      "content": "as a graphic designer, i don't mind having just one glyph per stylistic set. especially if i relly want that single story lowercase g, but nothing else, it's a lot easier to make that change globally rather than doing a find/replace.\n\ni like the way Neutraface No. 2 Text handles this (especially cap M, lower a and g).\n\n[http://www.houseind.com/fonts/neutrafaceno2](http://web.archive.org/web/20150418010810/http:/www.houseind.com/fonts/neutrafaceno2 \"http://www.houseind.com/fonts/neutrafaceno2\")\n\n"
    },
    {
      "time": "9 Mar 2009 — 5:46pm",
      "content": "\\>human-friendly menu names\n\nYes!\n\n"
    },
    {
      "time": "9 Mar 2009 — 6:53pm",
      "content": "<cite>so it is possible to see a sequence like “1 o 2”, (i. e., “one or two”) and some people could read it wrongly as “one zero two” or, if the space between numbers is not big enough, “one hundred two”. </cite>\n\nActually, \"1 or 2\" in Spanish would be written \"1 ó 2\" and the accent is placed for precisely this reason.\n\n_«El futuro es una línea tan fina que apenas nos damos cuenta de pintarla nosotros mismos». (La Luz Oscura, por Javier Guerrero)_\n\n"
    },
    {
      "time": "9 Mar 2009 — 6:56pm",
      "content": "Thanks for the explanation, John. It seems that affordances inevitably lead to unanticipated (or unintended) usage.\n\nHypothetically, if a typeface had only one alternate (for example, a normal \"t\" and an alternate \"t\"), would it violate the spirit or letter of the stylistic sets spec to create a set that only affected the \"t\"?\n\nIncidentally, I think the proposed single character variant is a great idea.\n\n"
    },
    {
      "time": "9 Mar 2009 — 8:24pm",
      "content": "Mark: _Hypothetically, if a typeface had only one alternate (for example, a normal “t” and an alternate “t”), would it violate the spirit or letter of the stylistic sets spec to create a set that only affected the “t”?_\n\nI think it would certainly violate both spirit of the stylistic set features, and probably the letter too: I would say of such a font that it has no stylistic sets, and in terms of existing layout features [salt] would be appropriate. But since the [salt] feature is inadequately supported, it is difficult to recommend it.\n\n"
    },
    {
      "time": "9 Mar 2009 — 8:24pm",
      "content": "The human-readable names for stylistic sets are already supported in AFDKO 2.5.\n\n"
    },
    {
      "time": "9 Mar 2009 — 8:28pm",
      "content": "John,\n\n1. How many glyphs is your minimum for a stylistic set?\n\n2. Why, apart from the fact that it has not been originally conceived that way, does having one alternate glyph in a set violate the \"spirit\" of the stylistic set features?\n\nA.\n\n"
    },
    {
      "time": "9 Mar 2009 — 8:30pm",
      "content": "Adam, does that mean you can use them in a font, and Adobe's programs will read them now? Or does it mean that one step toward this has been done?\n\n"
    },
    {
      "time": "9 Mar 2009 — 8:58pm",
      "content": "@William: You can put them in a font. Adobe has not made any statements about when they'll be supported in applications.\n\n@John et aliae: The new character variants are a fine thing in principle. The problem is they require significant UI to work at all, and this means they'll probably never be supported by MS Office or Adobe Creative Suite. At least, \"not in the foreseeable future,\" if \"never\" is too strong a word.\n\nThe problems with 'salt' for this purpose are (1) that it can't be easily applied globally across text for a specific affects, and (2) it doesn't easily do a consistent affect even for a base letter plus its accented variants, or for both the tabular and proportional versions of a number. (There are few basic English letters that don't have accented forms in a reasonably large multi-lingual font.)\n\nI don't have a good solution, really. My personal fallback as a type designer and font developer would be to use stylistic sets for now, while badgering Microsoft and Adobe. But I don't hold out much hope on that latter front. Plus, there's a tragedy of the commons issue: we'd all be best served by getting apps to support the character variants feature, but we'd most effectively pressure the app/OS people by building lots of fonts that use that feature... yet we'd be doing the best thing for ourselves in the short term by ignoring the feature in favor of stylistic sets. Ouch.\n\nCheers,\n\nT\n\n"
    },
    {
      "time": "9 Mar 2009 — 10:20pm",
      "content": "Adam, read my lengthy reply to Mark Simonson. I don't have a quantitative minimum for a stylistic set. The set is a concept, the contents of which are recognisable by their relationships. Since a single glyph possesses no such relationships, it doesn't meet the definition of a set, and I believe that using the stylistic set features for this purpose is a hack response to the lack of a viable alternative feature and UI.\n\nThomas: _The new character variants are a fine thing in principle. The problem is they require significant UI to work at all, and this means they’ll probably never be supported..._\n\nBut this is also true of any extension to the existing twenty stylistic set features (especially if one wants to take advantage of human-friendly name strings), and those have already been demonstrated to be insufficient for single character substitutions. Any advance on the present position will require significant UI, and this may well mean that it doesn't happen, or happens only slowly. But in that case why not spec it the right way? At least we'd be pretty much guaranteed that it will be supported in XeTeX. :)\n\n_yet we’d be doing the best thing for ourselves in the short term by ignoring the feature in favor of stylistic sets._\n\nFor those who want short-term and possibly partial support for character variants via the stylistic set features, there's nothing to stop them implementing substitutions in both those features and the new character variant features. It isn't an either/or situation.  \n\\_\\_\\_\n\nOf course, another approach to this whole issue would be to start defining Variant Selector sequences for common character variant forms and propose them to Unicode. That solution would have the benefits of standardisation and interoperability.\n\n"
    },
    {
      "time": "9 Mar 2009 — 10:58pm",
      "content": "@guifa, who said: <cite>Actually, “1 or 2” in Spanish would be written “1 ó 2” and the accent is placed for precisely this reason.</cite>\n\nYes, I remembered that this morning. I agree with you, but not completely. As Jorge de Buen says in his _Manual de diseño editorial_ (third edition), the accent would only be applied “In the strange case of a conjunction ‘o’ in risk of being confused with a zero” (p. 417). This would be certainly the case.\n\nBut, if there’s no room for confusion (lining numbers, for example), the accent is pointless.\n\nAnyway, I think it is better for everyone to design a zero different from the letter o. Someday your font could find a lazy or ignorant editor or graphic designer. Or maybe simply someone that believes that there’s no such confusion. Or a book that changes from lining numbers to oldstyle numbers in the next edition, &c.\n\nBut maybe we are a little far away from the main subject… A new thread?\n\n————\n\nPS: Actually, the most common option for “1 o 2” is “uno o dos”. ;-)\n\n"
    },
    {
      "time": "10 Mar 2009 — 1:42am",
      "content": "@John:\n\nI wrote: <cite>\"The new character variants are a fine thing in principle. The problem is they require significant UI to work at all, and this means they’ll probably never be supported...\"</cite>\n\nYou replied: <cite>But this is also true of any extension to the existing twenty stylistic set features...</cite>\n\nNo, it is not \"significant UI work\" to extend an existing menu system to support X additional entries that work \\*exactly\\* like the existing entries. No need to consult a UI designer, and the programming can be done in minutes. That's the kind of thing that I would have expected to probably easily get into a new version of InDesign, when I was at Adobe.\n\n<cite>...(especially if one wants to take advantage of human-friendly name strings).</cite>\n\nThat part is true. Getting support for more stylistic sets (in apps that already support them) should be immeasurably easier than getting support for human-friendly names for those sets, or support for the character variants feature.\n\nCheers,\n\nT\n\n"
    },
    {
      "time": "10 Mar 2009 — 7:29am",
      "content": "John,\n\n\\> The set is a concept, the contents of which are  \n\\> recognisable by their relationships.\n\nOh I see. But \"a\" and \"á\" do have that relationship, so if I put the letter and its accented variants into one set, that must be fine, right? :)\n\nA.\n\n"
    },
    {
      "time": "10 Mar 2009 — 8:22am",
      "content": "John: <cite>The set is a concept, the contents of which are recognisable by their relationships. Since a single glyph possesses no such relationships, it doesn’t meet the definition of a set, and I believe that using the stylistic set features for this purpose is a hack response to the lack of a viable alternative feature and UI.</cite>\n\nThank you! Finally you nailed my problem perfectly! :=)\n\nConsidered all that has been said, I have taken my decision:\n\nMy two stylistic sets meet precisely John's definition. Since it's not a \"text typeface\" they even meet it more, as they are conceptual. So they are clearly \"Sets\".  \nI think people may use the Stylistic Set workaround as they wish, until a \"pop-up\" function or a full support of [salt] will be available in UIs (as Karsten does), but I entirely agree it doesn't make sense to consider those \"Sets\", and that it's a potentially confusional method for unlearned type users.\n\nMy additional [t] (which is also part of ss02 but I wished it to be also a single alternative) will go into [salt], together with a few other variants (I have a [G.swsh01], for example), and I will not have a Stylistic Set for any of those.\n\nAdding all the features to [aalt] will make all the variant letters available in InDesign Glyphs palette.\n\nThat should meet Thomas' long-term condition:  \nGetting apps to support the character variants feature, while pressuring the app/OS people by building fonts that use that feature...\n\nNow some questions:\n\n@John: What are precisely the \"new character variant features\" you talked about?\n\n@Adam: How could you possibly use \"human-readable names\" for the Sets if most applications will not show them? If I use FontLab to generate the typeface, is there a way to add those names?\n\nMany, many thanks to you all for the valuable information and for having helped me to clarify the nature of the problem, in my specific situation (\"display\" typefaces).\n\n"
    },
    {
      "time": "10 Mar 2009 — 11:50am",
      "content": "Adam:_Oh I see. But “a” and “á” do have that relationship, so if I put the letter and its accented variants into one set, that must be fine, right?_\n\nNo, because _á_ is just _a_ with a combining mark that has been ambiguously encoded for backwards compatibility reasons. So there!\n\n"
    },
    {
      "time": "10 Mar 2009 — 11:53am",
      "content": "_What are precisely the “new character variant features” you talked about?_\n\nThese are currently being discussed by OT spec stakeholders. They have been proposed by Peter Constable at MS and folk from [SIL](http://web.archive.org/web/20150418010810/http:/www.sil.org/).\n\n"
    },
    {
      "time": "10 Mar 2009 — 4:52pm",
      "content": "The status of character variants is that they are pretty much accepted for 1.6. Who all will support them is another question, but I think the feature will almost certainly happen.\n\nCheers,\n\nT\n\n"
    },
    {
      "time": "10 Mar 2009 — 9:10pm",
      "content": "Thanks, Thomas. I missed the last round of OT 1.6 discussions, so wasn't sure on the status of these features.\n\nHeh: I just noticed the subject line of this discussion. Not such a simple question after all!\n\n"
    },
    {
      "time": "13 Mar 2009 — 7:35am",
      "content": "John:\n\nfirst you wrote:\n\n\\> The set is a concept, the contents of which are  \n\\> recognisable by their relationships.\n\nthen you wrote:\n\n\\> No, because á is just a with a combining mark that has  \n\\> been ambiguously encoded for backwards compatibility  \n\\> reasons. So there!\n\nSo first you say a set are glyphs recognisable by their relationships. Then you say that \"a\" and \"á\" are glyphs that are recognisable by their relationship, which is \"á is just a with a combining mark that has been ambiguously encoded for backwards compatibility reasons\" — to me that is a very recognisable relationship. But then you say, \"a\" and \"á\" are not a set.\n\nI cannot follow.\n\n"
    },
    {
      "time": "13 Mar 2009 — 7:46am",
      "content": "\\> If I use FontLab to generate the typeface, is there  \n\\> a way to add those names?\n\nCertainly not if you use FontLab, as this is an ancient product (ceased to exist with version 4.6), and also not if you use FontLab Studio, as the current version 5.0.4 uses Adobe FDK for OpenType (AFDKO) version 1.6 to generate OpenType Layout features. Support for human-readable names for stylistic sets has been added to Adobe FDK for OpenType 2.5, which has been released only six weeks ago. AFDKO 2.5 will be integrated into FontLab Studio 6, and then you'll be able to add human-readable stylistic set names easily.\n\n\\> How could you possibly use “human-readable names”  \n\\> for the Sets if most applications will not show them?\n\nThe same way people used Unicode in their fonts in 1996 even though most applications did not support it. At some point, applications caught up.\n\nThere is a chain of things that need to happen: first, you need a certain functionality registered in the specification (which is the case now, with OpenType 1.6), then you need an development tool that allows you to add this functionality (AFDKO 2.5, which will be incorporated into FLS6), then you need some fonts that actually have this functionality included (the OpenType fonts that are yet to be developed), and finally you need some applications that expose that functionality (the developers of those apps need some fonts to test the functionality with, so they won't likely develop the functionality without any test fonts in place).\n\nRegards,  \nAdam\n\n"
    },
    {
      "time": "13 Mar 2009 — 8:42am",
      "content": "Hi Adam, thanks for the very clear explanation. For now I will keep my Set names as mere comment tags.\n\nI keep calling FontLab simply FontLab, since \"Studio\" evokes confusion in my mind, as it was my beloved FontStudio (from Ares/Letraset), the program I used before FontLab.  \nYes, of course I'm using FontLab 5.0.4, and I can't wait for version 6. :=)\n\nOn the [a] issue: seriously, I can't understand what you don't understand: [a] and [à] are not \"glyphs in a rleationship\", but the same glyph. The fact they use different Unicode values is probable to make them more easily accessible, but an accent or diacritic does not make a letter turn into another letter.  \nThe relationship within Sets should be somehow intrinsecal, and defined by a principle, be it historical, experimental, cultural, or others. I agree it doesn't need to be a full-range substitution: even a few letters can result in enough context for a Set.\n\nA classic example could be the Italic Set Karsten embedded in Litteratra: here the Italic (which is, in fact, a style more used than others) is treated within the typeface instead of outside.  \nSome people tend to prefer the opposite approach: OpenType or not, styles are considered better accessed as separate font files as it was previously, only with the benefit of Unicode full-range support.\n\nExamples of a more experimental nature could be the four Set variants Nick Shinn has included in Duffy, which they cover all the alphabetic range, and cultural examples may be what House Industries has done with a recent script family which addresses different styles of Latin lettering sourced from varied context of countries and cultural zones.\n\n"
    },
    {
      "time": "13 Mar 2009 — 10:06am",
      "content": "\\> [a] and [à] are not “glyphs in a rleationship”,  \n\\> but the same glyph\n\nThis is the first time ever that I hear such a thing.\n\n\\> an accent or diacritic does not make a letter  \n\\> turn into another letter.\n\nOh? That's news to me. Educate me.\n\nLet's take the letter **n**.\n\nNow let's take the following characters:  \nñ h ń ȷ m ɲ j ŋ\n\nWhich of those characters are \"the same letter as n\" and which are not, and why?\n\nAre the letters H and Ĥ the same letter?  \nAre the letters H and Ħ the same letter?  \nAre the letters L and Ľ the same letter?  \nAre the letters L and Ł the same letter?  \nAre the letters E and F the same letter?  \nAre the letters F and Ƒ the same letter?\n\n(Seriously.)\n\nBest,  \nAdam\n\n"
    },
    {
      "time": "13 Mar 2009 — 12:27pm",
      "content": "Adam, _a_ and _á_ -- and _à â ã ä å_ etc. -- do not form a stylistic set because they are a single letterform with different marks. That they are also separate characters in Unicode and _may_ be rendered using separate glyphs is simply a technical accident. In terms of the stylistic change it is a single substitution: this letterform _a_ to a different form of the same letter.\n\n_Now let’s take the following characters:  \nñ h ń ȷ m ɲ j ŋ  \nWhich of those characters are “the same letter as n” and which are not, and why?_\n\nñ ń are the same letter\n\nh ȷ m ɲ j ŋ are different letters\n\nLet me put it this way: if the relationship between two letterforms is one of _identity_ -- they are identical (not necessarily in the sense of having identical outlines, but of being clearly recognisable as the same form of the same letter) -- then a single stylistic substitution is being performed. If the relationship between two letterforms is that of difference but with some similar features and those features are changed in the same way by the substitution, then you have a set substitution.\n\n"
    },
    {
      "time": "13 Mar 2009 — 12:29pm",
      "content": "_Are the letters H and Ĥ the same letter?_ Yes.  \n_Are the letters H and Ħ the same letter?_ Probably.  \n_Are the letters L and Ľ the same letter?_ Yes.  \n_Are the letters L and Ł the same letter?_ Probably.  \n_Are the letters E and F the same letter?_ No.  \n_Are the letters F and Ƒ the same letter?_ Probably.\n\nWhere I have written yes, it is because the letterform-part of the diacritic is identical and therefore consistently follow the same stylistic variations.\n\nWhere I have written probably, it is because there is an identical relationship between this diacritic and a base letterform in most designs such that a stylistic variant in one would be consistently followed by the same variation in the other; however, in some designs this might not be the case due to idiomatic conventions.\n\nWhere I have written no, it is because there is never a case where these two are considered diacritic forms of the same letterform. They are different letters that share some features in common; hence they are logically put into a stylistic set if stylistic variation modifies these shared features in the same way.\n\nHere is another way to look at it:\n\nImagine all text is subject to Unicode normalisation form D (fully decomposed), and imagine that fonts only use GPOS mark positioning to display diacritic letters. You wouldn't have _a à á â ã ä å_: you would only have _a._ Hence, one can say that there is only a single substitution in stylistic variation of that letterform, not a stylistic set.\n\nOn the other hand, if fully decomposed text still makes a distinction, as it obviously does, between _E_ and _F_, then those are clearly separate letters that, if following the same stylistic variation belong in a set.\n\nThe diacritic letters that do not have canonical decompositions may or may not belong in sets. I argue that if the basic form of the letter is identical to that of another letterform, then they share in a single substitution and not a set substitution. So, for example, a stylistic variation affecting the o-shape in _o_ and _ø_ would be a single substitution, but a variation also affecting _œ_ would be part of a stylistic set substitution.\n\nI don't claim this is the only way to look at this question, but insofar as the Stylistic Set features were intended not for changes to individual letterforms, this seems to me the best way to draw the distinction between what belongs in such sets and what should be in [salt] if that feature were adequately supported and what should be in the new character variant features when they are approved and, hopefully, supported. And we do need to have a basis for such distinctions if we are going to recommend any sensible use of these similar layout features.\n\n"
    }
  ]
}

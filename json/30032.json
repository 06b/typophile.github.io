{
  "id": "30032",
  "title": "OT language tags: IDCS2 support?!",
  "forum": "Build",
  "tags": [
    "Build"
  ],
  "content": "Now this is really unbelievable! InDesign CS2 does not support OpenType language tags…\n\nWhat's all the fuss about \"saving the i-dot in Turkish\", the Servo-Bulgarian ghe's, excepting ligatures in German, Moldavo-Romanian S's with comma-accents, Polish diacritics, and so on and so on, if the industry's major typesetting program doesn't support language system tags?\n\nHow on earth is it possible Adobe ships full-featured OpenType fonts that claim to have multilingual support, but at the same time doesn't manage to implement this more than indispensable OT spec in their state-of-the-art layout program, and so for over a decade since the OT format was defined?\n\nLack of support for LookupTypes is one thing—- but this?\n\n",
  "author": "Rhythmus.be",
  "time": "11 Dec 2006 — 1:28pm",
  "uid": "14571",
  "comments": [
    {
      "time": "11 Dec 2006 — 2:47pm",
      "content": "all things in time...\n\n"
    },
    {
      "time": "11 Dec 2006 — 6:12pm",
      "content": "Right. How many more decades?\n\n"
    },
    {
      "time": "11 Dec 2006 — 6:18pm",
      "content": "decade? you know Adobe comes out with a new version of CS every 18 months!\n\n"
    },
    {
      "time": "12 Dec 2006 — 9:17am",
      "content": "Paul — All right. But it was quite disenchanting a surprise to me, to learn the industry's OT-savviest application doesn't support one of OpenType's imho most indispensable attributes yet. I took this for granted, since all the documentation on OT discusses language systems specific rules at length, Adobe people are giving talks about it at ATypI, and, not in the least, because Adobe ships Pro fonts that, for years now, are equipped with language specific substitution exceptions. Also, I fear that support for language system tags is not on InDesign developers' priority list, which would explain why they didn't take care of this quite simple (?) upgrade thus far. After all, it's like about over a decade now, since the OT format was designed. I imagine at the moment the InDesign team are already busy enough with porting InDesign to the new MacIntel, which adds to my apprehension of lacking OT language support in InDesign releases in the near future, let alone the next one.\n\n"
    },
    {
      "time": "12 Dec 2006 — 5:37pm",
      "content": "Ludwig,\n\n1. Implementing script- and language-specific OpenType processing is by no means quite simple.\n\n2. Nonetheless, applications are easier upgraded than fonts. Once a font is released to the public, it's difficult to make fixes because you introduce the possibility of incompatible versions with an identical name floating around.\n\n3. InDesign is a huge project, an application written from scratch. Each version adds more typographic refinement but obviously, it's impossible to do everything at once. But my guess is that script- and language-specific OpenType processing is on the developers' priority list.\n\n4. Very simply, never take anything for granted.\n\nA.\n\n"
    },
    {
      "time": "20 Dec 2006 — 8:37pm",
      "content": "\\> _But my guess is that script- and language-specific OpenType processing is on the developers’ priority list._\n\nYour guess is absolutely right.\n\n\\> _which adds to my apprehension of lacking OT language support in InDesign releases in the near future, let alone the next one._\n\nI've tried out the upcoming version of InDesign, and I can tell you that its OT language support has been improved. So please rest assured that the developers are working on that from.\n\n"
    },
    {
      "time": "21 Dec 2006 — 7:26am",
      "content": "Miguel — Thanks for the info. But what do you mean by 'improved'? Either language tags are supported, or they are not. At the moment they are not, in InDesign CS2.\n\nWhat's so difficult? The user can specify which language applies to what string of text already, so that the program is able to use the proper dictionary (for hyphenation and spell check). Using this information, the OT engine could easily look for language tags in the font and apply the associated lookups. Obviously, the tags used by the app should match the OT tags, but I can't imagine Adobe failing to have consistent tag naming conventions.\n\n"
    },
    {
      "time": "21 Dec 2006 — 5:17pm",
      "content": "I'm sorry, but at this stage I can't be more specific.\n\n"
    },
    {
      "time": "8 Apr 2007 — 5:54pm",
      "content": "[InDesign CS3 new font/text features](http://web.archive.org/web/20150415062333/http:/blogs.adobe.com/typblography/2007/04/indesign_cs3_ne.html)\n\n"
    },
    {
      "time": "8 Apr 2007 — 6:32pm",
      "content": "Thanks Miguel and Thomas! Nice to se a few opentype items added in CS3. JNust waiting for it to arrive in the mail!\n\nChrisL\n\n"
    }
  ]
}

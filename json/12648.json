{
  "id": "12648",
  "title": "New font working title: 'Software Developer'",
  "forum": "Sans Serif",
  "tags": [
    "Sans Serif"
  ],
  "content": "This font now has 2 editions, the one originally commisioned ( now being hinted a bit more) & an improved version with a bigger set of targets to hit. My focus is now the new version.\n\nThe original font was designed :\n\n- to be used in bitmap mode at 12pt on a pc ( on & off pixels only )\n\nThe new design is meant to :\n\n- look okay in print  \n- work as hited bitnmap ( on & off pixels only )  \n- and work anti-aliased too ( with grey pixels created by rendering engines ).\n\nOriginally I tried to shape my glyphs around the target bitmap at 12pt for PC. But I found out eventually that I was constraining the glyph designs too heavily and creating problems for the bitmaps at larger & smaller sizes. This new font builds on my trial & error experience as well as my new understanding about why monospaced fonts have taken the shapes they have. The latest version does as better job rendering to screen in antialised mode & I think is less ugly when printed.\n\nThe latest GIF graphic is simulated PC 12, 24, & 48 pts.\n\nThe PDF shows 12 & 72 pts. The 'in typophile' link below doesn't work. [This one does.](http://web.archive.org/web/20150123121136/http:/www.eyebytes.com/softdev.v3.1.pdf)\n\nI have been using Lucida Sans Mono, Lucida Console, Consolas, Courier, Andale mono, Monox, Isonorm, Thordis Mono, Adaptive Mono & Mono 821 as references.\n\nThanks!\n\n| Attachment | Size |\n| --- | --- |\n| [example1.gif](http://web.archive.org/web/20150123121136/http:/typophile.com/files/example1.gif) | 17.61 KB |\n| [example2.gif](http://web.archive.org/web/20150123121136/http:/typophile.com/files/example2.gif) | 17.04 KB |\n| [example3.gif](http://web.archive.org/web/20150123121136/http:/typophile.com/files/example3.gif) | 18.02 KB |\n| [sq9.gif](http://web.archive.org/web/20150123121136/http:/typophile.com/files/sq9.gif) | 24.22 KB |\n| [ampersand.gif](http://web.archive.org/web/20150123121136/http:/typophile.com/files/ampersand.gif) | 962 bytes |\n| [ampersand.gif](http://web.archive.org/web/20150123121136/http:/typophile.com/files/ampersand_0.gif) | 1.52 KB |\n| [softdevexample.gif](http://web.archive.org/web/20150123121136/http:/typophile.com/files/softdevexample.gif) | 25.63 KB |\n| [softdev.v3.1.pdf](http://web.archive.org/web/20150123121136/http:/typophile.com/files/softdev.v3.1.pdf) | 324.64 KB |\n| [softdevr6.gif](http://web.archive.org/web/20150123121136/http:/typophile.com/files/softdevr6.gif) | 13.41 KB |\n| [r6bt.gif](http://web.archive.org/web/20150123121136/http:/typophile.com/files/r6bt.gif) | 2.25 KB |\n\n",
  "author": "ebensorkin",
  "time": "23 May 2005 — 11:43am",
  "uid": "2942",
  "comments": [
    {
      "time": "23 May 2005 — 12:01pm",
      "content": "Quick comments.\n\n\\_f\\_ seems too wide  \n\\_i\\_ fills up the word shape too much when it appears in the middle of a word.  \n\\_m\\_ the middle stroke is too short. It also looks a little narrow  \n\\_w\\_ seems too narrow. UC and lc.  \n\\_J\\_ seems too wide. Could be the tail.\n\nBeing that this is monospace, some of my critique could be useless.\n\nCould you set some more text with more caps in use so we can get a better sense of that as well?\n\n"
    },
    {
      "time": "23 May 2005 — 12:43pm",
      "content": "New images added to the original post. ( see above )\n\nNow when you reply it seems you can't post new images in the reply - and images are not inline anymore either.\n\nThe example images were created in photoshop using a 96 dpi setting to simulate a PC screen. There is a little anialiasing that would not exist in a programming app - but I think the idea/impression given is mostly right.\n\nWho would you say is the monospace guru on typophile?\n\n"
    },
    {
      "time": "23 May 2005 — 1:04pm",
      "content": "I don't know if he's on Typophile, but de Groot is a mono grand master.\n\n(More soon...)\n\nhhp\n\n"
    },
    {
      "time": "24 May 2005 — 7:24am",
      "content": "I think you have a good start. A few observations:\n\nYou need to use a bit more overshoot on the curves at the tops and bottoms of the rounded characters (A, C, G, O, Q, S, etc.).\n\nI would move the vertical stem of the f one \"pixel\" to the right. Same with the t.\n\nI agree with Tiffany about the m. I also think the top of it is looking clogged where the two strokes meet. You need to cut into it more like the bottom of the w.\n\nI would move the crossbar on the e up one \"pixel\". It seems out of step with the rhythm of the rest of the font.\n\nI think the A and R are a little too similar. The lower crossbar on the A helps, but it may be difficult to tell them apart in certain cases. You could do the top of the A like the bottom of the V. Or, you could put an angled tail on the R. Or both.\n\nCheck the top of the z. It seems like it's not quite up to the x-height.\n\nThe word spacing seems too wide. I would make it much narrower. (Just kidding.)\n\n"
    },
    {
      "time": "25 May 2005 — 3:43am",
      "content": " **Harmonising shapes**\n\nThe vertical parts of the bowls on b, d, etc are rounded, whereas the same parts on c, e, and o are straight. I think these shapes should be consistent. I prefer the rounded shapes; it humanises the design.\n\nI like the arches on h and n. Why not use the same on u (by rotating the n), instead of the smallcap style? This could help disambiguate u and v.\n\nSmall s and capital S have different arm styles. The closed style works on capital S, would it work on small s, or would the counters close up too much?\n\n**Letter spacing and width**\n\nThe letter spacing and width appear to be dictated by the lower case bowls and arches. I would say the spacing is tight for a monospace design. This creates problems with m and w, which would like to be wider, but cannot 'rob' any space either side. Also, the narrow letters like 'i' and 'l' cannot fill the space enough to blend with the tighter spaced 'normal' letters, so you get light patches.\n\nPerhaps try loosening the spacing a bit. The words should not fall apart, because the word space is about twice what you would have in a proportional design.\n\nI think the cap height is the same as the ascent (I have not measured it). The caps would look less squashed if they were shorter.\n\n**Punctuation and other disambiguation**\n\nA programmer's font needs strong and unambiguous punctuation. The dots in your design are too light, I feel. The comma looks right. The different styles of brackets need to be clearly differentiated. The braces have a good shape, with a clear 'dink' in the middle. However, I would widen the braces and square brackets.\n\nI would lengthen the 'nose' on the figure 1, to disambiguate it from small l. My colleague wasted hours fixing some software which had both 'startl' and 'start1' in it, which appeared to be the same thing.\n\n**Disclaimer**\n\nI am not a professional type designer. I do it for fun. Please feel free to ignore everything I have said.\n\n"
    },
    {
      "time": "25 May 2005 — 7:24am",
      "content": "Hello,  \nI think:  \n\\< \\> are so small  \n& should be more clear — I would suggest \"classical\" shape.\n\n"
    },
    {
      "time": "28 May 2005 — 8:56am",
      "content": "Software developers should turn over to the dark side and start using proportional typefaces instead.\n\n"
    },
    {
      "time": "28 May 2005 — 2:48pm",
      "content": "Proportional spaced software text? I think not.\n\nThe characters in most software languages function in a different way to the same characters used to represent human languages. In software, each character has similar weight in terms of meaning. Grouping characters into words is just for human convenience. An error in a single character is not merely a typo: the software will not compile, or will malfunction. Conventional proportional spacing aids reading groups of characters as words. This does not help when reading software text, which very often needs to be read character by character.\n\nIn my opinion, a monospaced design is beneficial to character-by-character reading, and is therefore most suited to rendering software text.\n\nOn the topic of character-by-character reading, I have read of a psychological test (sorry, no ref), where monospace out-performed sans and serif proportional typefaces. As I recall, the test involved finding typos. Does this mean that writers (or at least proof-readers) should use monospace?\n\n"
    },
    {
      "time": "29 May 2005 — 9:42am",
      "content": "I concur: You don't think.\n\n"
    },
    {
      "time": "30 May 2005 — 5:33pm",
      "content": " **Thanks for all the advice!** - I haven't tried it all out yet, but I will this week.\n\n**Re: monospace** - I have asked about this over & over again, because I, like Segej, didn't grok why the monospace was used by programmers. The programmer who will be getting this font when it is done actually explained it to me best - despite english being a 2nd language.\n\nHe said that character count is important when scanning code. Monospace let's you find patterns in code faster - dissimilar or similar code for instance - than variable spacing. The thing is programmers are not reading for comprehension like we do. It's both more & less abstract than that.\n\n- More, because they are thinking in terms of how the lines interact\n\n- Less, because they are looking for small - sometimes single charcter changes in common kinds of code - not the bigger word sized changes we look for when we read a language.\n\nThat my understanding anyway.\n\n**DeGroot** - Has anybody seen anything written by Degroot on monospace? Has anybody talked with him about it or had a class?\n\n"
    },
    {
      "time": "31 May 2005 — 2:04pm",
      "content": "In the book, _Now read this: The Microsoft Cleartype Font Collection_ there is a chapter dedicated to de Groot's _Consolas_ which is his monospace sans serif for the Cleartype collection. Here is a [sample](http://web.archive.org/web/20150123121136/http:/www.poynter.org/resource/78683/consolas.gif) courtesty of [PoynterOnline](http://web.archive.org/web/20150123121136/http:/www.poynter.org/).\n\n"
    },
    {
      "time": "13 Jun 2005 — 3:57pm",
      "content": "Thankyou Tif!\n\n[- PDF -](http://web.archive.org/web/20150123121136/http:/www.eyebytes.com/v13.pdf)\n\nHere is the current version of 'software developer' with many of the suggetions worked in. The biggest changes I made were in spacing & weight. I took Glyn's suggestion and there is a pixel's extra space between letters now. Reading about Mark Simonson's Type face ['Anonymous'](http://web.archive.org/web/20150123121136/http:/www.ms-studio.com/FontSales/anonymous.html) in an article he kindly set me I decided that I had better reduce the weight of the face as a whole. I have brought some of the variation in weight I found in my lower case into the numbers and I will start looking at puctuation & additional characters next ... In the meantime - here is the update. Fire away!\n\n"
    },
    {
      "time": "13 Jun 2005 — 4:15pm",
      "content": "\\_w\\_ seems to be filling in still  \n\\_j\\_ dot over seems to be too low  \n\\_m\\_ the curves are still odd to my eye. uneven. Next to the \\_n\\_ it looks even more odd, but this combination doesn't occur too often.  \n\\_J\\_ base seems too wide  \n\\_s\\_ is falling backwards\n\nThe letters with a little stroke modulation look odd, but I can see it might be necessary. The W w and m seem out of place to me.\n\n"
    },
    {
      "time": "13 Jun 2005 — 4:46pm",
      "content": "Thanks for the observations! I think I can fix these. In the case of the w & m I might be able to steal an extra pixel for either side. It being monospaced I have struggled with the the m in particular.\n\nI wonder if a different shape maybe a simple arch with a mid leg - like the cap A but a vertical line not a horizontal one - might also be a solution.\n\nBTW - The stroke modulation isn't \\*needed\\* - i just thought it looked better than simpler shapes. I probably haven't got it right yet if it looks odd. What about the numbers? Do they look odd too. Any modulations in particular bug you?\n\n"
    },
    {
      "time": "13 Jun 2005 — 6:38pm",
      "content": "The solution to the m problem is straightforward. The left half should work like a very narrow n. The right part should come off the first stroke in a way that looks visually about the same. The counter space for both parts should be identical, or nearly so. Right now you seem to be trying to make it symmetrical, with the cut in the middle centered on the width of the character. Here's what I mean:\n\n[http://www.marksimonson.com/m.gif](http://web.archive.org/web/20150123121136/http:/www.marksimonson.com/m.gif \"http://www.marksimonson.com/m.gif\")\n\n"
    },
    {
      "time": "13 Jun 2005 — 9:20pm",
      "content": "Awesome. Thank you!\n\n"
    },
    {
      "time": "14 Jun 2005 — 10:12am",
      "content": "Having a little perspective from the coder's side of things, Here are some things that are important to the utility of the font.\n\nYou need bigger punctuation, like, monstrous if possible. Seeing the difference between a colon and a semicolon is important, but not as important as seeing the difference between a colon and nothing. I recommend that the diameter of a dot be somewhere between 1.5 times and twice the width of a stroke. But leave the dots on i and j as they are; they should not distract someone who is looking for punctuation marks.\n\nIn some samples, your zero is reading as an eight. I suggest narrowing the mark in the center and making it taller.\n\nFrom a typography standpoint, example1.gif looks the most clean and impressive to me, whereas the pdf just looks awkward. So I think you should back off on the stroke modulation wherever you don't need it. b, d, p, q should look more like c, e, o, s do.\n\n"
    },
    {
      "time": "14 Jun 2005 — 12:18pm",
      "content": "Cerulean: What about the 'a'?\n\n"
    },
    {
      "time": "14 Jun 2005 — 2:57pm",
      "content": "The 'a' looks all right. Maybe just a tiny bit heavy south-by-southwest. The 'y' is good too.\n\n"
    },
    {
      "time": "17 Jun 2005 — 10:51pm",
      "content": "Eben, sorry it took me so long to take a closer look at this. I just realized what you're trying to do: make an outline font that looks decent enlarged but renders out nice grayscale bitmaps, and is monospaced on top of it! You're really shooting very high with this - the balance of compromises will surely be a bear to keep your head wrapped around... Good luck!\n\nThe two main problems I see with your first effort on top (which you might or might not have fixed - it's not possible to really know from that PDF, without a bitmap rendering):  \n1) Yes, make the interletter spacing two pixels.  \n2) It's too fuzzy. Fixing this isn't just a matter of making the forms lighter, but also controlling better what partial-pixels they render out.\n\nAs I'm sure you realize, there's a limit to how nice you can make the outlines look, without sacrificing the -more important here- screen rendering. This is because outline fonts rely on **continuity** to conform to aesthetic expectations, while bitmap fonts rely on **discontinuity** to avoid blur. I guess if you simply manage to make the outlines non-disgusting (which you're doing fine) that would be enough; don't try to make your outlines conform to the conventional standards of print font quality.\n\nAs for the question you're having concerning Em/pixel-block proportions, I'm not sure where the issue is: as long as you choose a nominal point size that has an integer 75% value (to accomodate the \"native\" Windows dpi of 96) you should be OK. And a value of 8 (resulting in a pixel-block size of 125, in an Em of 1000) does that, plus it's sort of an informal standard in pixelfonts.\n\n--\n\n\\> Does this mean that writers (or at least proof-readers) should use monospace?\n\nIndeed, there's immersive reading, and then there's deliberative reading. For the former, an efficient, well-proportioned font helps; but for the latter -like when proofreading- those attributes actually hurt! Because you have to be forced to read inefficiently to be able to catch typos; in immersive reading your cognitive mechanisms are simply too clever.\n\nhhp\n\n"
    },
    {
      "time": "19 Jun 2005 — 10:40pm",
      "content": "Updated images\n\n[Software Developer vs. Courier](http://web.archive.org/web/20150123121136/http:/www.eyebytes.com/example4.gif)  \n [example of C++ code](http://web.archive.org/web/20150123121136/http:/www.eyebytes.com/examplecode.gif)\n\nIf anybody has any comments on the current state I would love to hear them. BTW I did try increasing the space beween letters from 2 to 3 pixels at 12 pt but I didn't like it. I am still working on my zero, S & s. They are not right yet & I know it. These examples don't show perfect pixel alignment but they do give a good idea about the current flavor of the font.\n\n"
    },
    {
      "time": "20 Jun 2005 — 10:39am",
      "content": "Eben, those look blurrier than some of the stuff I saw before - is that normal?\n\nThree-pixel interletter spacing is too much at anything below like 18 pixels. Unless it's a really light and wide design or something. Two pixels is the gold standard for both one- and two-pixel weights at \"normal\" reading sizes (from like 11 pixels to 16), for designs of typical width. And one-pixel spacing is useful for very small sizes or where economy is much more important than readability.\n\nhhp\n\n"
    },
    {
      "time": "20 Jun 2005 — 1:29pm",
      "content": "These examples are blurry for two reasons\n\n- OSX really like to blur - and these examples are taken from the Mail application which uses the adobe/apple quartz engine.  \n- and because I scaled the font up recently & I have not got perfect grid fit again yet.\n\nI can turn off the antialiasing in OSX & this is what the examples look like:\n\n[text no aliasing](http://web.archive.org/web/20150123121136/http:/www.eyebytes.com/html/text2.gif)  \n [code example no aliasing](http://web.archive.org/web/20150123121136/http:/www.eyebytes.com/html/code2.gif)\n\nIt will become crisper again oven with alaising but even then it will also look different in a Microsoft Programming tool ( very crisp indeed - no aliasing at small sizes) , on OSX ( aliasing on all the time) & still different from that in Photoshop( depending on render mode), Illustrator or Flash.\n\nStill, apart from looking at the fit, Any glyphs that jump out as problems? Any that seem good? Apart from the S & s I am noticing obvious problems with the k,b,zero, and I wanted my r to have a littile bite in it at the top.\n\nWhat about line spacing?\n\nI should also mention that part of goal for this font is to create a text field of code that \\*doesn't\\* shout with heavy puctuation. Hence the softer curly brace.\n\nI may still modift the \\< and the \\>\n\n-e.\n\n"
    },
    {
      "time": "22 Jun 2005 — 12:51am",
      "content": "The C++ sample shows a real problem with ambiguity between 'u' and 'v' in my opinion. I looked at some function/variable names, and had to deduce whether there was a 'u' or 'v' from the context. I would shorten the vertical ends to the strokes, and make the diagonals more vertical.\n\n"
    },
    {
      "time": "22 Jun 2005 — 2:03pm",
      "content": "Eben, those two links of your aliased text samples are not working...\n\nThe one thing I would say at this point is this:  \nYou have a lot of blur, for something that worries about the screen. Now, considering your particular design constraint -that the outline foundation be decent- that's arguably unavoidable. However, it does mean you can shoot for more letterform fidelity, less orthogonality. This ties in to Glyn's observation about the \"v\": there doesn't seem to be a reason to have flat sides like a \"u\" (since it's going to be blurry anyway), and there is reason for it not to have flat sides it (since you would want to avoid ambiguity).\n\nBTW, could you put a character set?\n\nhhp\n\n"
    },
    {
      "time": "23 Jun 2005 — 12:13am",
      "content": "Here is the latest version pre-hinting. I am starting wonder if my grid is wrong again.\n\nBut this is where I am now.\n\n[[ Link to Photoshop rendering](http://web.archive.org/web/20150123121136/http:/www.eyebytes.com/sample.gif) ]\n\nI am using a 2048 em grid ( MS apps is my target use) & 128 em units is my base pixel size which I thought would give me a match at 12 point... Oddly it's only the 10 pt that gets my curly brackets right when it's in non-antialiased mode...\n\nComments & advice please!\n\n"
    },
    {
      "time": "23 Jun 2005 — 9:26am",
      "content": "A block size of 128 in an Em of 2048 yields a nominal point size of 16.  \nI'd use a block size of 256, arriving at the pseudo-standard of 8 point.\n\nhhp\n\n"
    },
    {
      "time": "29 Jun 2005 — 5:16pm",
      "content": "I have a hinted version now. This set is shown at 12pt, & 24pt. I will post a 10pt & 14pt soon.\n\n[+ hinted samples here +](http://web.archive.org/web/20150123121136/http:/www.eyebytes.com/squishcode/index.html)\n\nPlease comment!\n\n"
    },
    {
      "time": "29 Jun 2005 — 6:36pm",
      "content": "Wow, looking good.\n\nI'm a software developer myself, and I'm extremely picky about the font I use for coding. (I used [Andale Mono](http://web.archive.org/web/20150123121136/http:/www.microsoft.com/typography/fonts/font.aspx?FID=11&FNAME=Andale%20Mono) for many years, and recently switched to a slightly tweaked version of Fabrizio Schiavi's [Pragmata](http://web.archive.org/web/20150123121136/http:/www.fsd.it/fonts/pragma.htm).) I've been following the progress of your design with great interest.\n\nThe _w_ and _W_ seem to be a little problematic. The _A_ also looks a little anemic. I'm not too sure that old-style figures are a good idea in this kind of font; that _0_ looks a little odd in the context of actual code, for example.\n\nOn the whole, though, this is shaping up to be a font I would seriously consider using. Thanks for pouring the effort into this project; coders are a sadly neglected market when it comes to type.\n\n"
    },
    {
      "time": "29 Jun 2005 — 8:12pm",
      "content": "Wow, Thats great. I do plan to offer it with & without oldstyle figures. That 'o' is probably my zero, The zero has a dot the o does not & the UC O has no dot either. A slash may be more prgmatic but it can be confused in danish & the dot gives a lighter impression. In general this font is quieter than other code oriented fonts especially in the brackets.\n\nAny other comments?\n\n"
    },
    {
      "time": "29 Jun 2005 — 9:48pm",
      "content": "So basically you've given up hinting-for-grayscale? You're not the first... :-/\n\nI think it looks good overall, especially in the 24. Consider making/hinting a 16 PPEM. BTW, when you choose point sizes to worry about, don't forget Windows! That's what most programmers use after all, and over there \"10 point\" for example is 13 PPEM.\n\nOne other thing: conventionally, the oldstyle \"4\" is descending.\n\n\\> A slash may be more prgmatic but it can be confused in danish\n\nYou could make it backslash direction. There's also the totally horizontal slash, but that can make the zero too much like an eight. The dot can work, but it requires a counter of three (or five, or seven) pixels.\n\nhhp\n\n"
    },
    {
      "time": "29 Jun 2005 — 11:11pm",
      "content": "\\> hinting for greyscale\n\nNo, It's hinted. Auto-hinting plus extra hints to make it behave. The OS is only willing to show me a non anti-aliased rendering from 12 down. thats why 24 point is anti-aliased. Hinting is crazy but almost fun. I am almost, starting to sort of understand it, in a way. Actually, my hinting seems quite effective for bit maps but only just so effective for anti-aliased text at say 12pt. There at 12 pt it looks pretty wacky at times because of the hinting hoops I am jumping through to make the pure b/w bitmaps look good.\n\nI am glad you like the 24 pt. okay because thats what printouts should look like.\n\n\\> 13ppem\n\nHmmm, I'd better look at the 13 again and tighten it up!\n\n\\> OStyle 4\n\nThe 4 is modeled on Degroot's figures. Still, that good to know. See them?\n\n[http://www.lucasfonts.com/](http://web.archive.org/web/20150123121136/http:/www.lucasfonts.com/)  \n [http://www.fontfabrik.com/fofafon4.html](http://web.archive.org/web/20150123121136/http:/www.fontfabrik.com/fofafon4.html)\n\n\\> The dot  \nThe fellow I am doing this for likes the dot, maybe the one he doesn't want to use, Old Style figures (or not) will use the slash, heck maybe there could be a third version... It's just one glyph.\n\n"
    },
    {
      "time": "30 Jun 2005 — 2:07am",
      "content": "I added a sample at the top. It shows the font at 9pt at 96 dpi - equivalent to 12 point on the mac. This is the target rez. The example shows the font anialiased & as a bit map using photoshop as the rendering environment. I have been using the font as a default font in my web browser & I am starting really like it.\n\n"
    },
    {
      "time": "30 Jun 2005 — 8:26am",
      "content": "Yes, I know it's hinted, just not for grayscale rendering (at text sizes) which is how I think you started. BTW, are you using delta-hints?\n\n\\> The OS is only willing to show me a non anti-aliased rendering from 12 down.\n\nMacOS?! That's strange, I thought everything was full-fuzz for the past few years, with hints ignored to boot. Maybe it's a cutoff setting in the OS? If so, what's the factory default?\n\n\\> The 4 is modeled on Degroot’s figures.\n\n?  \nI'm seeing a descending \"4\" chez de Groot...\n\nhhp\n\n"
    },
    {
      "time": "30 Jun 2005 — 8:44am",
      "content": "\\> delta hints\n\nYes, They are \\*totally\\* needed if you care about the b/w bitmap especially with my redesigned 'Yy' & 'Xx'. My old ones would have behaved better but ...\n\nActually I found a new way to design for b/w that I wish I had known before. I only figured this out this week when I was hinting; you have to make many round trips between type 1 & tt hinting mode which means going from type 1 to tt outlines over & over (which bites) but you can move your points around & see what they are doing unhinted in multiple ppems. As it is my outlines are between 11 & 12 ppem which is maybe a good thing since they don't 'break' completely in either. Still, if I was doing this all over I would probably build some basic shapes going back & forth into tt & adjusting things for minimum hinting. As it was I did this for the percent symbol & it really paid off. That glyph would have been hell otherwise.\n\n\\> One other thing: conventionally, the oldstyle “4” is descending.\n\nOhhhh, I see. One more pixel down. Thanks!\n\n"
    },
    {
      "time": "30 Jun 2005 — 9:15am",
      "content": "Eben, I think that this is looking really good. I concur that monospace was a great choice, especially given your target audience.\n\nI think that you punctuation is way to small. All of it, even the = sign. I'd pump up your marks. In code, they are just as important as letters/numbers.  \n\\_\\_  \n [www.typeoff.de](http://web.archive.org/web/20150123121136/http:/www.typeoff.de/ \"www.typeoff.de\")\n\n"
    },
    {
      "time": "30 Jun 2005 — 9:36am",
      "content": "Dan, I could do this in two ways\n\n- I could pump up the punctuation, in the outline only so it pops better when antialiased & leave the hinted bitmaps witha period being one pixel & so on. That is what I think the programmer who asked for the font would want, or it was when I asked him last, he said he likes the light feeling of the font.\n\n- or I could make the period be 2 or 4 pixels or something similar.\n\nWhich one did you mean?\n\n"
    },
    {
      "time": "30 Jun 2005 — 9:38am",
      "content": "I don't know, really. It was just a feeling that I had when I looked at your most recent images. How do they look with more pixels?\n\n\\_\\_  \n [www.typeoff.de](http://web.archive.org/web/20150123121136/http:/www.typeoff.de/ \"www.typeoff.de\")\n\n"
    },
    {
      "time": "30 Jun 2005 — 9:54am",
      "content": "Well I tried them with more pixels & I thought, well, not too bad but my pal said, ' I like it lighter - put it back to one pixel please'. So, for him anyway, it will have to stay lighter in one of the pixel versions anyway. I had tried a version where I made the period a verical 2 pixels which was okay until I looked at the colon ':'.\n\nThat form looked like the broken line glyph. So probably the alt version would have to be a 4 pixel which has been done for programmers before. So that could be done. It's a good idea for a variant!\n\nOn the other hand making the outlines heavier & then making the bitmaps use the one pixel afterwards (using hinting) would make the type read better in anti-aliased form. I think you are right about the puctuation being a bit too light. The period & colon etc.\n\nI think the brackets seem okay - but, if I make a heavy punct version then maybe I will make the brackets heavier too. What do you think?\n\n"
    },
    {
      "time": "30 Jun 2005 — 9:56am",
      "content": "I think that all of the punctuation should appear equally heavy.\n\n\\_\\_  \n [www.typeoff.de](http://web.archive.org/web/20150123121136/http:/www.typeoff.de/ \"www.typeoff.de\")\n\n"
    },
    {
      "time": "30 Jun 2005 — 9:56am",
      "content": "Can someone educate me? Both of those samples - in sq9 - are the same typeface, right? One is hinted and one is not? I don't want to critique what I'm seeing until I understand exactly what I'm seeing.\n\n"
    },
    {
      "time": "30 Jun 2005 — 10:07am",
      "content": "Thanks Dan!\n\nSorry Tiff, some clarification.\n\n- The one on top is the anti-aliased version, this is the kind of thing designers are likely to see & increasingly we all use since OS preferences are using anti-aliasing at smaller & smaller sizes. (which BTW I intend to tighten slightly so the verticals align to grid & the text matchs in width more perfectly with the bottom one).\n\nThe way antialiased text looks will vary somewhat according to the OS being used, videocards & so on. This sample was rendered in Photoshop ( heavy style, one of 6 flavors) which renders differently than my web browser & which renders differently than Flash & so on.\n\n- The bottom one is the hinted black & white, or on & off pixels only, version. It's kind of old school, but this mode of rendering is the mode that programmers seem to like to program in the most.\n\nHrant, Actually I can turn anti-aliasing on from 6 pts on up. What I cannot seem to do is turn it off ( except in photoshop ) at sizes above 12pt in OSX Jaguar. So I have some choice, just not complete choice.\n\n"
    },
    {
      "time": "30 Jun 2005 — 10:20am",
      "content": "I like it, but its nice reading what programmers and developers themself would expect of such a typeface.. I think I looove the old style figures.. :)  \n_( The only thing / character that slightly bothers me may be the lowercase 'w'.. )_\n\n"
    },
    {
      "time": "30 Jun 2005 — 1:39pm",
      "content": "For what it's worth, I would also like to cast a vote in favor of heavier punctuation. The more I look at those single-pixel dots in the period, colon, and semicolon, the more I think that they could be deal-breakers for me.\n\nI do realize that expanding those dots to two or even four pixels would probably end up making the font look somewhat dishamonious; nevertheless, I think it would be the lesser of two evils, given the intended use. When coding, clarity is paramount.\n\nI think I should also clarify my earlier comment on the _0_ (zero) looking \"odd\". It's not the dot that looks odd to me; the dot is a very good thing. Rather, it's the disconcertingly small size of the entire glyph. (\"Hmm... is that a zero? It looks awfully small to be a zero. What _is_ that? Oh, I guess it must be a zero.\")\n\nIn programming, it is very common to see lines of the form:\n\n`x = 0;`\n\nThe _0_ appears by itself, without any real context. Traditionally, when old-style figures are employed, they tend to be used in the context of prose, and more often than not, to represent multiple-digit numbers. This provides the context necessary to make the digits easy to identify. In code, single digits often appear without the benefit of that context, making it crucial that they be intrinsically easy to identify in isolation. I think old-style figures hinder that.\n\nOn the other hand, in the [example](http://web.archive.org/web/20150123121136/http:/typophile.com/system/files?file=sq9.gif) you posted later, with the text setting, I think the old-style figures look great.\n\nPerhaps you could offer your two versions of the font as follows: one with exaggerated dots and non-old-style figures (for use by coders), and one with the \"normal\" dots and old-style figures (for general-purpose use as a monospaced font).\n\n"
    },
    {
      "time": "4 Jul 2005 — 11:33am",
      "content": "Hi Eben,\n\nCongratulations for your Designs!  \nThey look very clean and legible.\n\nBest,\n\nmh\n\n"
    },
    {
      "time": "4 Jul 2005 — 3:06pm",
      "content": "Thanks! The latest news is that my friend has decided that he likes the slighly smaller caps & quieter look of my original bitmap design best for programing, & the new design for reading text - so I will be making 4 fonts available once they are finally tested.\n\n(1) The tall one shown here with the , (2) plus a version with stronger puctuation as requested, (3) The older shorter version with simpler & quieter forms, (4) The older version with strong puctuation. I might keep sthe old style figures as well. I guess I will offer the old version in bitmap centric format & a smooth line hinted format too. So really, 8+ fonts total.\n\nAll the new versions will have a better underscore & a new ampersand.\n\nAnyway I hope to be wrapping this up soon.\n\nAny more programmers here? Want to get your feature requests in?\n\nCheers!\n\n"
    },
    {
      "time": "4 Jul 2005 — 4:49pm",
      "content": "I have added a link to a bunch of ampersand designs at the top. What do you think?\n\n"
    },
    {
      "time": "4 Jul 2005 — 9:40pm",
      "content": "Ampersands: to me #9 is clearly the best, if also very conventional. Or #6 if you'd like to sacrifice some conventionality for slightly better spacing. In fact to improve the spacing, could you push the head one pixel to the right and still end up with something decent? Either way (and actually especially if you push the head rightward) you might also try an open-headed design.\n\nhhp\n\n"
    },
    {
      "time": "4 Jul 2005 — 11:53pm",
      "content": "Yes, I think I agree. What do you mean by open headed? - I am intrigued. Is there a font that you can point to as an example?\n\n"
    },
    {
      "time": "5 Jul 2005 — 7:50am",
      "content": "Mana! :-)\n\nhhp\n\n"
    }
  ]
}

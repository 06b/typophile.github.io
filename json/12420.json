{
  "id": "12420",
  "title": "OpenType",
  "forum": "Home",
  "tags": [
    "Book / Website / Information",
    "wiki"
  ],
  "content": "**[Indices](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Indices) : [Type Technologies](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Type%20Technologies) : OpenType**\n\n**About OpenType**  \nOpenType is a type format designed by [Microsoft](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Microsoft) and [Adobe](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Adobe) which attempts to resolve the limitations of the two dominant outline font technologies (Adobe's [Type 1](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Type%201) [PostScript](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/PostScript) fonts, and [Apple](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Apple) and Microsoft's [TrueType](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/TrueType) fonts), as well as serving the needs of its two creators. From Microsoft it gets its focus on global language support: OpenType uses as its basis [Unicode](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Unicode), and does away the complicated system of code pages found in older digital font formats. Something like OpenType's advanced typographic features are needed for even basic support of certain languages. From Adobe OpenType gets its emphasis on advanced typographical controls for western and East Asian languages, providing support within a font for such features as alternate character forms, discretionary ligatures, variant figures (tabular and proportional, lining and old style), and small caps. In this OpenType benefits from the work done by Apple on [TrueType GX](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/TrueType%20GX) (lately known as [Apple Advanced Typography](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Apple%20Advanced%20Typography) or AAT), which had a similar model for advanced typographical features.\n\n**Limitations**  \nAs a technology, OpenType suffers from some unfortunate compromises, as well as benefiting from the concentrated wisdom of two of the computer industry's two most experienced implementors of typographic technology. Both Adobe and Microsoft had their own technologies for encoding and rendering fonts, and instead of hammering out a new rendering technology to match the new format, they instead decided to allow OpenType fonts to contain either Type 1 or TrueType outlines, resulting in two types or [flavors](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/flavor) of OpenType fonts. Also, they opted to use as a basis for the file format TrueType, which uses a binary encoding that is much more opaque that Type 1's relatively easy to parse textual representation. This has made support for OpenType in type designers' tools (such as [FontLab](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/FontLab)) slow to develop, and has also impeded the adoption of some of OpenType's more sophisticated (and useful) typographic features by software developers in general. Even Microsoft and Adobe's flagship applications do not support all of the registered OpenType features (which would in any case be difficult, as new features continue to be registered).\n\n**Advantages**  \nThe benefits of OpenType to end users (whether graphic designers or not) are immediately apparent: users of non-Latin scripts are able, sometimes for the first time, to have their native scripts represented properly on the computer. Languages with flowing scripts (such as Arabic and Devanagari) and ideographic glyphs (such as the Chinese-derived languages of East Asia) are much better supported by OpenType, with its many features for proper positioning, reading flow (right-to-left versus top-to-bottom, right-to-left versus left-to-right), and glyph substitution. OpenType fonts can also replace the complicated system of [expert font](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/expert%20font)s, [swash](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/swash) fonts, [small caps](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/small%20caps) fonts, and fonts containing [old style figures](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/old%20style%20figures) with a single file, and makes it much easier to use the complicated sets of [ligature](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/ligature)s found in fonts such as [Mrs Eaves](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Mrs%20Eaves). Glyph substitution and character positioning are as useful for flowing scripts in English as in non-Latin languages, as seen in the somewhat unnerving [Zapfino](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Zapfino) Extra Pro and [Bickham Script](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/Bickham%20Script) Pro, which simulate the appearance of handwritten calligraphy through a complex and sophisticated set of substitutions.\n\nFor font developers, OpenType has had several key benefits. Several of these are the same things that some people think of as limitations. For example, the fact that fonts with outlines in either of the previous main formats (TrueType and Type 1) are easily converted to OpenType without loss of outline fidelity or hinting is seen as an advantage to them, even while purists complain about the \"dual formats.\"\n\nSimilarly, adopting the \"sfnt\" table-based binary file format of TrueType requires that fonts be compiled from source and decompiled to edit, but also makes them much more compact. It also makes the OpenType format highly extensible, but in a modular way which can be more easily backwards compatible. Finally, because the \"sfnt\" format has been publicly documented for about 15 years, there are many tools for working with it.\n\nFinally, although Apple's competing AAT/GX format is slightly more capable in some areas, programming the state tables needed for AAT/GX typographic features is considerably more complicated than the simple declarative nature of OpenType layout. Adobe's early decision to license both tools and source code at no charge for OpenType layout has also helped OpenType development considerably, although one might wish that the visual approach of Microsoft's VOLT software was more widely used.\n\n**The Future of OpenType**  \nEven though OpenType has been a finished standard for several years as of the time of this writing, adoption is still in progress. The natural conservatism and healthy caution of the printing industry, combined with the reluctance with which OpenType has been embraced by software vendors, has slowed adoption. However, as it has been embraced by virtually all major font developers, as well as both the Mac and Windows operating systems, and the most critical software developers (Adobe, Quark, Microsoft, Apple), it is likely to become the de facto standard technology for digital fonts, and remain such for some time.\n\n**Additional Articles:**  \n [How To Program OT features](http://web.archive.org/web/20150115042024/http:/typophile.com/wiki/OT_How-To)\n\n**Discussion:**  \n [OpenType, Now More Open](http://web.archive.org/web/20150115042024/http:/typophile.com/node/14606)  \n [Critiques of the OpenType format?](http://web.archive.org/web/20150115042024/http:/typophile.com/node/16838#comment-104373)  \n [OpenType, TrueType, TypeOne Post Script](http://web.archive.org/web/20150115042024/http:/typophile.com/node/36876)  \n [Opentype PS vs Opentype TT](http://web.archive.org/web/20150115042024/http:/typophile.com/node/18821)  \n [TrueType Versus Postscript](http://web.archive.org/web/20150115042024/http:/typophile.com/node/16695)  \n [Opentype (ps) vs. Opentype (tt)](http://web.archive.org/web/20150115042024/http:/typophile.com/node/62240)\n\n**External Links:**  \n [OpenType Specification at Adobe.com](http://web.archive.org/web/20150115042024/http:/partners.adobe.com/public/developer/opentype/index_spec.html)  \n [OpenType Specification at Microsoft.com](http://web.archive.org/web/20150115042024/http:/www.microsoft.com/typography/otspec/)  \n [Adobe's OpenType User Guide](http://web.archive.org/web/20150115042024/http:/store.adobe.com/type/browser/pdfs/OTGuide.pdf)  \n [Wikipedia article on OpenType](http://web.archive.org/web/20150115042024/http:/en.wikipedia.org/wiki/Opentype)  \n [FYTI: OpenType](http://web.archive.org/web/20150115042024/http:/www.fonts.com/AboutFonts/Articles/fyti/06-01-05.htm)  \n [OpenType Visualized (A Pocket Knife Analogy)](http://web.archive.org/web/20150115042024/http:/www.flickr.com/photos/stewf/482127951/)  \n [OpenType Page at FontShop](http://web.archive.org/web/20150115042024/http:/www.fontshop.com/support/opentype.php)\n\n",
  "author": "Miguel Sousa",
  "time": "14 May 2005 â€” 1:39pm",
  "uid": "1844",
  "comments": [

  ]
}

{
  "id": "120706",
  "title": "How to add Dummy DSIG to OpenType TT font?",
  "forum": "General Discussions",
  "tags": [
    "DSIG",
    "General Discussions",
    "ttf"
  ],
  "content": "I need to add a Digital Signature to OpenType-TT fonts. I found some instructions but need to know how it gets into the font which I am making with FontLab on Mac (font is intended Windows)...  \n~~~~~~~~~~~~~~~~~~~~~~~~~~  \nCreate a ttx file with a dummy DSIG table, like so:\n\n\\<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?\\>\n\n00000001 00000000\n\nThen you can merge this into your OT/TTF like this:\n\nttx -m font.ttf dsig.ttx\n\nThis will decompile the ttf, add the DSIG table, and recompile in one step. Then the font will work as intended in MS Office (or so I have found in my testing thus far.) This is also easy to incorporate into other scripts.\n\n~~~~~~~~~~~~~~~~~~~~~~~~  \nAs a newbie to Python, XML and all that, can someone please just explain the process - without the coding. A step-by-step list of what happens, when. For example, do this, copy that, paste it there. Run this, build that. Otherwise all this coding talk is useless to me until I understand how the code gets into the font.\n\nI'm using a Mac and FontLab and I'm guessing FontLab has to run this ttx script in order to get the dummy DSIG into the TT font? So it should mean I can do that on the Mac and the resulting TTF will work on Windows?\n\nThanks,  \nAdrian\n\n",
  "author": "Adrian Williams",
  "time": "21 Oct 2014 — 6:51am",
  "uid": "52756",
  "comments": [
    {
      "time": "21 Oct 2014 — 1:16pm",
      "content": "Or, if you are willing to venture into the scary-scary place known by names like \"Command Prompt\" and \"Terminal\", you could do the typing yourself with the same result.\n\nTrying to condense the 'magic' into a simple incantation:\n\n1. Type that bit of XML you got into a text editor and save it as ASCII text to \"dsig.ttx\". You can use a word processor if it can save ASCII files, but it's too much like making a fifty-metre trip in a sport-ute.\n\n2. Open the Terminal or Command Prompt window and type in \"ttx -m \". Drag and drop the font file onto the terminal. Make sure there is a space after the just-appeared filename. Drag and drop dsig.ttx onto the terminal. Now Press Return.\n\n3. Now the computer will either tell you ttx doesn't exist (meaning it just can't find it) or it'll go on to do the typotechnical jiggery-pokery needed to add the dummy DSIG to the font. If you know ttx exists, make it the first file to drag and drop onto the terminal.\n\n4. If no text appears when you drag and drop stuff onto the terminal, you are in for a whole lot more typing. Ouch.\n\n"
    },
    {
      "time": "21 Oct 2014 — 5:51pm",
      "content": "The very first thing to do is to get a terminal window. Click on the Launchpad icon and then type term; you should see this appear. Then you click on terminal\n\n ![](http://web.archive.org/web/20141027051131im_/http:/typophile.com/files/term_5850.png)\n  \nIn the terminal window, after the \"prompt\" (probably %) you type \"which ttx\" as follows\n\n    % which ttx\n    /Users/boyer/bin/FDK/Tools/osx/ttx\n    %\n\nHere I got that ttx is installed in my FDK tools folder. If you get no answer, ttx is not installed and the first thing to do is to install ttx. You should have it if you properly installed [AFDKO](http://web.archive.org/web/20141027051131/http:/www.adobe.com/devnet/opentype/afdko.html).\n\nYou can then copy the lines between the cut lines and paste them in the terminal window\n\n    ------------- cut line\n    FLDR=\"${HOME}/Desktop/Dsig fldr\"\n    mkdir -p \"$FLDR\"\n    cd \"$FLDR\"\n    cat > dsig.ttx<<EOF\n    <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n    <ttFont sfntVersion=\"\\x00\\x01\\x00\\x00\" ttLibVersion=\"2.3\">\n    \n      <DSIG>\n        <hexdata>\n          00000001 00000000  \n        </hexdata>\n      </DSIG>\n    \n    </ttFont>\n    EOF\n    \n    open .\n    ------------- cut line\n\nAfter the paste, you may need to type a carriage return. That will create a folder on your desktop containing the file dsig.ttx and open the folder so that you can select and drop the file dsig.ttx as described above.\n\nNote: I had to use &lt; and &gt; for \\< and \\> lines to show above else the corresponding lines were blank; now the `dsig.ttx` file produced by the copy paste works fine, I tested.\n\nYou can then do as explained by Té Rowan.\n\nYou can also do as follows.\n\nFirst you copy the file `dsig.ttx` in the font folder containing the fonts you want to process.\n\nAfter that, in the terminal window, you type \"`cd `\" (with a space after cd but no carriage return) and then do as if you wanted to drag into that terminal window the folder containing the ttf files to process and then type carriage return.\n\nNow if you type \"`ls`\" (with a carriage return) in the terminal window, you should get a listing of your font files.\n\nTo add DSIG to all of the ttf files you can now paste in the terminal window the following lines (between the cut lines)\n\n    ------------- cut line\n    for i in *.ttf\n    do \n      newname=\"${i%.ttf}win\"\n      cp dsig.ttx \"${newname}\".ttx\n      ttx -m \"$i\" \"${newname}\".ttx\n      rm -f \"${newname}\".ttx\n    done \n    ------------- cut line\n\nThat will create a ...win.ttf file for each ttf font you have there. The win.ttf file contains the DSIG stub.\n\n"
    },
    {
      "time": "22 Oct 2014 — 6:58am",
      "content": "Thanks Michel for the comprehensive instructions - but I fall at the very first hurdle. I downloaded AFDK which landed in the Downloads Folder, so I moved the whole FDK Folder to an Applications Folder I have in my home Folder (~home/Applications). I launched Terminal and typed \"which ttx\" Return, but got this\n\nLast login: Wed Oct 22 14:42:40 on ttys000  \nadrians-imac:~ adrianshome$ which ttx  \n/usr/local/bin/ttx\n\nIt only shows the home Folder and no path to... Tools/osx/ttx\n\nWhat now?\n\n"
    },
    {
      "time": "22 Oct 2014 — 7:21am",
      "content": "Thanks Té, I understand this process. Tried it but knowing nothing of how xml coding works, I don't think I pasted the correct code. Here's what I get:\n\n- - - - - - -  \nLast login: Wed Oct 22 15:04:16 on ttys000  \nadrians-imac:~ adrianshome$ ttx-m/Users/adrianshome/Documents/\\ SASSOON/Sassoon\\ Fonts\\ DEV/Current\\ Versions/font+installer\\ builds/Sassoon\\ TTX\\ scripts/SassoFelReg.ttf \\<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?\\>  \n-bash: syntax error near unexpected token `newline'  \nadrians-imac:~ adrianshome$  \n-bash: syntax error near unexpected token `newline'  \nadrians-imac:~ adrianshome$  \n-bash: syntax error near unexpected token `newline'  \nadrians-imac:~ adrianshome$  \n-bash: syntax error near unexpected token `newline'  \nadrians-imac:~ adrianshome$ 00000001 00000000  \n-bash: 00000001: command not found  \nadrians-imac:~ adrianshome$  \n-bash: syntax error near unexpected token `newline'  \nadrians-imac:~ adrianshome$  \n-bash: syntax error near unexpected token `newline'  \nadrians-imac:~ adrianshome$  \n-bash: syntax error near unexpected token `newline'  \nadrians-imac:~ adrianshome$  \n- - - - - - -\n\nI pasted this...\n\n\\<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?\\>\n\n00000001 00000000\n\nBUT WHERE DOES THIS BELONG..?  \nttx -m font.ttf dsig.ttx  \nAND, does \"font.ttf\" have to be the actual name of the font file?\n\nCheers,  \nAdrian\n\n"
    },
    {
      "time": "22 Oct 2014 — 9:36am",
      "content": "The code\n\n    <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n    \n    00000001 00000000\n\ndoes not work. You need the DSIG tag, and the hexdata else ttx does not know what to do with your stub.\n\nfont.ttf is the actual name of the font file.\n\nI also see that my stub which worked at home does not work on my machine in the office.\n\n"
    },
    {
      "time": "22 Oct 2014 — 10:16am",
      "content": "Here is what I pasted in Terminal , but when I post on this forum the whole code does not appear for some reason? Do I always need to bracket it like so \"` blah, blah`\"\n\n\\<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?\\>\n\n00000001 00000000\n\nand still the question:  \nBUT WHERE DOES THIS BELONG..?  \nttx -m font.ttf dsig.ttx\n\n"
    },
    {
      "time": "22 Oct 2014 — 11:12am",
      "content": "Here's what my code snippet looks like, but I've had to replace \\< and \\> with \"-\" in order to display it in these posts! How on earth does everyone display code snippets. Mine keep getting chopped off? I've tried bracketing code with 'pre' and 'code' but no joy.\n\n-?xml version=\"1.0\" encoding=\"ISO-8859-1\"?-  \n-ttFont sfntVersion=\"\\x00\\x01\\x00\\x00\" ttLibVersion=\"2.2\"-  \n-DSIG-  \n -hexdata-  \n 00000001 00000000  \n -/hexdata-  \n-/DSIG-  \n-/ttFont-\n\nStill have no idea how/when to use this:  \nttx -m font.ttf dsig.ttx\n\n"
    },
    {
      "time": "22 Oct 2014 — 5:07pm",
      "content": "I just reinstalled AFDKO at home and the current version of ttx is no longer 2.3 but 2.4. Here is a trace of execution that shows the version:\n\n    M-660 % ttx | head -3\n    usage: ttx [options] inputfile1 [... inputfileN]\n    \n        TTX 2.4 -- From OpenType To XML And Back\n    M-661 %\n\nThe snippet for 2.3 no longer works with ttx 2.4. Here is a snippet that works with TTX 2.4\n\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <ttFont sfntVersion=\"\\x00\\x01\\x00\\x00\" ttLibVersion=\"2.4\">\n      <DSIG>\n        <tableHeader flag=\"0x0\" numSigs=\"0\" version=\"1\"/>\n      </DSIG>\n    </ttFont>\n\nFor whatever version of ttx you are using, the corresponding snippet needs to be put in a text file. It was assumed above that the file name is `dsig.ttx`.\n\n"
    },
    {
      "time": "23 Oct 2014 — 1:48am",
      "content": "OK, I have version 2.4 of Fonttools. Something is happening but I don't know exactly how I arrived there. I get a new file entitled 'dsig#1.ttf', 'dsig#2.ttf' etc, in Dsig fldr but only 36k file size. So now I guess I just need to know exactly which steps to take.  \n- - - - - - - -  \n`Last login: Thu Oct 23 07:00:26 on console\nadrians-imac:Dsig fldr adrianshome$ which ttx\n/usr/local/bin/ttx\nadrians-imac:Dsig fldr adrianshome$ /Users/adrianshome/Downloads/fonttools-2.4/Tools/ttx /Users/adrianshome/Downloads/fonttools-2.4/Tools/dsig.ttx /Users/adrianshome/Downloads/fonttools-2.4/Tools/SassoBoo.ttf\nCompiling \"/Users/adrianshome/Downloads/fonttools-2.4/Tools/dsig.ttx\" to \"/Users/adrianshome/Downloads/fonttools-2.4/Tools/dsig.ttf\"...\nParsing 'DSIG' table...\nDumping \"/Users/adrianshome/Downloads/fonttools-2.4/Tools/SassoBoo.ttf\" to \"/Users/adrianshome/Downloads/fonttools-2.4/Tools/SassoBoo.ttx\"...\nDumping 'GlyphOrder' table...\nDumping 'head' table...\nDumping 'hhea' table...\nDumping 'maxp' table...\nDumping 'OS/2' table...\nDumping 'hmtx' table...\nDumping 'LTSH' table...\nDumping 'VDMX' table...\nDumping 'hdmx' table...\nDumping 'cmap' table...\nDumping 'fpgm' table...\nDumping 'prep' table...\nDumping 'cvt ' table...\nDumping 'loca' table...\nDumping 'glyf' table...\nwDumping 'kern' table...\nDumping 'name' table...\nDumping 'post' table...\nDumping 'gasp' table...\nDumping 'GPOS' table...\nDumping 'GSUB' table...\n`  \n- - - - - - - - -  \nCan you please explain the steps something like this so that I understand the process. This is what I did in Terminal:\n\nEnter which ttx, Return.  \nDrag ttx app to Terminal (displays the path to the app).  \nDrag dsig.ttx to Terminal (displays the path to the text file).  \nDrag SassoBoo.ttx file to Terminal (displays actual TrueType font file path).  \nReturn.  \nCompiling begins... (result is a dsig.ttf file).\n\n"
    },
    {
      "time": "23 Oct 2014 — 6:04am",
      "content": "The ttx you dragged is not the ttx returned by which ttx so I don't know if your /usr/local/bin/ttx is 2.3 or 2.4. Anyway here are the steps to get \"ttx -m font.ttf dsig.ttx\" with that kind of recipe. First remove all of the dsig.ttf files you got. Then for each font file\n\n1. drag ttx app to terminal (since it appears to have accepted your snippet)  \n2. type -m  \n3. drag the ttf font file to terminal (say SassoBoo.ttf)  \n4. drag dsig.ttx to terminal  \n5. return\n\nThat will compile only dsig.ttx, merge the DSIG into SassoBoo.ttf and produce a file named dsig.ttf; so here is point 6\n\n6. rename dsig.ttf as SassoBoo something.ttf\n\nThere are much better ways to proceed using scripts.\n\nPS Don't switch steps 3 and 4. You need to put the .ttf file before the .ttx file.\n\n"
    },
    {
      "time": "23 Oct 2014 — 8:10am",
      "content": "Well, it worked. I install the resulting TrueType font in Windows and have access to its features - hooray!\n\nBut I then instead of deleting just dsig.ttf files, I deleted the 'Dsig fldr' from the Desktop and tried again but no joy. Now I cannot get the Dsig fldr back again. Reinstating it does not work either. How do I create the Dsig fldr again? I'm guessing that's why the same routine won't work again?\n\nScratch that - have created it again and am trying to duplicate the first result... No joy \"Permission denied\".\n\nPasted the snippet again and got the Dsig fldr back. But the routine won't work now. Aaarrrggghhh!!!\n\nThink it works now. I did not have a space after \"-m\" and a trigger-happy Return key messed things up.\n\n`\nadrians-imac:Dsig fldr adrianshome$ /Users/adrianshome/Downloads/fonttools-2.4/Tools/ttx -m /Users/adrianshome/Desktop/Dsig\\ fldr/SassoBooIta.ttf /Users/adrianshome/Desktop/Dsig\\ fldr/dsig.ttx\nCompiling \"/Users/adrianshome/Desktop/Dsig fldr/dsig.ttx\" to \"/Users/adrianshome/Desktop/Dsig fldr/dsig.ttf\"...\nParsing 'DSIG' table...\nadrians-imac:Dsig fldr adrianshome$\n`\n\nAfter this, renaming the dsig.ttf file makes the font work in Windows. Thank you so much. Just to be able to get 'features' working in TT fonts , no-matter how its done is a great relief. There may be more elegant ways to do this, like a batch process as I have 70 fonts to do, but I'm a happy. So here's my final routine:\n\n1. Launch Terminal.\n\n2. Type ‘which ttx’, Return:  \n`/usr/local/bin/ttx\nadrians-imac:Dsig fldr adrianshome$`\n\n3. Drag TTX app to Terminal (since it accepted your Dsig fldr snippet):  \n`/Users/adrianshome/Downloads/fonttools-2.4/Tools/ttx`\n\n4. Type: -m (not forgetting a space after the m).  \n`/Users/adrianshome/Desktop/Dsig\\ fldr/SassoBooIta.ttf /Users/adrianshome/Desktop/Dsig\\ fldr/dsig.ttx`\n\nFirst remove all of the dsig#.ttf files in the Dsig fldr if there are any.  \nThen for each font file:  \n 5. Drag the ttf font file to Terminal (say SassoBoo.ttf)  \n 6. Drag dsig.ttx to terminal  \n 7. Return\n\nThat will compile only dsig.ttx, merge the DSIG into SassoBoo.ttf and produce a file named dsig.ttf in the Dsig fldr, so now…\n\n8. Rename dsig.ttf as SassoBoo something.ttf (original TrueType filename something)\n\nDon't switch steps 3 and 4. You need to put the .ttf file before the .ttx file.\n\n"
    },
    {
      "time": "23 Oct 2014 — 8:33am",
      "content": "You shouldn't need to type \"which ttx\" and drag ttx onto the terminal every time you use ttx. If ttx is installed properly, you should be able to just type \"ttx\" at the prompt, followed by whatever stuff you want to do with it.\n\nYou can test whether you have it installed properly by typing \"ttx -h\" at the command prompt. If you get \"command not found\", then it's not installed properly. If you get the ttx help text, then it should work to just type \"ttx\" at the prompt, etc.\n\n"
    },
    {
      "time": "23 Oct 2014 — 8:56am",
      "content": "Mark, there is a ttx that is installed but there are at least two versions of ttx on his system. There is ttx 2.4 in ~/Downloads/fonttools-2.4/Tools and there is some other ttx in /usr/local/bin. If ttx is typed directly in the terminal window it is /usr/local/bin/ttx that will be executed and if that ttx is not ttx 2.4 then the dsig.ttx file will be incompatible. Executing\n\nttx -h | head -4\n\nshould however give the version.\n\nTo be sure that the ttx 2.4 in Downloads is executed when ttx is called from a terminal window, ${HOME}/Downloads/fonttools-2.4/Tools need to be put before /usr/local/bin in his PATH and such things are tricky for newbies.\n\n"
    },
    {
      "time": "23 Oct 2014 — 9:26am",
      "content": "Ah, right. Ugh.\n\nIt is possible to do it with the more recent version of ttx, as Ben Kiel's comment at TypeDrawers shows:\n\n[http://typedrawers.com/discussion/comment/9651/#Comment\\_9651](http://web.archive.org/web/20141027051131/http:/typedrawers.com/discussion/comment/9651/#Comment_9651 \"http://typedrawers.com/discussion/comment/9651/#Comment\\_9651\")\n\nHe made me a script that incorporates this, so I know it works, but it's a bit above my head (which is why I hired him to do it for me).\n\n"
    },
    {
      "time": "24 Oct 2014 — 1:12pm",
      "content": "Another way is to define a variable TTX that contains the full path of the application. For instance, to handle 70 fonts in some folder with Adrian's current configuration, what can be done is this (make sure there is no dsig.ttf font in those 70 fonts).\n\n1. type cd with a space in the terminal window  \n2. drag the folder (not the fonts) containing the ttf fonts in the terminal window  \n3. return\n\n4. paste the following lines in the terminal window\n\n    FLDR=\"$HOME/Desktop/Dsig fldr\"\n    TTX=$HOME/Downloads/fonttools-2.4/Tools/ttx \n    for i in *.ttf \n    do \n      DSIG=\"$FLDR/${i%.ttf}.ttx\"\n      cp \"$FLDR\"/dsig.ttx \"$DSIG\"\n      $TTX -m $i \"$DSIG\"\n      rm -f \"$DSIG\"\n    done\n\n5. return\n\nThe 70 font files should now be in Dsig fldr with the name they previously had but with a DSIG thing.\n\nThe dsig.ttx snippet you have on typedrawers is however different from the one I got after decompiling the dummy DSIG produced by (an old version of) fontforge using ttx 2.4. I have no clue what the \"right\" snippet should be but what I got seems to be working for Adrian.\\*\n\nTo be complete, I should add that it is assumed that the Dsig folder already exists on the desktop and contains dsig.ttx for ttx 2.4. Such a folder had previously been created by pasting in a terminal window the following lines\n\n    FLDR=\"${HOME}/Desktop/Dsig fldr\"\n    mkdir -p \"$FLDR\"\n    cd \"$FLDR\"\n    cat > dsig.ttx<<EOF\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <ttFont sfntVersion=\"\\x00\\x01\\x00\\x00\" ttLibVersion=\"2.4\">\n      <DSIG>\n        <tableHeader flag=\"0x0\" numSigs=\"0\" version=\"1\"/>\n      </DSIG>\n    </ttFont>\n    EOF\n\n\\*That is also the ttx file I get when I decompile with ttx 2.4 the dummy signature generated by ttx 2.3 using the previous dsig.ttx file.\n\n"
    },
    {
      "time": "26 Oct 2014 — 3:31am",
      "content": "And at this moment I feel tempted to suggest a reference and tutorial on shell scripts...\n\n[http://www.vectorsite.net/tsshell.html](http://web.archive.org/web/20141027051131/http:/www.vectorsite.net/tsshell.html) and [http://tldp.org/LDP/Bash-Beginners-Guide/html/index.html](http://web.archive.org/web/20141027051131/http:/tldp.org/LDP/Bash-Beginners-Guide/html/index.html) are the beginners’ guides I currently have on file.\n\n[http://tldp.org/LDP/abs/html/index.html](http://web.archive.org/web/20141027051131/http:/tldp.org/LDP/abs/html/index.html) is an intermediate/advanced guide.\n\nSome of this ( [http://rute.2038bug.com/](http://web.archive.org/web/20141027051131/http:/rute.2038bug.com/)) may be applicable on BSD-type systems as well.\n\n"
    },
    {
      "time": "24 Oct 2014 — 2:38am",
      "content": "I have another 100 or so to do also, so will get into your batch processing method later Té - thanks. But right now - Having complied about a dozen fonts using Michel's method a couple of fonts complied into two files: font.ttf (of 36k) and font.ttx (of 1.2 Mb). Instead of compiling and parsing it's now 'Dumping'. Any ideas why are these compiling differently?\n\n`adrians-imac:~ adrianshome$ /Users/adrianshome/Downloads/fonttools-2.4/Tools/ttx /Users/adrianshome/Desktop/Dsig\\ fldr/SassoMonMed.ttf /Users/adrianshome/Desktop/Dsig\\ fldr/dsig.ttx\nDumping \"/Users/adrianshome/Desktop/Dsig fldr/SassoMonMed.ttf\" to \"/Users/adrianshome/Desktop/Dsig fldr/SassoMonMed.ttx\"...\nDumping 'GlyphOrder' table...\nDumping 'head' table...\nDumping 'hhea' table...\nDumping 'maxp' table...\nDumping 'OS/2' table...\nDumping 'hmtx' table...\nDumping 'LTSH' table...\nDumping 'VDMX' table...\nDumping 'hdmx' table...\nDumping 'cmap' table...\nDumping 'fpgm' table...\nDumping 'prep' table...\nDumping 'cvt ' table...\nDumping 'loca' table...\nDumping 'glyf' table...\nDumping 'kern' table...\nDumping 'name' table...\nDumping 'post' table...\nDumping 'gasp' table...\nDumping 'GPOS' table...\nDumping 'GSUB' table...\nCompiling \"/Users/adrianshome/Desktop/Dsig fldr/dsig.ttx\" to \"/Users/adrianshome/Desktop/Dsig fldr/dsig.ttf\"...\nParsing 'DSIG' table...\nadrians-imac:~ adrianshome$\n`\n\n"
    },
    {
      "time": "24 Oct 2014 — 3:41am",
      "content": "you forgot to type `-m`.\n\nThat is another reason batch commands are better; they are less prone to \"typos\".\n\n"
    },
    {
      "time": "24 Oct 2014 — 5:35am",
      "content": "Ooops! Back on track now. Thanks for pointing that out. When I've finished this clutch of fonts I'll investigate batch commands.\n\n"
    }
  ]
}

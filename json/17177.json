{
  "id": "17177",
  "title": "Random feature",
  "forum": "Build",
  "tags": [
    "Build"
  ],
  "content": "Hello all,  \nI like to build a random feature in a typeface I'm working on.  \nEvery character has four alternates and I like the fontsoftware to choose between them.  \nCan I do this in OpenType? And if so, how?  \nThanks.  \nPieter\n\n",
  "author": "Pieter van Rosmalen",
  "time": "10 Jan 2006 — 3:35am",
  "uid": "5585",
  "comments": [
    {
      "time": "10 Jan 2006 — 7:28am",
      "content": "Although rand is in the OT spec, no application currently support it (or are likely to any time soon).\n\nYou can emulate it in some way using calt though. Check our Thomas Phinney's sample code from the Adobe FDK forums: [http://www.adobeforums.com/cgi-bin/webx?50@755.561rfSM0Gas.1@.3bbc5ea4](http://web.archive.org/web/20131019084924/http:/www.adobeforums.com/cgi-bin/webx?50@755.561rfSM0Gas.1@.3bbc5ea4 \"http://www.adobeforums.com/cgi-bin/webx?50@755.561rfSM0Gas.1@.3bbc5ea4\")\n\n"
    },
    {
      "time": "10 Jan 2006 — 8:27am",
      "content": "Thanks you, but it's not working. I made a test font with code like this:\n\nfeature calt { # Connection or other contextual Forms  \n# Latin  \nlookup rotate {  \nsub @default @default' by @calt1;  \nsub @calt1 @default' by @calt2;  \nsub @calt2 @default' by @calt3;  \nsub @calt3 @default' by @calt4;  \n} rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \nlookup rotate;  \n} calt;\n\n@default = [a b c d e f g h i j];  \n@calt1 = [b c d e f g h i j a];  \n@calt2 = [c d e f g h i j a b];  \n@calt3 = [d e f g h i j a b c];  \n@calt4 = [e f g h i j a b c d];\n\nI only get an a followed by a b. Is there something wrong in the code?  \nThanks!\n\n"
    },
    {
      "time": "10 Jan 2006 — 9:22am",
      "content": "If I'm understanding your problem correctly, I think it's because each of your groups is effectively equivalent to the next. A better example would be\n\n\\*\\*\\*\\*\\*\n\n@default = [a b c d];  \n@calt1 = [e g h i];  \n@calt2 = [j k l m];  \n@calt3 = [n o p q];\n\n\\*\\*\\*\\*\\*\n\nwhere each of the groups contain unique characters.\n\nso, aaaa becomes aejn.\n\n"
    },
    {
      "time": "10 Jan 2006 — 9:45am",
      "content": "Yes, that's it. It's working. Thanks!  \nIs there a reason why 'lookup rotate' is repeated 13 times? It also works when it's only one time in the code.\n\n"
    },
    {
      "time": "10 Jan 2006 — 10:24am",
      "content": "To be honest, I'm stratching my head about that too. Seeing this thread reminded me to investigate that aspect of it further - if I find out, I'll post back here :)\n\n"
    },
    {
      "time": "10 Jan 2006 — 12:00pm",
      "content": "That will be great. Thanks for your help!\n\n"
    },
    {
      "time": "10 Jan 2006 — 1:05pm",
      "content": "I've never done any [OpenType](http://web.archive.org/web/20131019084924/http:/typophile.com/wiki/OpenType) programming, but I would guess that the 13 lookups work like modulo.\n\nSo instead of the eight alternatives coming in this order:  \n1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8\n\nYou get a pseudo-random order:  \n1 6 3 8 5 2 7 4 1 6 3 8 5 2 7 4\n\nBut there's probably more to it since I get the same series repeating...\n\n"
    },
    {
      "time": "10 Jan 2006 — 9:15pm",
      "content": "You can make seemingly-random randomization, but not actually-random randomization. The OpenType version of LetTerror's [Kosmik](http://web.archive.org/web/20131019084924/http:/www.eccentrifuge.com/clients/KosmikOT.html) by John Butler does this, as does Christian Schwartz's [Local Gothic](http://web.archive.org/web/20131019084924/http:/www.orangeitalic.com/local.shtml), thanks to Tal Leming's brilliant code.\n\n"
    },
    {
      "time": "10 Jan 2006 — 11:11pm",
      "content": "Does the OT Kozmik still utilize just the three variants of each glyph, as in the original?\n\nHow many variants in Local Gothic?\n\n"
    },
    {
      "time": "17 Jan 2006 — 6:37pm",
      "content": "Zapfino Extra LT Pro uses approx. 600 contextual substitutions to simulate pseudorandom typesetting. Each letter has between 4 and 7 variants. Some of the feature definition code was generated by Python code that I wrote.\n\nThe slides that I showed at TypoTechnica in London show some excerpts from the Python code and the OT code for Zapfino Extra LT Pro that I developed:  \n [http://www.twardoch.com/adam/project.php?pid=0049](http://web.archive.org/web/20131019084924/http:/www.twardoch.com/adam/project.php?pid=0049 \"http://www.twardoch.com/adam/project.php?pid=0049\")\n\nRegards,  \nAdam\n\n"
    },
    {
      "time": "26 Jan 2006 — 10:50am",
      "content": "yay! i found a cached version of [Christian Robertson](http://web.archive.org/web/20131019084924/http:/typophile.com/wiki/Christian%20Robertson)'s thread for [Dear Sarah](http://web.archive.org/web/20131019084924/http:/typophile.com/wiki/Dear%20Sarah) on Google. Here it is with Christian's OT code hacks intact:\n\nExcerpt of Christian's comments:\n\n<cite>It's not true randomness. The OT code looks something like this:</cite>\n\n`@random_set_1 = [a d g j l m n o c];\n@random_set_2 = [k e i n p q t v z];\n@letter = [a b c d e f g h i j k l m n o p q r s t u v w x y z];\n@letter_alt = [a.alt b.alt c.alt d.alt e.alt f.alt g.alt h.alt i.alt j.alt k.alt l.alt m.alt n.alt o.alt p.alt q.alt r.alt s.alt t.alt u.alt v.alt w.alt x.alt y.alt z.alt];`\n\nfeature calt {  \nsub @random\\_set\\_1 @letter @letter' by @letter\\_alt;  \nsub @random\\_set\\_2 @letter @letter' by @letter\\_alt2;  \n} calt;\n\n<cite>If you put in enough of these ugly hacks it starts to appear random. You would also want to make sure that no two letters were ever the same right next to each other. There are only so many of those that happen regularly in English, so I have added specific substitution rules for each of those cases (ee ff gg ll mm nn oo, etc.) Also notice that I have placed an @letter between the @random character. This makes the pattern even more difficult to spot. You might notice the funky h after every t, but you wouldn't notice the funky h after t-anycharacter, (unless you were freaking crazy).</cite>\n\n<cite>In the case of this font, the fact that there are a different set of characters to connect to the o b v w also helps the font appear more random. The randomness feature above needs to be adjusted to get the connectors right for this one, which makes it more complicated. To be honest, I haven't completely figured it out.</cite>\n\n[Full Thread Here](http://web.archive.org/web/20131019084924/http:/72.14.203.104/search?q=cache:xsEFmPhUpBIJ:www.typophile.com/forums/messages/29/34366.html%3F1096994612+dear+sarah+site:typophile.com&hl=en&gl=us&ct=clnk&cd=2&client=firefox-a)\n\nalso, for a bit of pseudo randomness, i think you could combine a couple contextual lookups that do different things. For example, you could have 2 sets of letters and have every third one switch to an alternate. Then have another lookup that changes double letter combinations so that the second letter in the combo gets switched out by its alternate. the interplay of these two functions will give a predictable, but somewhat random appearing effect. this is just one example, there are probably endless ways of combining effects such as this to get something that approaches randomness.\n\n"
    },
    {
      "time": "27 Jan 2006 — 4:12am",
      "content": "Thanks for the information Paul, but I don't get this line:\n\nsub @random\\_set\\_2 @letter @letter' by @letter\\_alt2;\n\nYou mean I have to make and @letter\\_alt2 class?\n\nPieter\n\n"
    },
    {
      "time": "27 Jan 2006 — 8:24am",
      "content": "hmmm, i'm not sure exactly what christian meant, but i think just using the @letter\\_alt class again would work...\n\n"
    },
    {
      "time": "24 Dec 2011 — 12:21pm",
      "content": "How should I change my OTF code to get the line “I need“ (image link [http://clip2net.com/s/1qAvm](http://web.archive.org/web/20131019084924/http:/clip2net.com/s/1qAvm \"http://clip2net.com/s/1qAvm\"))?\n\nMy code:\n\n@letter = [b c d e f g h i j k l m n o p q r s t u v w x y z space];  \n@letter1 = [a c d e f g h i j k l m n o p q r s t u v w x y z space];  \n@letter2 = [a b d e f g h i j k l m n o p q r s t u v w x y z space];\n\nfeature calt {  \nlookup rotate {  \nsub a a' by a.calt1;  \nsub a.calt1 a' by a.calt2;  \nsub a.calt2 a' by a;  \nsub a @letter a' by a.calt1;  \nsub a.calt1 @letter a' by a.calt2;  \nsub a.calt2 @letter a' by a;  \nsub a @letter @letter a' by a.calt1;  \nsub a.calt1 @letter @letter a' by a.calt2;  \nsub a.calt2 @letter @letter a' by a;  \nsub a @letter @letter @letter a' by a.calt1;  \nsub a.calt1 @letter @letter @letter a' by a.calt2;  \nsub a.calt2 @letter @letter @letter a' by a;  \nsub a @letter @letter @letter @letter a' by a.calt1;  \nsub a.calt1 @letter @letter @letter @letter a' by a.calt2;  \nsub a.calt2 @letter @letter @letter @letter a' by a;  \nsub a @letter @letter @letter @letter @letter a' by a.calt1;  \nsub a.calt1 @letter @letter @letter @letter @letter a' by a.calt2;  \nsub a.calt2 @letter @letter @letter @letter @letter a' by a;  \nsub a @letter @letter @letter @letter @letter @letter a' by a.calt1;  \nsub a.calt1 @letter @letter @letter @letter @letter @letter a' by a.calt2;  \nsub a.calt2 @letter @letter @letter @letter @letter @letter a' by a;\n\nsub b b' by b.calt1;  \nsub b.calt1 b' by b.calt2;  \nsub b.calt2 b' by b;  \nsub b @letter1 b' by b.calt1;  \nsub b.calt1 @letter1 b' by b.calt2;  \nsub b.calt2 @letter1 b' by b;  \nsub b @letter1 @letter1 b' by b.calt1;  \nsub b.calt1 @letter1 @letter1 b' by b.calt2;  \nsub b.calt2 @letter1 @letter1 b' by b;  \nsub b @letter1 @letter1 @letter1 b' by b.calt1;  \nsub b.calt1 @letter1 @letter1 @letter1 b' by b.calt2;  \nsub b.calt2 @letter1 @letter1 @letter1 b' by b;  \nsub b @letter1 @letter1 @letter1 @letter1 b' by b.calt1;  \nsub b.calt1 @letter1 @letter1 @letter1 @letter1 b' by b.calt2;  \nsub b.calt2 @letter1 @letter1 @letter1 @letter1 b' by b;  \nsub b @letter1 @letter1 @letter1 @letter1 @letter1 b' by b.calt1;  \nsub b.calt1 @letter1 @letter1 @letter1 @letter1 @letter1 b' by b.calt2;  \nsub b.calt2 @letter1 @letter1 @letter1 @letter1 @letter1 b' by b;  \nsub b @letter1 @letter1 @letter1 @letter1 @letter1 @letter1 b' by b.calt1;  \nsub b.calt1 @letter1 @letter1 @letter1 @letter1 @letter1 @letter1 b' by b.calt2;  \nsub b.calt2 @letter1 @letter1 @letter1 @letter1 @letter1 @letter1 b' by b;\n\nsub c c' by c.calt1;  \nsub c.calt1 c' by c.calt2;  \nsub c.calt2 c' by c;  \nsub c @letter2 c' by c.calt1;  \nsub c.calt1 @letter2 c' by c.calt2;  \nsub c.calt2 @letter2 c' by c;  \nsub c @letter2 @letter2 c' by c.calt1;  \nsub c.calt1 @letter2 @letter2 c' by c.calt2;  \nsub c.calt2 @letter2 @letter2 c' by c;  \nsub c @letter2 @letter2 @letter c' by c.calt1;  \nsub c.calt1 @letter2 @letter2 @letter2 c' by c.calt2;  \nsub c.calt2 @letter2 @letter2 @letter2 c' by c;  \nsub c @letter2 @letter2 @letter2 @letter2 c' by c.calt1;  \nsub c.calt1 @letter2 @letter2 @letter2 @letter2 c' by c.calt2;  \nsub c.calt2 @letter2 @letter2 @letter2 @letter2 c' by c;  \nsub c @letter2 @letter2 @letter2 @letter2 @letter2 c' by c.calt1;  \nsub c.calt1 @letter2 @letter2 @letter2 @letter2 @letter2 c' by c.calt2;  \nsub c.calt2 @letter2 @letter2 @letter2 @letter2 @letter2 c' by c;  \nsub c @letter2 @letter2 @letter2 @letter2 @letter2 @letter2 c' by c.calt1;  \nsub c.calt1 @letter2 @letter2 @letter2 @letter2 @letter2 @letter2 c' by c.calt2;  \nsub c.calt2 @letter2 @letter2 @letter2 @letter2 @letter2 @letter2 c' by c;  \n} rotate;  \n} calt;\n\n"
    },
    {
      "time": "24 Dec 2011 — 2:45pm",
      "content": "@default = [b c d e f g h i j k l m n o p q r s t u v w x y z space];  \n@alt1 = [a c d e f g h i j k l m n o p q r s t u v w x y z space];  \n@alt2 = [a b d e f g h i j k l m n o p q r s t u v w x y z space];\n\nfeature calt {  \nlookup rotate {  \nsub @default @default' by @alt1;  \nsub @alt1 @default' by @alt2;  \nsub @alt2 @alt2' by @default;  \n} rotate;  \nlookup rotate;  \n} calt;\n\n"
    },
    {
      "time": "24 Dec 2011 — 11:05pm",
      "content": "Thank You.\n\nI understand that it's the general code.  \nBut I don't understand how I should change it.  \nCould you explain me how to apply it to my case?\n\n"
    },
    {
      "time": "24 Dec 2011 — 11:52pm",
      "content": "Every character have two alternates.  \nThis code doesn't show b.calt1 and c.calt2.  \nThis code does not include the work of all the other letters.  \nHow can I do it?\n\nYour code:\n\n@default = [b c d e f g h i j k l m n o p q r s t u v w x y z space];  \n@alt1 = [a.calt1 c.calt1 ....... space];  \n@alt2 = [a.calt2 b.calt2 ....... space];\n\nfeature calt {  \nlookup rotate {  \nsub @default @default' by @alt1;  \nsub @alt1 @default' by @alt2;  \nsub @alt2 @alt2' by @default;  \n} rotate;  \nlookup rotate;  \n} calt;\n\n"
    },
    {
      "time": "25 Dec 2011 — 1:58am",
      "content": "I correct my code. All works.  \nDo not work correctly only a and j characters.\n\nwhy?\n\nMy new code:\n\nfeature calt {  \nlookup rotate {\n\nsub @default @default' by @calt1;  \nsub @calt1 @default' by @calt2;  \nsub @calt2 @default' by @default;\n\nsub @default\\_jpqx @default\\_jpqx' by @calt1\\_jpqx;  \nsub @calt1\\_jpqx @default\\_jpqx' by @default\\_jpqx;\n\n} rotate;  \nlookup rotate;  \n} calt;\n\n@default = [a b c d e f g h i k l m n o r s t u v w y z space];  \n@calt1 = [a.calt1 b.calt1 c.calt1 d.calt1 e.calt1 f.calt1 g.calt1 h.calt1 i.calt1 k.calt1 l.calt1 m.calt1 n.calt1 o.calt1 r.calt1 s.calt1 t.calt1 u.calt1 v.calt1 w.calt1 y.calt1 z.calt1 space];  \n@calt2 = [a.calt2 b.calt2 c.calt2 d.calt2 e.calt2 f.calt2 g.calt2 h.calt2 i.calt2 k.calt2 l.calt2 m.calt2 n.calt2 o.calt2 r.calt2 s.calt2 t.calt2 u.calt2 v.calt2 w.calt2 y.calt2 z.calt2 space];\n\n@default\\_jpqx = [j p q x space];  \n@calt1\\_jpqx = [j.calt1 p.calt1 q.calt1 x.calt1 space];\n\n"
    },
    {
      "time": "26 Dec 2011 — 3:05pm",
      "content": "I don't fully understand this, but a and j are the first in each group. If there is no better answer, you can probably go around the problem by starting each group with another character that has no alternates. I assume each group ends with space for a similar reason.\n\n"
    }
  ]
}

{
  "id": "50601",
  "title": "how to draw smooth S?",
  "forum": "Design",
  "tags": [
    "Design"
  ],
  "content": "how do you draw a smooth S curve in FontLab when drawing the letter S?\n\n",
  "author": "ghurman",
  "time": "17 Oct 2008 — 1:58am",
  "uid": "19465",
  "comments": [
    {
      "time": "17 Oct 2008 — 5:12am",
      "content": "Use maximum 12 nodes.\n\n"
    },
    {
      "time": "17 Oct 2008 — 6:10am",
      "content": "that's a silly answer, G. \\>^p\n\n"
    },
    {
      "time": "17 Oct 2008 — 6:25am",
      "content": "If you post a screen capture of your nodes it might help.\n\n"
    },
    {
      "time": "17 Oct 2008 — 7:07am",
      "content": "I also only use 12 nodes, usually. Six on each 'hook', no nodes on the spine.\n\n"
    },
    {
      "time": "17 Oct 2008 — 7:11am",
      "content": "12 nodes assumes a sanserif face, no? you will necessarily need more if there are serifs on your letter. G. Leonidas argues that nodes are not required along the spine of the S, G. Unger purports that a short straight segment in the spine (which involves 4 nodes) benefits the structure of the letter. As with anything in typeface design, the answer to a general question is likely to involve the following phrases: 'it depends' and 'use your eyes'.\n\n"
    },
    {
      "time": "17 Oct 2008 — 8:02am",
      "content": "[http://typophile.com/node/13036](http://web.archive.org/web/20131019111746/http:/typophile.com/node/13036)\n\nDon't miss the excellent illustrations John Hudson links to in that thread.\n\n"
    },
    {
      "time": "17 Oct 2008 — 7:44pm",
      "content": "\\>\\> _12 nodes assumes a sanserif face, no?_\n\nAh, yeah, thats right. A serif face would obviously need more.\n\nAlso, nice illustrations in Hudson's post in that thread. Sometimes the spine can use additional nodes, but in my (limited, but still) experience so far, I usually don't seem to need them all that often.\n\n"
    },
    {
      "time": "17 Oct 2008 — 9:31pm",
      "content": "\\> nodes are not required along the spine of the S\n\nExcept in cases where you output a TT font from cubic bezier (PostScript) data, in which case the absence of explicit nodes where the points of inflection are can cause major warping of the outlines. At least in the case of ol' Fontographer.\n\nhhp\n\n"
    },
    {
      "time": "19 Oct 2008 — 12:45pm",
      "content": "<cite>that’s a silly answer, G. &gt;^p</cite>\n\nYes, I know. Couldnt help myself. But there is some truth behind it. 12 nodes for the S-curve. Then if the curve has serifs or not thats another story. But I think that if you want it really smooth, then 12 nodes is the best. But sometimes the S have a straighter area aomewhere along the \"big curve\" and then of course it needs more nodes.  \nIt is however very good practice to draw an S with only 12 nodes, I believe.\n\n"
    },
    {
      "time": "19 Oct 2008 — 12:53pm",
      "content": "_It is however very good practice to draw an S with only 12 nodes, I believe._\n\ni think this is usually safest, as you must be an expert curve handler to add more without making the spine look 'kinky'. but i believe that in certain circumstances, the spine might benefit from additional control which necessitates more points.\n\n"
    },
    {
      "time": "20 Oct 2008 — 6:32am",
      "content": "I thought it was recommended that one puts a node at the points of inflection on the spine?\n\n"
    },
    {
      "time": "20 Oct 2008 — 7:04am",
      "content": "from the heavens? or by whom?\n\n"
    },
    {
      "time": "20 Oct 2008 — 8:15am",
      "content": "I rarely trust 12 points to be enough, and usually fiddle around with a few more, to nuance the central stretch.  \nHowever, once I've done that, I find that the shape I've created using several extra points along the middle can usually be made almost exactly without those extra points. But not always.\n\n"
    },
    {
      "time": "20 Oct 2008 — 8:37am",
      "content": "Paul, historically there have been problems with leaving out explicit vertices at inflection points. You can see an example by outputting a TT font from Fontographer. Even if these days FontLab is smarter than that, somewhere along the line (like the RIP of an output device, or a PostScript emulator) you might hit problems, so it's safer to place vertices there (usually towards the very end of the design process).\n\nFunny things can also happen when you have a curve that ends in a corner point without a BCP.\n\nhhp\n\n"
    },
    {
      "time": "20 Oct 2008 — 8:38am",
      "content": "Paul, can't remember, I'm afraid.\n\nAlthough doesn't a point of inflection represent the meeting of two curves? I find that the nodes at the points of inflection are an easier way to get the thickness of the spine that I want. If John H puts them in last, that's up to him. But he does appear to put them in. Why?\n\nHave I been imagining that the inflection points need a node? Seems a really weird thing to have dreamt up but maybe I did???\n\n"
    },
    {
      "time": "20 Oct 2008 — 1:56pm",
      "content": "<cite>so it’s safer to place vertices there...</cite>\n\nI would probaby do this also in the end either as a safety precation or just to put some stability in the curve (to lock this area), but it has nothing to do with getting a smooth S as the original question was.\n\nFunny how one little question can grow into a lively discussion –&nbsp;I love it :)\n\n"
    },
    {
      "time": "21 Oct 2008 — 2:31am",
      "content": "I always work with 4 four tangents in the diagonal section of the S/s.  \nIt's much, much harder to have precise control over this section with just those points on the top and bottom curves.\n\nBest,  \nArtur\n\n"
    },
    {
      "time": "22 Oct 2008 — 6:10am",
      "content": "it seems to me that there's no geometrical explanation to the drawing process, instead the trial-and-error method is used to draw a harmoniusly curved \"S\" glyph.\n\nin my opinion there must be some regular geometry -- maybe a polygonal grid -- behind a well shaped \"S\" letter simply because it's well shaped.\n\n"
    },
    {
      "time": "22 Oct 2008 — 6:37am",
      "content": "\\>in my opinion there must be some regular geometry — maybe a polygonal grid — behind a well shaped “S” letter simply because it’s well shaped.\n\nIn my opinion that's a fundamental mistake. People have been looking for simple--and not so simple--geometry for centuries and haven't found it. Almost everything in letters violates simple, regular geometry, because that's not the way the eye-brain combo works. And the S has one of the most complex shapes.\n\nIn the case of the S and s, a basic principle is that the bottom part needs to be bigger than the top part. This follows two principles, both of which violate simple geometry. The first is that when you split something vertically, the divide, to look equal, generally has to be higher than equally bisecting the space vertically. The second principle is that the top part needs to be narrower than the bottom, to look more secure and stable. Hence the top arm of the E is often shorter, and the top of the K, S and X smaller and narrower than the bottom. Similar stuff happens in the lower case. You can see the same principles at work in the design of furniture, buildings, etc.\n\n"
    },
    {
      "time": "22 Oct 2008 — 8:11am",
      "content": "<cite>The first is that when you split something vertically, the divide, to look equal, generally has to be higher than equally bisecting the space vertically. The second principle is that the top part needs to be narrower than the bottom, to look more secure and stable.</cite>\n\nBill, there is a tendency for some designers to overdo these two required differences, rather than to get the top and bottom to look right. The same thing can be said of many overshoots which end up looking too big and ink traps which can distort the look of a character. It's as if some designers want you to know that they have attended to such issues, but end up only making more trouble. There is one logo which I always think has O's (or S's) that are far too tall when I see it on trucks in UK but I can't remember for the life of me which it is. Think it might be [Tesco](http://web.archive.org/web/20131019111746/http:/www.tesco.com/)?\n\n"
    },
    {
      "time": "22 Oct 2008 — 8:44am",
      "content": "William is right.\n\nNick, keep in mind that the degree to which things like bottom-heaviness and overshoots are suitable depends on scale. For example, smaller point sizes require more overshoot.\n\nhhp\n\n"
    },
    {
      "time": "22 Oct 2008 — 9:32am",
      "content": "Hrant, I get that William is right, but some designs have overcompensated on overshoot for sure. Maybe required overshoot is a subjective issue!? You're not telling me though that fonts should have smaller relative overshoots the larger they get, other than remaining in proportion to the font size, are you? Surely that's just maths. If it's not then I have to pack up and go home. No designer is expected to design fonts at different sizes. Maybe you are telling me that. I know some designers have offered different fonts depending on the weight you're going to use (as well as different 'grades') but I never thought that overshoot would have been different between them...\n\n"
    },
    {
      "time": "22 Oct 2008 — 9:34am",
      "content": "Sorry, I have as usual taken this discussion way off-piste. Why doesn't someone overshoot me and put me out of my misery? (I'm not really miserable.)\n\n"
    },
    {
      "time": "22 Oct 2008 — 9:58am",
      "content": "\\> fonts should have smaller relative overshoots the larger they get\n\nSmaller _absolute_ overshoots (meaning in the font design). Which makes sense. Plus it's mentioned in a footnote in Harry Carter's edition of Fournier.\n\n\\> No designer is expected to design fonts at different sizes\n\nWhy not, since scale affects the net results? Before digital type (actually before phototype... actually before the pantograph) a given font design was for one size only, and was -generally- designed to be optimal at that size. Now the convenience of using a font at any size has overpowered the sense not to. Sure, a give font can serve within a range of sizes not just a single size, so scaling is useful, but in practice this range is quite narrow. Fortunately during the past decade many type designers have started seeing the light: they point out the scalar limits of their designs (like indicating whether it's a text font or a display font) and some of them even make different cuts within the text range.\n\nhhp\n\n"
    },
    {
      "time": "23 Oct 2008 — 5:46am",
      "content": "Hrant, are you saying that as a font tends to ∞ points, the overshoot tends to zero? (I know that's rather hypothetical but please humour me!) If so, can you explain why that's the case because I'm just not getting it.\n\nDo you think that's why the overshoots on the TESCO logo look too big on a lorry but fine on a tin of catfood? If so, I disagree, I think the overshoots on the Tesco logo always look too big, to me at least. Check it out...\n\n ![](http://web.archive.org/web/20131019111746im_/http:/typophile.com/files/Tesco_s_6612.gif)\n\n"
    },
    {
      "time": "23 Oct 2008 — 7:28am",
      "content": "\\> are you saying that as a font tends to ∞ points, the overshoot tends to zero?\n\nI guess. Although it might be worth noting that the relationship is not linear, it's probably something like quadratic.\n\nAs for the Tesco logo, I think smaller sizes would help, but it could still be designed too poorly!\n\nhhp\n\n"
    },
    {
      "time": "23 Oct 2008 — 8:37am",
      "content": "Since we're talking about perception, I'd guess what's important is not the physical size of the letters but rather the scale as seen by the eye - that is, wouldn't it make sense that if I see lettering on a truck across a parking lot and lettering on a can I hold in my hand at the same scale (taking up the same portion of my vision), the overshoots would work identically for both?\n\n"
    },
    {
      "time": "23 Oct 2008 — 1:39pm",
      "content": "Perhaps slow readers need smaller overshoots.\n\n"
    },
    {
      "time": "26 Oct 2008 — 9:32pm",
      "content": "It really depends on what style font you want. If you were to design your font in Illustrator CS3, I usually go for 26 points.\n\nAlso heres a hint: Use grids, It'll be quick and easy. But if you want to make a beautiful \"S\", then you'll gave to start reading some type books.\n\n"
    },
    {
      "time": "29 Oct 2008 — 4:00pm",
      "content": "I wonder if extra points might make things easier/faster for hinters. When I was starting to learn about tt hinting I quickly noticed that point placement could make it far easier or harder to do.\n\nGerrard Under showed us an \"a\" he designed and where he put extra points & why. I have little doubt that some \"s\" shapes might benefit from similar finesse. judging by the subtle enhancement they provide it is also almost certainly true that he got as close as possible without the extra points before adding them.\n\nSo as usual, it's time to dine on a big pile of \"it depends\" - just as Paul Hunt said.\n\n"
    }
  ]
}

{
  "id": "311",
  "title": "Extending a font to several weights",
  "forum": "Build",
  "tags": [

  ],
  "content": "In my friday fonts efforts, I'm getting close to having one weight just the way I want it. Next I   \nwant to start thinking about other weights. What is the \"right\" way to go about this. I have   \na regular version, and I want a light, regular, bold, and heavy.   \n   \nIn looking through the FontLab pdf manual I got this idea: If I draw up the heavy version   \nnext, taking care to use similar points to define the outlines, can I use that and the   \nregular version I have to create a multiple master for the bold? From there, I could   \nextrapolate to the light version. I imagine it will take some tweeking to get these intermediate   \nweights the way I want them.   \n   \nMy questions are these:   \nHow hard is it to set up a mulitple master from two weights? How much tweaking is   \nneccessary? Will this save time, or cause more of a headache? Does this make any   \nsense at all?   \n   \nThanks for your thoughts!   \nRandy\n\n",
  "author": "<a href=\"/web/20110220224309/http://typophile.com/user/618\" title=\"View user profile.\">aquatoad</a>",
  "time": "<br>",
  "uid": "618",
  "comments": [
    {
      "time": "",
      "content": "You'll get different answers about the \"right way\", but to me best compromise is what I did in Patria:   \n   \n1) Assuming you have a non-extreme weight at hand, use the software's \"weight change\" to make the light and dark extremes. Confine to the x-axis.   \n2) Tweak like there's no tomorrow, specifically by decreasing the contrast in the light extreme while increasing it in the dark. But you should also adjust the overshoots: the lighter the greater.   \n3) Create a new intermediate of where you started, and compare it to your original. Assuming you still like your original better, tweak the two extremes (not the resultant intermediate) to get back to where your original was.   \n4) Once you end up with extremes that you like, and they generate your original intermediate weight to your liking, you're done. You shouldn't have to tweak any intermediates at all. In general. :-)   \n   \nTwo words of caution:   \n1) Very light weights reveal problems in stroke thickness very obviously.   \n2) Very dark weights can get too pudgy. It takes a lot of expertise to put the sparkle in them - few people can manage - I for one can't. Look at the darkest weights of Galliard for guidance there.   \n   \nBTW, you don't have to make an actual MM font - in fact most users would have trouble with that! Just have your axis \"internal\" to your font app, and generate the necessary intermediate weights. Four weights is a good number - too many weights and some users can get confused. If you have very light and dark weights, go to 6.   \n   \nSpacing the weight gradation is v e r y t r i c k y ... and very open to personal preference.   \n   \nhhp\n\n"
    },
    {
      "time": "",
      "content": "\\> the lighter the greater   \n   \nSorry - the other way around!   \n   \nhhp\n\n"
    },
    {
      "time": "",
      "content": "Good tips, Hrant, but I avoid using automated \"Change Weights\".   \nI don't think it's worth it. A lot of tweaking will be necessary   \nanyway, so I just \"change weights\" myself, manually. It's like   \nsplitting together your steps 1 and 2. ;-)\n\n"
    },
    {
      "time": "",
      "content": "Randy -   \n   \nAs Eduardo and Hrant have pointed out, there really isn't a correct way to do this. Maybe try it both ways on a few glyphs and compare the results. It could be a nice experiment. I prefer Eduardo's approach. I draw one extreme and then paste it into the mask layer in FL 4.5 and use it as a reference for drawing the other extreme weight.\n\n"
    },
    {
      "time": "",
      "content": "FontLab 4.5 ships with a demo Python script called 'Family Generator', which automatically produces a Light, Bold and Heavy design from a Regular. Of course, the results are never perfect and always require manual editing to clean them up, but depending on your design this can be surprisingly effective as a first step. The other thing to realise, of course, is that you can _edit the Python script_, and so tailor the weight and width adjustments made by the script to your design.\n\n"
    },
    {
      "time": "",
      "content": "Another consideration if you're truly considering producing   \na Multiple Master--OS X supports MMs, albeit with sticks   \nand chicken wire. I can get them to display, but printing   \n and creating outlines wreaks havoc. From what I've read,   \n MMs are on the way out.\n\n"
    },
    {
      "time": "",
      "content": "i think kyle is absolutely right. forget multiple master, it's hardly breathing anymore.   \n   \nthere probably isn't a correct way and it usually depends on the kind of design you're working on. i personally have found it to be efficient to work both ways at the same time. you can use the \"change weight comand - resize to x-height\" as a sort of reference and also to get your accents, punctuation etc. you still have to tweak those, but it's less of a hassle then also tweaking all the main letters from that. those you should definately draw manually.   \n   \nit also helps layering all weights of one character atop of each other and optimizing the \"new\" weights right there in one window in comparisson with your finished regular weight.\n\n"
    },
    {
      "time": "",
      "content": "Multiple master fonts never were a big hit commercially. I've got about three dozen of them and I think that was about how many were made.   \n   \nBut, they do work well on pre-OS X systems and, quite frankly, will for quite some time. OS X didn't exactly come out during the best of economic times and it still hasn't pulled over the \"majority\" of folks, or so the reports from MacWorld indicate.   \n   \nProblem with Multiple Masters was that they were -backwards. Works better to extrapolate from the medium point not interpolate from the end points. Like QuickDraw GX did back in 1994.   \n   \nStill waiting, and waiting for OpenType to look spectacular. Starting to look like just another format isn't it?\n\n"
    },
    {
      "time": "",
      "content": "\"FontLab 4.5 ships with a demo Python script called 'Family Generator'\"   \n   \nI've searched and searched and can' find it..are you sure it came with FL4.5 or is it one of your own? ![:-)](http://web.archive.org/web/20110220224309im_/http:/www.typophile.com/forums/clipart/happy.gif)\n\n"
    },
    {
      "time": "",
      "content": "I thought it came with FL4.5, but perhaps Yuri sent it to me to test and has not released it.   \n   \nYou have Python installed and scripts are working, yes?\n\n"
    },
    {
      "time": "",
      "content": "Yepp, but that's not included. Maybe something to pass along if it free?\n\n"
    },
    {
      "time": "",
      "content": "I'll have to ask Yuri.\n\n"
    },
    {
      "time": "",
      "content": "Speaking of sharing scripts, does anybody here have RoboFog? There's a script by Peter van Blokland called \"Corner Rounder\" or something that I'd like to check out - not to copy or port, just to see if there's some smart code in there I could learn from.   \n   \nhhp\n\n"
    },
    {
      "time": "",
      "content": "\"I'll have to ask Yuri.\"   \nThank you John ![:-)](http://web.archive.org/web/20110220224309im_/http:/www.typophile.com/forums/clipart/happy.gif)   \n   \nThe RoboFog site has been dead for some time, any one got news about the new version?   \n   \nIs there a FL/Python free script exchange site somewhere? Maybe something for the Typophile Downloads section?\n\n"
    },
    {
      "time": "",
      "content": "There is a special **mail list** here:   \n [http://mail.letterror.com/mailman/listinfo/fontlab-scripting](http://web.archive.org/web/20110220224309/http:/mail.letterror.com/mailman/listinfo/fontlab-scripting)   \n   \nThere is a **Python page** on our site: [http://www.fontlab.com/html/python.html](http://web.archive.org/web/20110220224309/http:/www.fontlab.com/html/python.html)   \nbut it is not updated very often.   \n   \nYou can download **\"Make Family\" script** from here:   \n [http://www.font.to/\\_data/blend.py](http://web.archive.org/web/20110220224309/http:/www.font.to/_data/blend.py)   \n   \nIt looks that for some reason we did not include it into the Mac package. We will fix that.   \n   \nBest regards,   \nYuri Yarmola\n\n"
    },
    {
      "time": "",
      "content": "\\> The RoboFog .... new version?   \n   \nConsidering Just and Erik's own substantial participation on the FontLab-Scripting list, I have to suspect that RoboFog development has been abandoned.   \n   \nhhp\n\n"
    },
    {
      "time": "",
      "content": "Yuri, thanks so much for the \"Make Family\" script. While it looks like I've got quite a bit of manual correcting ahead of me, it quickly produced a great base to start from!   \n  \nCheers!\n\n"
    },
    {
      "time": "",
      "content": "_Considering Just and Erik's own substantial participation on the FontLab-Scripting list, I have to suspect that RoboFog development has been abandoned._   \n   \n [http://www.letterror.com/code/robofab/index.html](http://web.archive.org/web/20110220224309/http:/www.letterror.com/code/robofab/index.html)\n\n"
    },
    {
      "time": "",
      "content": "Wow. Heavy. And a bit confusing still (to me).   \n   \nSo there's not the connection to Fontographer than RoboFog was based on, right?   \n   \nhhp\n\n"
    },
    {
      "time": "",
      "content": "Hrant,   \n   \nno -- that's why it's called RoboFab (a name that could be expanded into something like Robotic Fabulous FontLab). There is more in-depth comments about the ideas behind it on the FontLab-Scripting list: [http://mail.letterror.com/pipermail/fontlab-scripting/2003-July/thread.html](http://web.archive.org/web/20110220224309/http:/mail.letterror.com/pipermail/fontlab-scripting/2003-July/thread.html)  \n(just read everything for July).   \nThe RoboFog MkII was supposed to be free of the Fontographer code, but it seemed like completely writing a font editor in Python from scratch was a bit too heavy. But now, with Just's FontTools (in-depth technical font manipulation) and Yuri's FontLab (a more abstract and more universal toolset), the Dutch Connection and House's Tal Leming seem to be back in game ![:-)](http://web.archive.org/web/20110220224309im_/http:/www.typophile.com/forums/clipart/happy.gif)  \nAdam\n\n"
    },
    {
      "time": "",
      "content": "One should consider that multiple master can be used as a design tool, without ever generating multiple master fonts in the end. Most recent Adobe fonts were designed in MM space, without ever being built as MMs.   \n   \nPersonally, I would add a weight axis to the regular, design the black weight, extrapolate the light weight, set it as the new master at the light end, and then clean it up.   \n   \nOne good piece of advice Robert Slimbach gave me on the family I'm working on right now was that designing the extreme masters and interpolating really helps the intermediate weights come out better. It forces you to fix things in the extreme masters that might not be so noticeable in intermediate weights.   \n   \nCheers,   \n   \nT\n\n"
    },
    {
      "time": "",
      "content": "So you're saying that when you design type you should design the light and the black and then get your regular and other weights by morphing between the two instead of drawing each weight separately?\n\n"
    },
    {
      "time": "",
      "content": "Well, \"should\" is to strong a word. I'm saying you **can** do it, and that for anything more than three weights it can be faster (although maybe not the first time you do it). Plenty of very nice typefaces have been developed this way, including most of Robert Slimbach's designs.   \n   \nThere are cases where you wouldn't want to do it this way, or where you'd use an intermediate master on the weight axis (something that FontLab doesn't directly support).   \n   \nRegards,   \n   \nT\n\n"
    },
    {
      "time": "",
      "content": "\\> design the light and the black and then get your regular   \n   \nI think that's dangerous. The _eventual_ Regular might be better interpolated from the extremes, but since the Regular is the heart of the design (in terms of usage), the extremes should really spawn from it.   \n   \nhhp\n\n"
    },
    {
      "time": "",
      "content": ":sigh: So much to think about.   \n   \nI get enough headaches as it is\n\n"
    },
    {
      "time": "",
      "content": "The point is to let your head explode, and then compared to putting it back together, type design is less daunting an exercise.\n\n"
    },
    {
      "time": "",
      "content": "\\> there is a lot of cleanup   \n   \nUnless it's an overly complex design with an inherent issue with interpolation, I find that iteratively tweaking the extremes to get intermediates that don't need any adjustments themselves (except correcting rounding errors) is of great benefit. The reason isn't just design elegance, it's practicality: if you change your mind about what the intermediate(s) should be, or if a client wants a custom instance later on, it's much quicker.   \n   \nhhp\n\n"
    },
    {
      "time": "",
      "content": "My understanding is that the scripting provided by   \nRoboFog (for [Fontographer](http://web.archive.org/web/20110220224309/http:/www.macromedia.com/)) was what separated the   \nenthusiasts from the professionals, and is why I've   \nassumed some of the more established shops were   \nhanging onto FOG.   \n   \nIs RoboFab (for [FontLab](http://web.archive.org/web/20110220224309/http:/www.font.to/cgibin/at.cgi?a=227536)) the final nail in the   \nFontographer coffin? (Is it the catalyst I think it is for   \nthese shops to make the switch?)\n\n"
    },
    {
      "time": "",
      "content": "I heard Jonathan Hoefler describe the development of   \n [Champion](http://web.archive.org/web/20110220224309/http:/www.typography.com/catalog/champion/index.html) in the same way Thomas describes. Of   \ncourse that was 4 years ago, so I'll have to fudge the   \ndetails. But in essence the method is to start with the   \nregular weight, then manually design the extremes (the   \nwidest black and the narrowest thin). Then have the   \nsoftware create the basis for the intermediate weights. (If   \nmy memory is correct, the software would've generated 3   \nweights of Champion.) Then of course, there is a lot of   \ncleanup work to do to add some human care/finesse to the   \nintermediate weights.   \n   \nIn other words, the computer can help take some of the   \ntedium out of the process, but it can't make up for   \nattention to detail.\n\n"
    },
    {
      "time": "",
      "content": "While we're at it, I'd love to ask David Thometz what his   \nplans are for developing the other weights of his über-   \nfamily [Seriatim](http://web.archive.org/web/20110220224309/http:/www.typophile.com/forums/messages/29/989.html).\n\n"
    }
  ]
}

{
  "id": "43702",
  "title": "TeX & troff -- The Red-headed Stepchildren of Typography?",
  "forum": "General Discussions",
  "tags": [
    "General Discussions"
  ],
  "content": "I've returned to the world of typesetting after a long absence, and have been reading what seem to be considered the standard current works on typography (Bringhurst, \"Thinking With Type\", \"Stop Stealing Sheep\", etc.) and have been reading some recent books on book design, and I am struck by how many accounts of the transition to digital typography assume that it began with the Macintosh and PageMaker.\n\nBell Labs was using troff to drive a C/A/T phototypesetter in the early 1970s (to prepare patent applications; it was the excuse that they used to fund the development of the Unix operating system). When I was a summer employee at the department of Computational Science at the University of Saskatchewan in 1982, we were using troff to typeset a textbook (\"An Introduction to Data Structures with Applications\" by Tremblay and Sorenson). troff, in those days, had one font (a Times Roman-ish sort of thing) with italic and bold versions, in multiple sizes. But it was certainly better than using a typewriter, or even a daisy-wheel printer, and many computer science theses, as well as many computer science texts, were made using it. It appears to have been in use for book production into the early 1990s.\n\nDonald Knuth's TeX emerged in the form we currently know in 1982 (although there have been some revisions since then). Leslie Lamport's LaTeX document processing system, built on top of TeX, appeared a few years later. LaTeX has been used to produce many books and papers in computer science, mathematics, physics, and chemistry. TeX and LaTeX are still under active development, and there are versions that do microtypography (pdfTeX) and that support Unicode and OpenType fonts (XeTeX). As far as I know, nothing else comes close to TeX for setting mathematics. All kinds of good work can be done with it (see [http://www.tug.org/texshowcase](http://web.archive.org/web/20150419013307/http:/www.tug.org/texshowcase \"http://www.tug.org/texshowcase\")).\n\nThere were other systems, too: Brian Reid's Scribe; one called SMUT, which Douglas Hofstadter used to typeset \"Godel, Escher, Bach: An Eternal Golden Braid\"; ATEX, used by newspapers; and doubtless others that I haven't heard about.\n\nSo what puzzles me is why these systems, so important in scientific work (particularly troff and TeX), don't get any mention in most accounts of typographic history. Is it a cultural thing? Are people outside of the scientific and mathematical communities simply unaware of them? Is it an issue of snobbery? Is mark-up based software, originated by a computer scientist and not a typographic insider, looked down upon or considered a joke?\n\nI'm not trying to use this post to say that troff or TeX are better or worse than InDesign or Quark or whatever. I just wonder why they always seem to be overlooked.\n\n",
  "author": "jb_tubman",
  "time": "30 Mar 2008 — 3:11pm",
  "uid": "28605",
  "comments": [
    {
      "time": "30 Mar 2008 — 4:04pm",
      "content": "This isn’t just a TeX thing, it’s an open source thing. I tried using TeX, and like a lot of F/OSS software, it just wasn’t worth the bother. Indesign is just so much easier to use for everything I need to do that it more than justifies the cost of the software. No screwing around with dependencies, X, or compiling, I just install it and it works. For me it always comes back to that old saying “Free software is only free if you time is worth nothing.” My time is worth enough to keep me far, far away from TeX.\n\n"
    },
    {
      "time": "30 Mar 2008 — 7:03pm",
      "content": "I agree that it's odd that the text-markup systems haven't been more widely discussed. Some of it may be timing: in their heyday of only a decade or so between the phototypesetting era and the DTP era, there wasn't much time for markup technology to get much of a foothold. And once the Mac/PageMaker combo came along, the markup systems could never be more than a tiny niche market.\n\nMarkup systems imply a certain amount of programming, or at least an understanding of text processing. That's pretty far away from most designers' experience, and perhaps requires a lot more explanation than the history writers want to spend on what seems to be a dead market. (Although ironically, the entire web design field is based on much of the same markup languages.)\n\nIn fact, I think you'll find that very little information about phototypesetting is mentioned in the histories, either. It's usually glossed over in generic terms, as a stopgap between letterpress and digital.\n\nI did dig up my copy of Richard Rubinstein's <cite>Digital Typography,</cite> published in 1988, and found that he describes details and provides examples of several markup systems, including TeX, troff (or other RUNOFF descendents), as well as PostScript and other page description languages.\n\nAs an old-time user of troff-like systems (I once wrote a troff clone for a Royal laser printer, circa 1984), and a sometime-user of TeX systems, I'd have to count most of markup technology as a good pioneering try, but in the end either too specific or too technical to make much of a difference in typographic history. As you mention, troff, TeX, and to some extent Scribe has been used in the CS community for typesetting of papers and books. However, I believe these markup systems have been used primarily for more functional reasons, rather than reasons of typographic quality, including:\n\n1. Restricting texts to being formatted in a house style.\n2. Representing mathematical formulas in an acceptable notation.\n3. Being \"programmable,\" in terms of being a tool in a batch-oriented process run automatically.\n\nThese reasons are quite valid in their context. But if you look at TeX without math formatting, you find an obscure system with odd formatting defaults that only does decent typography with a lot of work. Troff is even more basic, with little to no typographic control, as you mentioned. Scribe had interesting potential, but was sold off and apparently abandoned long before its time in the limelight. (Brian Reid once worked for my father, I think just before Brian wrote Scribe.)\n\nPerhaps later histories will revise the view that all digital typography started with the Mac. But I'm not certain that the message will be that the earlier digital typography had been so unfairly pushed under the mat.\n\n--John\n\n"
    },
    {
      "time": "30 Mar 2008 — 7:17pm",
      "content": "I love threads like this one. I learn so much! But yeah, there is a rather Mac-centric thrust to the design world. TeX is good at what it does, but it is not exactly user-friendly in the way that a Mac is.\n\n"
    },
    {
      "time": "30 Mar 2008 — 7:38pm",
      "content": "<cite>Markup systems imply a certain amount of programming, or at least an understanding of text processing. That’s pretty far away from most designers’ experience…</cite>\n\nI don’t think that markup systems or programming are too bad: I know plenty of designers who deal with XHTML, CSS, and Javascript/Action script on a regular basis. But most of them don’t want to deal with anything as obtuse as TeX, as it’s just a pain in the butt, designed with mathematicians and CS geeks in mind.\n\n"
    },
    {
      "time": "30 Mar 2008 — 8:38pm",
      "content": "I'm not one to argue that TeX is good for all typesetting purposes or to argue that it doesn't have a steep learning curve, and all those probably are reasons for its relative obscurity outside of technical fields. However, I hate to let a thread like this go by without at least mentioning that it's gotten much easier to install TeX and friends in Windows and Mac in recent years. No compiling or worrying about dependencies. Nice GUI editors that help you with all the commands you may not remember. I'd hate for anyone who hasn't tried TeX to be unduly frightened of the experience.\n\nThe most important thing I had when learning TeX was an expert to whom I could ask questions. Often things were easy once I was pointed in the correct direction.\n\nst\n\n"
    },
    {
      "time": "30 Mar 2008 — 9:43pm",
      "content": "No use complaining Jim, you should remedy the situation and state your case in the various media which are unaware of the improtance of your genre. A magazine article for _eye_ or _Print,_ a book for Hyphen, a talk at ATypI. Do you have a collection of exemplary scientific/technical typography? Is there a TeX awards competiton?\n\n"
    },
    {
      "time": "31 Mar 2008 — 8:37am",
      "content": "Interesting. Just last week (or maybe two back) I started using TeX again after 10 or 15 years away from it. I am doing online science courses, and it was taking forever to make the mathematical equations in Illustrator. I installed TeX, and suddenly I can produce them in 1/4 the time.\n\nBut I don't want to ever, ever do a non-math book with TeX again.\n\n"
    },
    {
      "time": "31 Mar 2008 — 9:59am",
      "content": "I'm not a designer as such, but rather an author who also designs. So, from a strictly design point of view, I can see how Tex may not be ideal. But from an author's point of view, Tex is more useful than anything else that I've used for document creation. A large chunk of that usability derives from the fact that I can create tex files which can be typeset, converted to online formats, and manipulated in many other ways. One of the problems I had with my early books (e.g. rosslaird.info/grain/ ) was that once the design was completed using InDesign, the text was pretty much set into that format, and it was quite difficult to extract material in such a way that the extraction (e.g. for web excerpts) was seamless and standards compliant. Futzing around between InDesign and standards-compliant html (not to mention css) has not, in my experience, been very fun. But Tex obviates all that. I simply create my documents in plain text, using ReStructured Text or something similar, then run the text through LaTeX and whatever other automated process I want, so that at the end I have Tex, html (with css), or whatever. From a document management point of view this is perfect: transportable, centralized, simple.\n\nI have not used XeTex, but I do use all of my OpenType fonts with Tex. And as far as typesetting goes, the Tex algorithm is/was (I think) the basis for the algorithms used in current software such as InDesign. I am not an expert in this area, but I have never heard anyone say that Tex typography is inferior to any other system. Usually what I hear is that it is superior (but that may just be geek-speak). Sure, Tex requires knowledge of the markup; but actually not too much, and these days most people who are involved with the production of fine documents (for the web or elsewhere) are familiar with markup.\n\nI suppose much of this boils down to familiarity, workflow, and interface. I've used pretty much everything available since 1986, and my preference, overall, is for Tex. But as I said, design is only one part of what I do, so for those whose main gig is design, Tex may not be ideal. (I'm thinking here of fixed documents that will not be required to have online versions, for example.) But for me, I appreciate Tex's way of preserving the plain text and using it with great flexibility. And the output looks great too.\n\nRoss\n\n"
    },
    {
      "time": "31 Mar 2008 — 11:01am",
      "content": "I've done three non-mathematical books with TeX. Since the manuscripts were in plain ASCII, it was easy ... but then I'm a computer geek. I had some experience with a Mergenthaler phototypesetting system years ago & TeX makes sense for me.\n\n"
    },
    {
      "time": "31 Mar 2008 — 11:53am",
      "content": "I think that the main problem with TeX, and its variants, is that it has become somewhat trapped in a vicious circle. It is widely perceived as only being for suitable for writing scientific/mathematical papers with a result that only scientists and mathematicians tend to use it. This also means that most of the books and websites written about it tend to come from that angle which can put people off who are from the arts side of things. This is quite unfortunate, as TeX does produce very good looking documents and, once one has got to grips with it, it is relatively easy to use. Indeed, I don't use anything else for my day-to-day work and hate it when I am forced to do something on Microsoft Word or Open Office.\n\nI think that where the TeX and the Document Preparation Systems are particularly strong is not as a replacement for DTP software but as a replacement for a word-processor. Therefore their target market is unlikely to be designers for whom DTP software offers WYSIWYG control.\n\nAs I see it, the great advantage of TeX is that one can just type the document, without worrying at all about formatting, and then have TeX automatically convert that into something that could quite acceptably be published. Whilst DTP software gives the designer finer control, I certainly wouldn't like using InDesign every time I write a letter.\n\nA good example of where I think TeX is particularly useful if if one works in a field where documents with numbered paragraphs are the norm. Getting a word processor to do this accurately is a complete pain, unless one has preprepared the document and I think the same applies to most DTP (though I'm not an InDesign expert). With TeX, it is simply a case of putting two lines of code at the top of the document. Then you can forget about it, knowing that no matter how much you mess around with and revise the document, the numbers will always be right!\n\nThere are few difficulties (some historic) that I think are unfortunate:\n\n1) Sticking my neck on the line a bit, I think that plain TeX is now much more intuitive for most people to use than LaTeX, despite the common perception of the opposite. LaTeX very much forces the user into using the LaTeX \"house style\", which although results in good looking documents, requires quite a lot of hackery to change. Plain TeX, gives the user more of a blank sheet from which to work. Since the advent of Word Processors and the like this much less of a problem than it was in the early 80s: most people are now quite comfortable with deciding what their section headings and the like should look like and the LaTeX defaults can somewhat get in the way.\n\n2) Computer Modern is, ermm..., interesting as a default typeface choice!\n\n3) The learning curve is still near vertical...For example, the two lines of code I was talking about above are:\n\n\\newcount\\parnumber \\parnumber =0  \n\\everypar{\\advance\\parnumber by1 \\the\\parnumber. }\n\nI think XeTeX, ConTeXt and LyX are, however, helping alleviate these. I especially think that if LyX could produce \"purer\" TeX and then strapped onto XeTeX (which has excellent OpenType support and avoids all of the old font problems associated with TeX), then its popularity would increase a lot.\n\n-Jacob\n\n"
    },
    {
      "time": "31 Mar 2008 — 12:40pm",
      "content": "Jacob;\n\nI'm curious to know where \"DTP software gives the designer finer control.\" I don't use DTP software, at least not for a few years, and I imagine it has come a long way. Tex seems to be able to do all sorts of crazy stuff that I never use -- like, for example, being able to flow text into all kinds of mathematically-defined shapes. In Peter Wilson's manual for the memoir class there's a poem that has been formatted as a swirl on the page, and that's pretty cool. But I suppose what I'm asking is: does DTP software offer something typographical that Tex can't do? Or do you mean that DTP software offers easier ways of doing certain typographical functions -- which I could easily understand. Just curious.\n\nRoss\n\nOh, and about Computer Modern: Yup, a strange choice. You'd think that Knuth, who worked with Zapf, would have chosen Palatino at least. I'm sure glad that I have access to all of my OpenType fonts in Latex, thanks to John Owens: [http://www.ece.ucdavis.edu/~jowens/code/otfinst/](http://web.archive.org/web/20150419013307/http:/www.ece.ucdavis.edu/~jowens/code/otfinst/ \"http://www.ece.ucdavis.edu/~jowens/code/otfinst/\")\n\n"
    },
    {
      "time": "31 Mar 2008 — 1:09pm",
      "content": "Computer Modern was a bit of a no brainer, as \"Modern\" had been the main type used for scientific and academic documents for 150 years.  \nAll the sorts are well established.  \nIt is actually very \"disambiguous\" for things like math, as its complex forms enable great distinction between all kinds of glyphs. For instance, the pot-hook serifs on the italic prevent entanglement of superior and inferior letters with numbers in complex formulae--an advantage that becomes apparent when comparing with the ClearType math font.\n\n"
    },
    {
      "time": "31 Mar 2008 — 2:23pm",
      "content": "Ross:\n\nSorry, I wasn't being very clear. What I should have said is that DTP software tends to make it easier for designers to exploit a fine degree of control because the setting is conducted on a \"trial and error\" basis. The most notable example would be with images. In any WYSIWYG software, one can usually just drag the image around the page until its position looks right, even if that is 2.45387cm from the margin. With TeX, one has to specify the image's location and then compile the file to check, which is considerably more time consuming. Another example would be font sizes. With most DTP software, to try all 20 font sizes between 8pt and 10pt in 0.1pt increments is simply a case of pressing a button 20 times. In TeX, one would have to edit the tex file, save, compile and open the PDF 20 times. Although this can be done quite quickly with a good text editor, it still is a more lengthy process. I think with TeX one has to have a clear idea in one's mind as to how the final document will look, as experimentation is a bit of a pain to carry out.\n\nThis is not necessary a problem, indeed pre-DTP, publishing was more like working with TeX in that the designer would have to specify the design and have proofs printed without being able to play with a faithful resolution on a screen. However, I don't think I'd like to set any full-colour magazines in TeX!\n\nBTW, have a look at XeTeX...it has two advantages over plain TeX in that it will happily operate in UTF-8 and will use any font installed on your system (or even a font-file not installed if you specify the path) without the need for any conversion.\n\nNick:\n\nThat's a fair point and I was being a bit flippant. However, I do think that the CM Serif is not Knuth's best work. For instance, his CM Sans-serif is considerably better and, of course, he collaborated extensively with Zapf, both of which suggest that a better default face would have been possible.\n\nOf the typefaces now available, Palatino is probably the most popular for people not using CM but there are also TeX versions of Bondoni and Didot which I think would be better Modern choices as defaults.\n\n-Jacob\n\n"
    },
    {
      "time": "31 Mar 2008 — 2:55pm",
      "content": "Jacob;\n\nThanks for the clarification. That's what I thought you meant. Though, I find more and more that with tools such as auctex/emacs I can get two windows side by side -- one with the tex file and one with the pdf -- and have instant updating from one to the other. That's pretty cool -- but yes, when I design a poster, I don't use Tex.\n\nI am thinking of switching to xetex. Many people seem to be doing so, and although it's very early in development, it seems to be getting lots of attention.\n\nRoss\n\n"
    },
    {
      "time": "31 Mar 2008 — 10:51pm",
      "content": "Everyone, thanks for the thoughtful comments.\n\nJohn Labovitz: Thanks for the pointer to Rubinstein's book; I will have to try to find a copy. Those are some good points you make.\n\nNick Shinn: Didn't intend to sound like I was complaining; I'm more curious to find out why markup-based systems seem to have remained unknown outside their little ghetto. There have been some good histories of TeX written by people who have more insiders' knowledge than I do (Nelson Beebe's \"The Design of TeX and METAFONT: A retrospective\" is useful but is more from a computer science point of view than a typographical one).\n\nRoss Laird: Good point about being able to process the text in other ways.\n\nJacob H: Very true about the numbered paragraphs. I have had the unpleasant experience at work recently of having to revise a 700 page technical document (with 8 levels of section numbering (yuck!)) in Microsoft Word. It is the sort of job that a system like TeX/LaTeX is made for (except that it would have to be extended to handle 4 more levels of section numbering).\n\nAnd as for Computer Modern -- the best thing I can say about it is that a book set in CM looks a lot better than one that was written on a typewriter, which was not uncommon in the early 1980s (especially computer science texts from the UK). I use XeTeX and it works quite nicely with Adobe Garamond Premier Pro.\n\nA note to James Puckett regarding free and open-source software: Typophile.com appears to be hosted on the Linux operating system, running the Apache web server, which are open source. [http://toolbar.netcraft.com/site\\_report?url=http://www.typophile.com](http://web.archive.org/web/20150419013307/http:/toolbar.netcraft.com/site_report?url=http://www.typophile.com \"http://toolbar.netcraft.com/site\\_report?url=http://www.typophile.com\") But your point about what your time is worth is well taken. TeX vs desktop publishing is a bit like ham radio vs cell phones -- you have to be something of an enthusiast to make it do everything it's capable of.\n\nThere are cases where TeX and friends are used as \"back ends\" for formatting output produced by other software. DocBook markup can be handled that way. The TeX showcase has an example of a catalog generated directly from a database and formatted using TeX; that would be difficult to do with a WYSIWYG DTP system, I would think.  \n [http://www.tug.org/texshowcase/en\\_gb\\_eclipse\\_114.pdf](http://web.archive.org/web/20150419013307/http:/www.tug.org/texshowcase/en_gb_eclipse_114.pdf \"http://www.tug.org/texshowcase/en\\_gb\\_eclipse\\_114.pdf\")\n\nI've had good results using TeXShop on the Mac, using LaTeX markup and XeTeX so that I can use the fonts normally installed on my computer. It is nearly WYSIWYG; the generated PDF is displayed in a window right beside the markup editor window, and you can run TeX on it by pushing a single key.\n\ntroff seems to have run its course. The last book I saw that was set with troff was in 1995 or so. Apparently there is now a version of troff that will use OpenType fonts, but I haven't tried it.\n\nSo it would seem that the answer to my original question is that markup based systems like TeX and troff are not mentioned in mainstream histories of typography for cultural reasons. There is not much awareness of them outside the world of mathematics and science; they wouldn't come to the attention of someone who didn't have to set complex mathematics. This isn't surprising given that, in their heyday, using them required a computer that cost a 5 or 6 figure sum and had to be kept in an air-conditioned room.\n\nMaybe there should be another thread: \"TeX & troff -- The Ham Radio of Typesetting?\"\n\n:-)\n\nJim Tubman  \nCalgary, Alberta, Canada  \n\"The Stampede City\"\n\n"
    },
    {
      "time": "1 Apr 2008 — 9:48am",
      "content": "TeX Users Group will be participating in Google's Summer of Code. Details at [http://www.tug.org](http://web.archive.org/web/20150419013307/http:/www.tug.org/ \"http://www.tug.org\") .\n\n"
    }
  ]
}
